{"remainingRequest":"C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\src\\view\\company\\company-modify.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\src\\view\\company\\company-modify.vue","mtime":1656036094000},{"path":"C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1677772052210},{"path":"C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\node_modules\\babel-loader\\lib\\index.js","mtime":1677771858682},{"path":"C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1677772052210},{"path":"C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\node_modules\\vue-loader\\lib\\index.js","mtime":1677772060461}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { HRCompany } from '@/model/hrCompany'\nimport { Company } from '@/model/company'\nimport UploadImgs from '@/component/base/upload-image'\nimport CompanyCreate from '@/view/company/company-create'\n\nexport default {\n  components: {\n    UploadImgs,\n    CompanyCreate,\n  },\n  data() {\n    return {\n      loading: false,\n      form: {\n      },\n      maxNum: 1,\n      initData: [],\n      showCreate: false,\n    }\n  },\n  async mounted() {\n    try {\n      this.loading = true\n      const res = await HRCompany.get(this.$store.getters.user.id)\n      this.initData = [\n        {\n          id: res.id,\n          display: res.logo,\n        },\n      ]\n      this.form = res\n      this.loading = false\n    } catch (error) {\n      this.loading = false\n      console.log(error)\n      // 还未完成企业认证，会显示企业认证组件\n      this.showCreate = true\n    }\n  },\n  methods: {\n    // 上传图片之后，获取服务器返回的url地址\n    async getValue() {\n      const val = await this.$refs.uploadEle.getValue()\n      if (val && val.length > 0) {\n        this.form.logo = val[0].display\n      }\n    },\n    async submitForm() {\n      await this.getValue()\n      const res = await Company.update(this.form.id, this.form)\n      // 修改公司状态为待审核，即state=0（每修改一次企业信息之后，都需要经过管理员再次审核）\n      await Company.updateState(this.form.id, 0);\n      if (res.code < window.MAX_SUCCESS_CODE) {\n        this.$message.success(`${res.message}`)\n      }\n      // 刷新页面，获取修改后的最新信息\n      this.loading = true\n      const result = await HRCompany.get(this.$store.getters.user.id)\n      this.initData = [\n        {\n          id: result.id,\n          display: result.logo,\n        },\n      ]\n      this.form = result\n      this.loading = false\n    },\n    // 重置表单\n    resetForm(formName) {\n      this.$refs[formName].resetFields()\n    },\n    async createClose() {\n      this.showCreate = false\n      // 再次访问接口填充表单数据\n      this.loading = true\n      const res = await HRCompany.get(this.$store.getters.user.id)\n      this.initData = [\n        {\n          id: res.id,\n          display: res.logo,\n        },\n      ]\n      this.form = res\n      this.loading = false\n    },\n  },\n}\n",{"version":3,"sources":["company-modify.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmDA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"company-modify.vue","sourceRoot":"src/view/company","sourcesContent":["<template>\n  <!-- 我的企业信息页面 -->\n  <div class=\"container\" v-if=\"!showCreate\">\n    <div class=\"title\" style=\" text-align: left;\">\n      <span>我的企业信息</span>\n    </div>\n    <el-divider></el-divider>\n    <div class=\"wrap\">\n      <el-row>\n        <el-col :lg=\"16\" :md=\"20\" :sm=\"24\" :xs=\"24\">\n          <el-form :model=\"form\" status-icon ref=\"form\" label-width=\"100px\" v-loading=\"loading\" @submit.native.prevent>\n            <!-- 公司名称不设置prop属性，重置的时候就不会重置该字段 -->\n            <el-form-item label=\"公司名称\">\n              <el-input size=\"medium\" v-model=\"form.name\" placeholder=\"请填写公司名称\" disabled></el-input>\n            </el-form-item>\n            <el-form-item label=\"公司外文名\" prop=\"foreign_name\">\n              <el-input size=\"medium\" v-model=\"form.foreign_name\" placeholder=\"请填写公司外文名\"></el-input>\n            </el-form-item>\n            <el-form-item label=\"总部地点\" prop=\"city\">\n              <el-input size=\"medium\" v-model=\"form.city\" placeholder=\"请填写公司总部地点\"></el-input>\n            </el-form-item>\n            <el-form-item label=\"公司logo\" prop=\"logo\">\n              <upload-imgs :max-num=\"maxNum\" ref=\"uploadEle\" :value=\"initData\" />\n            </el-form-item>\n            <el-form-item label=\"公司使命\" prop=\"mission\">\n              <el-input size=\"medium\" v-model=\"form.mission\" placeholder=\"请填写使命\"></el-input>\n            </el-form-item>\n            <el-form-item label=\"公司简介\" prop=\"description\">\n              <el-input size=\"medium\" type=\"textarea\" :rows=\"4\" placeholder=\"请输入公司简介\" v-model=\"form.description\">\n              </el-input>\n            </el-form-item>\n            <el-form-item label=\"认证状态\" prop=\"state\">\n              <!-- <el-switch v-model=\"form.state\"></el-switch> -->\n              <span v-if=\"form.state\" style=\"color:green\">审核通过</span>\n              <span v-else style=\"color:brown\">待审核</span>\n            </el-form-item>\n            <el-form-item class=\"submit\">\n              <el-button type=\"primary\" @click=\"submitForm('form')\">保 存</el-button>\n              <el-button @click=\"resetForm('form')\">重 置</el-button>\n            </el-form-item>\n          </el-form>\n        </el-col>\n      </el-row>\n    </div>\n  </div>\n\n  <!-- 企业认证 -->\n  <company-create v-else @createClose=\"createClose\"></company-create>\n</template>\n\n<script>\nimport { HRCompany } from '@/model/hrCompany'\nimport { Company } from '@/model/company'\nimport UploadImgs from '@/component/base/upload-image'\nimport CompanyCreate from '@/view/company/company-create'\n\nexport default {\n  components: {\n    UploadImgs,\n    CompanyCreate,\n  },\n  data() {\n    return {\n      loading: false,\n      form: {\n      },\n      maxNum: 1,\n      initData: [],\n      showCreate: false,\n    }\n  },\n  async mounted() {\n    try {\n      this.loading = true\n      const res = await HRCompany.get(this.$store.getters.user.id)\n      this.initData = [\n        {\n          id: res.id,\n          display: res.logo,\n        },\n      ]\n      this.form = res\n      this.loading = false\n    } catch (error) {\n      this.loading = false\n      console.log(error)\n      // 还未完成企业认证，会显示企业认证组件\n      this.showCreate = true\n    }\n  },\n  methods: {\n    // 上传图片之后，获取服务器返回的url地址\n    async getValue() {\n      const val = await this.$refs.uploadEle.getValue()\n      if (val && val.length > 0) {\n        this.form.logo = val[0].display\n      }\n    },\n    async submitForm() {\n      await this.getValue()\n      const res = await Company.update(this.form.id, this.form)\n      // 修改公司状态为待审核，即state=0（每修改一次企业信息之后，都需要经过管理员再次审核）\n      await Company.updateState(this.form.id, 0);\n      if (res.code < window.MAX_SUCCESS_CODE) {\n        this.$message.success(`${res.message}`)\n      }\n      // 刷新页面，获取修改后的最新信息\n      this.loading = true\n      const result = await HRCompany.get(this.$store.getters.user.id)\n      this.initData = [\n        {\n          id: result.id,\n          display: result.logo,\n        },\n      ]\n      this.form = result\n      this.loading = false\n    },\n    // 重置表单\n    resetForm(formName) {\n      this.$refs[formName].resetFields()\n    },\n    async createClose() {\n      this.showCreate = false\n      // 再次访问接口填充表单数据\n      this.loading = true\n      const res = await HRCompany.get(this.$store.getters.user.id)\n      this.initData = [\n        {\n          id: res.id,\n          display: res.logo,\n        },\n      ]\n      this.form = res\n      this.loading = false\n    },\n  },\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.el-divider--horizontal {\n  margin: 0;\n}\n\n.container {\n  .title {\n    height: 59px;\n    line-height: 59px;\n    color: $parent-title-color;\n    font-size: 16px;\n    font-weight: 500;\n    text-indent: 40px;\n\n    .back {\n      float: right;\n      margin-right: 40px;\n      cursor: pointer;\n    }\n  }\n\n  .wrap {\n    padding: 20px;\n  }\n\n  .submit {\n    float: left;\n  }\n}\n</style>\n"]}]}