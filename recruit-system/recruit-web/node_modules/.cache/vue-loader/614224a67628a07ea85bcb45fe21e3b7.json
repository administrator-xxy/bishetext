{"remainingRequest":"C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\src\\component\\layout\\user.vue?vue&type=template&id=06317f16&scoped=true&","dependencies":[{"path":"C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\src\\component\\layout\\user.vue","mtime":1656036094000},{"path":"C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1677772052210},{"path":"C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1677772060461},{"path":"C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1677772052210},{"path":"C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\node_modules\\vue-loader\\lib\\index.js","mtime":1677772060461}],"contextDependencies":[],"result":["var render = function () {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    { staticClass: \"user\" },\n    [\n      _c(\n        \"el-dropdown\",\n        [\n          _c(\"span\", { staticClass: \"el-dropdown-link\" }, [\n            _c(\"div\", { staticClass: \"nav-avatar\" }, [\n              _c(\"img\", {\n                attrs: {\n                  src: _vm.user.avatar || _vm.defaultAvatar,\n                  alt: \"头像\",\n                },\n              }),\n            ]),\n          ]),\n          _c(\n            \"el-dropdown-menu\",\n            {\n              staticClass: \"user-box\",\n              attrs: { slot: \"dropdown\" },\n              slot: \"dropdown\",\n            },\n            [\n              _c(\"div\", { staticClass: \"user-info\" }, [\n                _c(\n                  \"div\",\n                  { staticClass: \"avatar\", attrs: { title: \"点击修改头像\" } },\n                  [\n                    _c(\"img\", {\n                      attrs: {\n                        src: _vm.user.avatar || _vm.defaultAvatar,\n                        alt: \"头像\",\n                      },\n                    }),\n                    _c(\"label\", { staticClass: \"mask\" }, [\n                      _c(\"i\", {\n                        staticClass: \"iconfont icon-icon-test\",\n                        staticStyle: { \"font-size\": \"20px\" },\n                      }),\n                      _c(\"input\", {\n                        ref: \"avatarInput\",\n                        attrs: { type: \"file\", accept: \"image/*\" },\n                        on: { change: _vm.fileChange },\n                      }),\n                    ]),\n                  ]\n                ),\n                _c(\n                  \"div\",\n                  { staticClass: \"text\" },\n                  [\n                    !_vm.nicknameChanged\n                      ? _c(\n                          \"div\",\n                          {\n                            staticClass: \"username\",\n                            on: { click: _vm.changeNickname },\n                          },\n                          [_vm._v(_vm._s(_vm.nickname))]\n                        )\n                      : _c(\"el-input\", {\n                          ref: \"input\",\n                          attrs: { placeholder: \"请输入内容\", size: \"small\" },\n                          on: { blur: _vm.blur },\n                          model: {\n                            value: _vm.nickname,\n                            callback: function ($$v) {\n                              _vm.nickname = $$v\n                            },\n                            expression: \"nickname\",\n                          },\n                        }),\n                  ],\n                  1\n                ),\n                _c(\"img\", {\n                  staticClass: \"corner\",\n                  attrs: { src: require(\"../../assets/image/user/corner.png\") },\n                }),\n              ]),\n              _c(\"ul\", { staticClass: \"dropdown-box\" }, [\n                _c(\n                  \"li\",\n                  { staticClass: \"password\", on: { click: _vm.goToCenter } },\n                  [\n                    _c(\"i\", {\n                      staticClass: \"iconfont icon-weibaoxitongshangchuanlogo-\",\n                    }),\n                    _c(\"span\", [_vm._v(\"个人中心\")]),\n                  ]\n                ),\n                _c(\n                  \"li\",\n                  { staticClass: \"account\", on: { click: _vm.outLogin } },\n                  [\n                    _c(\"i\", { staticClass: \"iconfont icon-tuichu\" }),\n                    _c(\"span\", [_vm._v(\"退出账户\")]),\n                  ]\n                ),\n              ]),\n            ]\n          ),\n        ],\n        1\n      ),\n      _c(\n        \"el-dialog\",\n        {\n          attrs: {\n            title: \"裁剪\",\n            visible: _vm.cropVisible,\n            width: \"300px\",\n            \"append-to-body\": true,\n            \"close-on-click-modal\": false,\n            \"custom-class\": \"croppa-dialog\",\n            center: \"\",\n          },\n          on: {\n            \"update:visible\": function ($event) {\n              _vm.cropVisible = $event\n            },\n          },\n        },\n        [\n          _c(\"div\", { staticStyle: { \"text-align\": \"center\" } }, [\n            _c(\n              \"div\",\n              { staticClass: \"avatar-croppa-container\" },\n              [\n                _c(\"croppa\", {\n                  ref: \"croppa\",\n                  attrs: {\n                    width: _vm.cropRule.width,\n                    height: _vm.cropRule.height,\n                    placeholder: \"loading\",\n                    \"zoom-speed\": 30,\n                    \"disable-drag-and-drop\": false,\n                    \"show-remove-button\": false,\n                    \"prevent-white-space\": true,\n                    \"disable-click-to-choose\": false,\n                    \"disable-scroll-to-zoom\": false,\n                    \"show-loading\": true,\n                    quality: _vm.quality,\n                    \"initial-image\": _vm.cropImg,\n                  },\n                }),\n              ],\n              1\n            ),\n            _c(\"div\", { staticStyle: { \"margin-top\": \"1em\" } }, [\n              _vm._v(\"通过鼠标滚轮调节头像大小\"),\n            ]),\n          ]),\n          _c(\n            \"div\",\n            {\n              staticClass: \"dialog-footer\",\n              attrs: { slot: \"footer\" },\n              slot: \"footer\",\n            },\n            [\n              _c(\n                \"el-button\",\n                {\n                  attrs: { size: \"small\" },\n                  on: {\n                    click: function ($event) {\n                      _vm.cropVisible = false\n                    },\n                  },\n                },\n                [_vm._v(\"取 消\")]\n              ),\n              _c(\n                \"el-button\",\n                {\n                  attrs: { type: \"primary\", size: \"small\" },\n                  on: { click: _vm.handleCrop },\n                },\n                [_vm._v(\"确 定\")]\n              ),\n            ],\n            1\n          ),\n        ]\n      ),\n      _c(\n        \"el-dialog\",\n        {\n          staticClass: \"user-dialog\",\n          attrs: {\n            title: \"修改密码\",\n            \"append-to-body\": true,\n            \"before-close\": _vm.handleClose,\n            visible: _vm.dialogFormVisible,\n          },\n          on: {\n            \"update:visible\": function ($event) {\n              _vm.dialogFormVisible = $event\n            },\n          },\n        },\n        [\n          _c(\n            \"el-form\",\n            {\n              ref: \"form\",\n              attrs: {\n                model: _vm.form,\n                \"status-icon\": \"\",\n                rules: _vm.rules,\n                \"label-position\": \"left\",\n                \"label-width\": \"90px\",\n              },\n              nativeOn: {\n                submit: function ($event) {\n                  $event.preventDefault()\n                },\n              },\n            },\n            [\n              _c(\n                \"el-form-item\",\n                { attrs: { label: \"原始密码\", prop: \"old_password\" } },\n                [\n                  _c(\"el-input\", {\n                    attrs: { type: \"password\", autocomplete: \"off\" },\n                    model: {\n                      value: _vm.form.old_password,\n                      callback: function ($$v) {\n                        _vm.$set(_vm.form, \"old_password\", $$v)\n                      },\n                      expression: \"form.old_password\",\n                    },\n                  }),\n                ],\n                1\n              ),\n              _c(\n                \"el-form-item\",\n                { attrs: { label: \"新密码\", prop: \"new_password\" } },\n                [\n                  _c(\"el-input\", {\n                    attrs: { type: \"password\", autocomplete: \"off\" },\n                    model: {\n                      value: _vm.form.new_password,\n                      callback: function ($$v) {\n                        _vm.$set(_vm.form, \"new_password\", $$v)\n                      },\n                      expression: \"form.new_password\",\n                    },\n                  }),\n                ],\n                1\n              ),\n              _c(\n                \"el-form-item\",\n                {\n                  attrs: {\n                    label: \"确认密码\",\n                    prop: \"confirm_password\",\n                    \"label-position\": \"top\",\n                  },\n                },\n                [\n                  _c(\"el-input\", {\n                    attrs: { type: \"password\", autocomplete: \"off\" },\n                    model: {\n                      value: _vm.form.confirm_password,\n                      callback: function ($$v) {\n                        _vm.$set(_vm.form, \"confirm_password\", $$v)\n                      },\n                      expression: \"form.confirm_password\",\n                    },\n                  }),\n                ],\n                1\n              ),\n              _c(\n                \"el-form-item\",\n                [\n                  _c(\n                    \"el-button\",\n                    {\n                      attrs: { type: \"primary\" },\n                      on: {\n                        click: function ($event) {\n                          return _vm.submitForm(\"form\")\n                        },\n                      },\n                    },\n                    [_vm._v(\"保存\")]\n                  ),\n                  _c(\n                    \"el-button\",\n                    {\n                      on: {\n                        click: function ($event) {\n                          return _vm.resetForm(\"form\")\n                        },\n                      },\n                    },\n                    [_vm._v(\"重置\")]\n                  ),\n                ],\n                1\n              ),\n            ],\n            1\n          ),\n        ],\n        1\n      ),\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}