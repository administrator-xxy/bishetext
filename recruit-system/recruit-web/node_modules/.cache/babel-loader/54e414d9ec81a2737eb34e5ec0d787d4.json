{"remainingRequest":"C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\src\\component\\layout\\nav-bar.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\src\\component\\layout\\nav-bar.vue","mtime":1656036094000},{"path":"C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\babel.config.js","mtime":1656036094000},{"path":"C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1677772052210},{"path":"C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\node_modules\\babel-loader\\lib\\index.js","mtime":1677771858682},{"path":"C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1677772052210},{"path":"C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\node_modules\\vue-loader\\lib\\index.js","mtime":1677772060461}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"C:\\\\Users\\\\Hacker\\\\Desktop\\\\zhaop\\\\resume-master\\\\resume-master\\\\recruit-system\\\\recruit-web\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Breadcrumb from './breadcrumb';\nimport Screenfull from './screen-full';\nimport User from './user';\nimport ClearTab from './clear-tab';\nimport { Notify } from '@/model/notify';\nimport moment from 'moment';\nexport default {\n  name: 'NavBar',\n  created: function created() {\n    this.readMessages();\n  },\n  // watch: {\n  //   messages: {\n  //     handler() {\n  //       this.value = this.messages.filter(msg => msg.is_read === false).length\n  //       if (this.value === 0) {\n  //         this.hidden = true\n  //       } else {\n  //         this.hidden = false\n  //       }\n  //     },\n  //     immediate: true,\n  //   },\n  // },\n  data: function data() {\n    return {\n      value: 0,\n      hidden: true,\n      item: {\n        content: \"\",\n        id: '',\n        is_read: \"\",\n        time: \"\",\n        user_name: \"\"\n      },\n      messages: []\n    };\n  },\n  methods: {\n    // 查看全部已读信息\n    readAll: function () {\n      var _readAll = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return Notify.update(this.$store.getters.user.nickame);\n\n              case 2:\n                _context.next = 4;\n                return Notify.get(this.$store.getters.user.nickname, \"true\");\n\n              case 4:\n                res = _context.sent;\n                this.messages = res;\n                this.formateDate(this.messages);\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function readAll() {\n        return _readAll.apply(this, arguments);\n      }\n\n      return readAll;\n    }(),\n    // 查看全部信息\n    viewAll: function () {\n      var _viewAll = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return Notify.getAll(this.$store.getters.user.nickname);\n\n              case 2:\n                res = _context2.sent;\n                this.messages = res;\n                this.formateDate(this.messages);\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function viewAll() {\n        return _viewAll.apply(this, arguments);\n      }\n\n      return viewAll;\n    }(),\n    // 查看未读信息\n    readMessages: function () {\n      var _readMessages = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return Notify.get(this.$store.getters.user.nickname, \"false\");\n\n              case 2:\n                res = _context3.sent;\n                this.messages = res;\n                this.formateDate(this.messages);\n\n              case 5:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function readMessages() {\n        return _readMessages.apply(this, arguments);\n      }\n\n      return readMessages;\n    }(),\n    formateDate: function formateDate(item) {\n      for (var i = 0; i < item.length; i++) {\n        item[i].time = moment(item[i].time).format(\"YYYY-MM-DD hh:mm:ss\");\n      }\n    }\n  },\n  components: {\n    Breadcrumb: Breadcrumb,\n    User: User,\n    Screenfull: Screenfull,\n    ClearTab: ClearTab\n  }\n};",{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA;AACA;AACA;AACA;AACA;AACA;AAEA;AACAA,gBADA;AAEAC,SAFA,qBAEA;AACA;AACA,GAJA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,MAlBA,kBAkBA;AACA;AACAC,cADA;AAEAC,kBAFA;AAGAC;AACAC,mBADA;AAEAC,cAFA;AAGAC,mBAHA;AAIAC,gBAJA;AAKAC;AALA,OAHA;AAUAC;AAVA;AAYA,GA/BA;AAgCAC;AACA;AACAC,WAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAIAC,+CAJA;;AAAA;AAAA;AAAA,uBAKAA,qDALA;;AAAA;AAKAC,mBALA;AAMA;AACA;;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AASA;AACAC,WAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAWAF,gDAXA;;AAAA;AAWAC,mBAXA;AAYA;AACA;;AAbA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAeA;AACAE,gBAhBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAiBAH,sDAjBA;;AAAA;AAiBAC,mBAjBA;AAkBA;AACA;;AAnBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAqBAG,eArBA,uBAqBAb,IArBA,EAqBA;AACA;AACAA;AACA;AACA;AAzBA,GAhCA;AA2DAc;AACAC,0BADA;AAEAC,cAFA;AAGAC,0BAHA;AAIAC;AAJA;AA3DA","names":["name","created","data","value","hidden","item","content","id","is_read","time","user_name","messages","methods","readAll","Notify","res","viewAll","readMessages","formateDate","components","Breadcrumb","User","Screenfull","ClearTab"],"sourceRoot":"src/component/layout","sources":["nav-bar.vue"],"sourcesContent":["<template>\n  <div class=\"app-nav-bar\">\n    <div class=\"nav-content\">\n      <breadcrumb />\n      <!-- 暂时放这里 -->\n      <div class=\"right-info\">\n        <router-link to=\"/index\">返回首页&nbsp;&nbsp;&nbsp;</router-link>\n        <lin-notify\n          height=\"370\"\n          @readMessages=\"readMessages\"\n          :trigger=\"'click'\"\n          :messages=\"messages\"\n          @readAll=\"readAll\"\n          @viewAll=\"viewAll\"\n          class=\"lin-notify\"\n          :value=\"value\"\n          :hidden=\"hidden\"\n        ></lin-notify>\n        <clear-tab></clear-tab>\n        <screenfull />\n        <user></user>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Breadcrumb from './breadcrumb'\nimport Screenfull from './screen-full'\nimport User from './user'\nimport ClearTab from './clear-tab'\nimport { Notify } from '@/model/notify'\nimport moment from 'moment'\n\nexport default {\n  name: 'NavBar',\n  created() {\n    this.readMessages()\n  },\n  // watch: {\n  //   messages: {\n  //     handler() {\n  //       this.value = this.messages.filter(msg => msg.is_read === false).length\n  //       if (this.value === 0) {\n  //         this.hidden = true\n  //       } else {\n  //         this.hidden = false\n  //       }\n  //     },\n  //     immediate: true,\n  //   },\n  // },\n  data() {\n    return {\n      value: 0,\n      hidden: true,\n      item: {\n        content: \"\",\n        id: '',\n        is_read: \"\",\n        time: \"\",\n        user_name: \"\"\n      },\n      messages: [],\n    }\n  },\n  methods: {\n    // 查看全部已读信息\n    async readAll() {\n      // 查看全部已读消息之前，会把全部未读消息状态修改为已读\n      await Notify.update(this.$store.getters.user.nickame)\n      const res = await Notify.get(this.$store.getters.user.nickname, \"true\")\n      this.messages = res\n      this.formateDate(this.messages)\n    },\n    // 查看全部信息\n    async viewAll() {\n      const res = await Notify.getAll(this.$store.getters.user.nickname)\n      this.messages = res\n      this.formateDate(this.messages)\n    },\n    // 查看未读信息\n    async readMessages() {\n      const res = await Notify.get(this.$store.getters.user.nickname, \"false\")\n      this.messages = res\n      this.formateDate(this.messages)\n    },\n    formateDate(item) {\n      for (var i = 0; i < item.length; i++) {\n        item[i].time = moment(item[i].time).format(\"YYYY-MM-DD hh:mm:ss\")\n      }\n    }\n  },\n  components: {\n    Breadcrumb,\n    User,\n    Screenfull,\n    ClearTab,\n  },\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.lin-notify {\n  margin-right: 20px;\n}\n.app-nav-bar {\n  width: 100%;\n  height: $navbar-height;\n  display: flex;\n  align-items: center;\n  .logo.js-min-logo {\n    width: 64px;\n    font-size: 16px;\n    color: #fff;\n  }\n  .nav-content {\n    flex: 1;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    padding-left: 10px;\n    padding-right: $navbar-padding;\n    .right-info {\n      display: flex;\n      align-items: center;\n    }\n  }\n}\n</style>\n"]}]}