{"remainingRequest":"C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\src\\view\\resume\\resume-detail.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\src\\view\\resume\\resume-detail.vue","mtime":1656036094000},{"path":"C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\babel.config.js","mtime":1656036094000},{"path":"C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1677772052210},{"path":"C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\node_modules\\babel-loader\\lib\\index.js","mtime":1677771858682},{"path":"C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1677772052210},{"path":"C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\node_modules\\vue-loader\\lib\\index.js","mtime":1677772060461}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"C:\\\\Users\\\\Hacker\\\\Desktop\\\\zhaop\\\\resume-master\\\\resume-master\\\\recruit-system\\\\recruit-web\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { Resume } from '@/model/resume';\nimport { Application } from '@/model/application';\nimport Detail from './detail.vue';\nexport default {\n  name: \"ResumeDetail\",\n  components: {\n    Detail: Detail\n  },\n  // 定义变量\n  props: {\n    detailResumeID: {\n      type: String\n    },\n    applicationID: {\n      type: String\n    },\n    applicationState: {\n      type: String\n    }\n  },\n  data: function data() {\n    return {\n      loading: false,\n      form: {}\n    };\n  },\n  mounted: function () {\n    var _mounted = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              this.loading = true;\n              _context.next = 4;\n              return Resume.getById(this.detailResumeID);\n\n            case 4:\n              res = _context.sent;\n              this.form = res;\n              this.loading = false;\n              _context.next = 13;\n              break;\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](0);\n              this.loading = false;\n              console.log(_context.t0);\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this, [[0, 9]]);\n    }));\n\n    function mounted() {\n      return _mounted.apply(this, arguments);\n    }\n\n    return mounted;\n  }(),\n  methods: {\n    handlePass: function () {\n      var _handlePass = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(val) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return Application.updateState(this.applicationID, 1);\n\n              case 2:\n                res = _context2.sent;\n\n                if (res.code < window.MAX_SUCCESS_CODE) {\n                  this.$message.success(\"\".concat(res.message)); // 返回查询所有未处理简历的页面\n\n                  this.$emit('detailClose');\n                }\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function handlePass(_x) {\n        return _handlePass.apply(this, arguments);\n      }\n\n      return handlePass;\n    }(),\n    handleFail: function () {\n      var _handleFail = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(val) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return Application.updateState(this.applicationID, 2);\n\n              case 2:\n                res = _context3.sent;\n\n                if (res.code < window.MAX_SUCCESS_CODE) {\n                  this.$message.success(\"\".concat(res.message)); // 返回查询所有未处理简历的页面\n\n                  this.$emit('detailClose');\n                }\n\n              case 4:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function handleFail(_x2) {\n        return _handleFail.apply(this, arguments);\n      }\n\n      return handleFail;\n    }(),\n    back: function back() {\n      this.$emit('detailClose');\n    }\n  }\n};",{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgCA;AACA;AACA;AACA;AACAA,sBADA;AAEAC;AACAC;AADA,GAFA;AAKA;AACAC;AACAC;AACAC;AADA,KADA;AAIAC;AACAD;AADA,KAJA;AAOAE;AACAF;AADA;AAPA,GANA;AAiBAG,MAjBA,kBAiBA;AACA;AACAC,oBADA;AAEAC;AAFA;AAKA,GAvBA;AAwBAC,SAxBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA0BA;AA1BA;AAAA,qBA2BAC,mCA3BA;;AAAA;AA2BAC,iBA3BA;AA4BA;AACA;AA7BA;AAAA;;AAAA;AAAA;AAAA;AA+BA;AACAC;;AAhCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAmCAC;AACAC,cADA;AAAA,mGACAC,GADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEAC,8CAFA;;AAAA;AAEAL,mBAFA;;AAGA;AACA,gEADA,CAEA;;AACA;AACA;;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AASAM,cATA;AAAA,mGASAF,GATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAUAC,8CAVA;;AAAA;AAUAL,mBAVA;;AAWA;AACA,gEADA,CAEA;;AACA;AACA;;AAfA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAiBAO,QAjBA,kBAiBA;AACA;AACA;AAnBA;AAnCA","names":["name","components","Detail","props","detailResumeID","type","applicationID","applicationState","data","loading","form","mounted","Resume","res","console","methods","handlePass","val","Application","handleFail","back"],"sourceRoot":"src/view/resume","sources":["resume-detail.vue"],"sourcesContent":["<template>\n  <div>\n    <div class=\"container\">\n      <div class=\"title\">\n        <span>简历详细信息</span>\n        <span class=\"back\" @click=\"back\">\n          <i class=\"iconfont icon-fanhui\"></i> 返回\n        </span>\n      </div>\n      <el-divider></el-divider>\n      <div>\n        <Detail :id=\"detailResumeID\"></Detail>\n      </div>\n    </div>\n    <div class=\"wrap\">\n      <el-row>\n        <el-col :lg=\"16\" :md=\"20\" :sm=\"24\" :xs=\"24\">\n          <el-form :model=\"form\" status-icon ref=\"form\" label-width=\"100px\" v-loading=\"loading\" @submit.native.prevent>\n            <el-form-item class=\"submit\">\n              <!--通过申请的状态属性state来控制通过按钮和不通过按钮是否显示-->\n              <el-button type=\"primary\" @click=\"handlePass('form')\" v-if=\"this.applicationState == 0\" round>通 过\n              </el-button>\n              <el-button @click=\"handleFail('form')\" v-if=\"this.applicationState == 0\" round>不通过</el-button>\n            </el-form-item>\n          </el-form>\n        </el-col>\n      </el-row>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { Resume } from '@/model/resume'\nimport { Application } from '@/model/application'\nimport Detail from './detail.vue'\nexport default {\n  name: \"ResumeDetail\",\n  components: {\n    Detail\n  },\n  // 定义变量\n  props: {\n    detailResumeID: {\n      type: String,\n    },\n    applicationID: {\n      type: String,\n    },\n    applicationState: {\n      type: String,\n    }\n  },\n  data() {\n    return {\n      loading: false,\n      form: {\n      },\n    }\n  },\n  async mounted() {\n    try {\n      this.loading = true\n      const res = await Resume.getById(this.detailResumeID)\n      this.form = res\n      this.loading = false\n    } catch (error) {\n      this.loading = false\n      console.log(error)\n    }\n  },\n  methods: {\n    async handlePass(val) {\n      const res = await Application.updateState(this.applicationID, 1)\n      if (res.code < window.MAX_SUCCESS_CODE) {\n        this.$message.success(`${res.message}`)\n        // 返回查询所有未处理简历的页面\n        this.$emit('detailClose')\n      }\n    },\n    async handleFail(val) {\n      const res = await Application.updateState(this.applicationID, 2)\n      if (res.code < window.MAX_SUCCESS_CODE) {\n        this.$message.success(`${res.message}`)\n        // 返回查询所有未处理简历的页面\n        this.$emit('detailClose')\n      }\n    },\n    back() {\n      this.$emit('detailClose')\n    },\n  },\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.el-divider--horizontal {\n  margin: 0;\n}\n\n.container {\n  .title {\n    height: 59px;\n    line-height: 59px;\n    color: $parent-title-color;\n    font-size: 16px;\n    font-weight: 500;\n    text-indent: 40px;\n\n    .back {\n      float: right;\n      margin-right: 40px;\n      cursor: pointer;\n    }\n  }\n\n  .wrap {\n    padding: 20px;\n  }\n\n  .submit {\n    float: left;\n  }\n}\n</style>\n"]}]}