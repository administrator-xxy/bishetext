{"remainingRequest":"C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\src\\component\\index\\Search.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\src\\component\\index\\Search.vue","mtime":1656036094000},{"path":"C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\babel.config.js","mtime":1656036094000},{"path":"C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1677772052210},{"path":"C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\node_modules\\babel-loader\\lib\\index.js","mtime":1677771858682},{"path":"C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1677772052210},{"path":"C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\node_modules\\vue-loader\\lib\\index.js","mtime":1677772060461}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"C:\\\\Users\\\\Hacker\\\\Desktop\\\\zhaop\\\\resume-master\\\\resume-master\\\\recruit-system\\\\recruit-web\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport WorkListVue from \"./WorkList.vue\";\nimport { Position } from '@/model/position';\nimport Button from \"../../plugin/lin-cms-ui/view/basic/button/button.vue\";\nimport LinSearch from '@/component/base/search/lin-search';\nimport PositionDetail from '@/view/position/position-detail';\nexport default {\n  components: {\n    WorkListVue: WorkListVue,\n    Button: Button,\n    LinSearch: LinSearch,\n    PositionDetail: PositionDetail\n  },\n  data: function data() {\n    return _defineProperty({\n      worklist: [],\n      // sWidth:this.nxw,\n      list: this.slist,\n      showDetail: false,\n      // 是否显示职位详情页\n      showHot: false,\n      // 是否显示热招职位列表\n      tableData: [],\n      // 表格数据\n      totalNums: 0,\n      // 数据总数\n      currentPage: 1,\n      // 当前页数\n      pageCount: 12,\n      // 每页的数据量\n      refreshPagination: true,\n      // 页数增加的时候，因为缓存的缘故，需要刷新 Pagination 组件\n      detailPositionID: 0,\n      // 职位id\n      searchKeyword: '',\n      // 搜索时输入的关键字\n      keyword: null,\n      // 查询关键字,用于显示搜索提示\n      form: {}\n    }, \"list\", {});\n  },\n  props: ['nxw', 'slist', 'searchValue'],\n  mounted: function mounted() {\n    if (this.keywordValue) {\n      this.keyword = this.keywordValue;\n    }\n\n    this.searchPositionList(this.keyword);\n  },\n  // watch: {\n  // \t/**\n  // \t * 关键字搜索\n  // \t */\n  // \tsearchKeyword(newVal) {\n  // \t\tif (newVal) {\n  // \t\t\tthis.keyword = newVal\n  // \t\t\tif (this.searchUser) {\n  // \t\t\t\tthis.keyword = `${newVal}`\n  // \t\t\t}\n  // \t\t} else {\n  // \t\t\tthis.keyword = ''\n  // \t\t\tthis.$refs.searchKeyword.clear()\n  // \t\t}\n  // \t\tthis.searchPositionList()\n  // \t},\n  // },\n  methods: {\n    getByState: function () {\n      var _getByState = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var page, count, positions;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                page = this.currentPage - 1;\n                count = this.pageCount; // 首页展示所有审核通过的职位\n\n                _context.next = 4;\n                return Position.getByState(1, page, count);\n\n              case 4:\n                positions = _context.sent;\n                this.tableData = positions.items;\n                this.totalNums = positions.total;\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getByState() {\n        return _getByState.apply(this, arguments);\n      }\n\n      return getByState;\n    }(),\n    // 通过查询关键字分页搜索职位列表 \n    searchPositionList: function () {\n      var _searchPositionList = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var page, count, positions;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                page = this.currentPage - 1;\n                count = this.pageCount;\n                _context2.next = 4;\n                return Position.getByKeyword(page, count, this.searchKeyword);\n\n              case 4:\n                positions = _context2.sent;\n                this.tableData = positions.items;\n                this.totalNums = positions.total;\n                this.$message.success(\"查询职位成功\");\n\n              case 8:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function searchPositionList() {\n        return _searchPositionList.apply(this, arguments);\n      }\n\n      return searchPositionList;\n    }(),\n    // 清空检索\n    backInit: function () {\n      var _backInit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                this.searchKeyword = '';\n                this.keyword = '';\n                this.tableData = [];\n                this.loading = true;\n                this.searchPositionList();\n                this.loading = false;\n\n              case 6:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function backInit() {\n        return _backInit.apply(this, arguments);\n      }\n\n      return backInit;\n    }(),\n\n    /**\n     * 监听输入查询关键字\n     */\n    onQueryChange: function () {\n      var _onQueryChange = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                this.searchKeyword = this.searchKeyword.trim();\n                this.searchPositionList();\n\n              case 2:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function onQueryChange() {\n        return _onQueryChange.apply(this, arguments);\n      }\n\n      return onQueryChange;\n    }(),\n    // 切换table页\n    handleCurrentChange: function () {\n      var _handleCurrentChange = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(val) {\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                this.currentPage = val;\n                this.loading = true;\n                this.searchPositionList();\n                this.loading = false;\n\n              case 4:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function handleCurrentChange(_x) {\n        return _handleCurrentChange.apply(this, arguments);\n      }\n\n      return handleCurrentChange;\n    }(),\n    handleDetail: function handleDetail(val) {\n      this.showDetail = true;\n      this.detailPositionID = val.id;\n    },\n    handleHot: function handleHot() {\n      this.showHot = true;\n    },\n    rowClick: function rowClick() {},\n    detailClose: function detailClose() {\n      this.showDetail = false;\n      this.searchPositionList();\n    },\n    hotClose: function hotClose() {\n      this.showHot = false;\n      this.showDetail = false;\n      this.searchPositionList();\n    },\n    // 投递简历\n    handleDelivery: function () {\n      var _handleDelivery = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(val) {\n        var flag, temp, result, res;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.next = 2;\n                return Application.getByPositionIdAndUserId(val.id, this.$store.getters.user.id);\n\n              case 2:\n                flag = _context6.sent;\n\n                if (!(flag === false)) {\n                  _context6.next = 7;\n                  break;\n                }\n\n                // 不能重复投递\n                this.$message.error(\"你已投递过该职位，不可重复投递\");\n                _context6.next = 23;\n                break;\n\n              case 7:\n                // 获取当前登录求职者的用户id\n                this.form.user_id = this.$store.getters.user.id; // 获取当前投递简历的职位id\n\n                this.form.position_id = val.id; // 根据用户id查询绑定的简历id\n\n                _context6.next = 11;\n                return Resume.getByUserId(this.$store.getters.user.id);\n\n              case 11:\n                temp = _context6.sent;\n                this.form.resume_id = temp.resume_id;\n                console.log(temp); // 根据职位id查询该职位所对应的hr_id\n\n                _context6.next = 16;\n                return Position.getById(val.id);\n\n              case 16:\n                result = _context6.sent;\n                this.form.hr_id = result.hr_id;\n                this.form.company_id = val.company_id; // 调用创建申请的方法\n\n                _context6.next = 21;\n                return Application.create(this.form);\n\n              case 21:\n                res = _context6.sent;\n\n                if (res.code < window.MAX_SUCCESS_CODE) {\n                  this.$message.success(\"\".concat(res.message));\n                }\n\n              case 23:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function handleDelivery(_x2) {\n        return _handleDelivery.apply(this, arguments);\n      }\n\n      return handleDelivery;\n    }(),\n    // 收藏职位\n    handleCollect: function () {\n      var _handleCollect = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(val) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                // 获取当前登录求职者的用户id\n                this.list.user_id = this.$store.getters.user.id; // 获取当前收藏的职位id\n\n                this.list.position_id = val.id; // 调用添加收藏的方法\n\n                _context7.next = 4;\n                return Favor.create(this.list);\n\n              case 4:\n                res = _context7.sent;\n\n                if (res.code < window.MAX_SUCCESS_CODE) {\n                  this.$message.success(\"\".concat(res.message));\n                }\n\n              case 6:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n\n      function handleCollect(_x3) {\n        return _handleCollect.apply(this, arguments);\n      }\n\n      return handleCollect;\n    }()\n  }\n};",{"version":3,"mappings":"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","names":["Position","components","WorkListVue","Button","LinSearch","PositionDetail","data","worklist","list","showDetail","showHot","tableData","totalNums","currentPage","pageCount","refreshPagination","detailPositionID","searchKeyword","keyword","form","props","mounted","methods","getByState","page","count","positions","searchPositionList","backInit","onQueryChange","handleCurrentChange","val","handleDetail","handleHot","rowClick","detailClose","hotClose","handleDelivery","Application","flag","Resume","temp","console","result","res","handleCollect","Favor"],"sourceRoot":"src/component/index","sources":["Search.vue"],"sourcesContent":["<!-- 首页搜素框模块 -->\n<template>\n\t<div>\n\t\t<div style=\"margin-left:20% ; text-align: center\">\n\t\t\t<position-detail v-if=\"showDetail\" @detailClose=\"detailClose\" :detailPositionID=\"detailPositionID\" :temp=\"1\">\n\t\t\t</position-detail>\n\t\t</div>\n\t\t<div class=\"searchIndex\" v-if=\"!showDetail\">\n\t\t\t<div class=\"contains\" :width=\"nxw\">\n\t\t\t\t<div class=\"search\">\n\t\t\t\t\t<div style=\"width: 70%;margin: 0 auto; text-align: center\">\n\t\t\t\t\t\t<el-row span=\"10\">\n\t\t\t\t\t\t\t<el-col>\n\t\t\t\t\t\t\t\t<!-- <linSearch @query=\"onQueryChange\" placeholder=\"请输入职位名称\" ref=\"searchKeyword\" /> -->\n\t\t\t\t\t\t\t\t<el-input v-model=\"searchKeyword\" @change=\"onQueryChange\" placeholder=\"请输入职位名称\" size=\"large\" clearable>\n\t\t\t\t\t\t\t\t\t<el-button @click=\"onQueryChange\" slot=\"append\" icon=\"el-icon-search\">查询</el-button>\n\t\t\t\t\t\t\t\t</el-input>\n\t\t\t\t\t\t\t</el-col>\n\t\t\t\t\t\t</el-row>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"s_hot\">\n\t\t\t\t\t\t热门职位搜索：\n\t\t\t\t\t\t<span class=\"s_hot_like\" @click=\"searchKeyword = 'java'\">&nbsp;Java开发</span>\n\t\t\t\t\t\t<span class=\"s_hot_like\" @click=\"searchKeyword = '数据'\">大数据平台开发</span>\n\t\t\t\t\t\t<span class=\"s_hot_like\" @click=\"searchKeyword = 'PHP'\">PHP</span>\n\t\t\t\t\t\t<span class=\"s_hot_like\" @click=\"searchKeyword = '数据'\">数据挖掘</span>\n\t\t\t\t\t\t<span class=\"s_hot_like\" @click=\"searchKeyword = 'C++'\">C++</span>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<template v-if=\"!showDetail\">\n\t\t\t\t\t<div class=\"workList\">\n\t\t\t\t\t\t<ul class=\"work_list\">\n\t\t\t\t\t\t\t<li v-for=\"(work, index) in tableData\" :key=\"index\" class=\"cardWork\">\n\t\t\t\t\t\t\t\t<div @click.prevent=\"handleDetail(work)\">\n\t\t\t\t\t\t\t\t\t<div class=\"cardWork_Up\">\n\t\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t\t<strong class=\"card_workNT\"><span class=\"card_workName\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t:title=\"work.title\">{{ work.title }}</span></strong>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div style=\"margin-top:8px;\">\n\t\t\t\t\t\t\t\t\t\t\t<span>职位浏览量：</span>\n\t\t\t\t\t\t\t\t\t\t\t<span>{{ work.hits }}</span>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div style=\"margin-top:8px;\">\n\t\t\t\t\t\t\t\t\t\t\t<span>工作地点：</span>\n\t\t\t\t\t\t\t\t\t\t\t<span>{{ work.city }}</span>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<div style=\"color: #FA606B; margin-left: 75px; margin-top:10px;\">\n\t\t\t\t\t\t\t\t\t\t\t<span style=\"float: left;\">薪资：</span>\n\t\t\t\t\t\t\t\t\t\t\t<span style=\"float: left;\">{{ work.salary_down }}</span>\n\t\t\t\t\t\t\t\t\t\t\t<span style=\"float: left;\">~</span>\n\t\t\t\t\t\t\t\t\t\t\t<span style=\"float: left;\">{{ work.salary_up }}</span>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div class=\"cardWork_Down\">\n\t\t\t\t\t\t\t\t\t\t<div class=\"card_workImg\"><img :src=\"work.logo\"></div>\n\t\t\t\t\t\t\t\t\t\t<div style=\"margin-top:10px; margin-right:30px;\">\n\t\t\t\t\t\t\t\t\t\t\t<p style=\"line-height: 20px\">{{ work.requirement }}</p>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</div>\n\t\t\t\t</template>\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"pagination\" v-if=\"!showDetail\">\n\t\t\t<el-pagination @current-change=\"handleCurrentChange\" :background=\"true\" :page-size=\"pageCount\"\n\t\t\t\t:current-page=\"currentPage\" v-if=\"refreshPagination\" layout=\"prev, pager, next, jumper\" :total=\"totalNums\">\n\t\t\t</el-pagination>\n\t\t</div>\n\t</div>\n\t<!-- 职位详情 -->\n</template>\n\n<script>\nimport WorkListVue from \"./WorkList.vue\";\nimport {\n\tPosition\n} from '@/model/position'\nimport Button from \"../../plugin/lin-cms-ui/view/basic/button/button.vue\";\nimport LinSearch from '@/component/base/search/lin-search'\nimport PositionDetail from '@/view/position/position-detail'\nexport default {\n\tcomponents: {\n\t\tWorkListVue,\n\t\tButton,\n\t\tLinSearch,\n\t\tPositionDetail,\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tworklist: [],\n\t\t\t// sWidth:this.nxw,\n\t\t\tlist: this.slist,\n\t\t\tshowDetail: false, // 是否显示职位详情页\n\t\t\tshowHot: false, // 是否显示热招职位列表\n\t\t\ttableData: [], // 表格数据\n\t\t\ttotalNums: 0, // 数据总数\n\t\t\tcurrentPage: 1, // 当前页数\n\t\t\tpageCount: 12, // 每页的数据量\n\t\t\trefreshPagination: true, // 页数增加的时候，因为缓存的缘故，需要刷新 Pagination 组件\n\t\t\tdetailPositionID: 0, // 职位id\n\t\t\tsearchKeyword: '', // 搜索时输入的关键字\n\t\t\tkeyword: null, // 查询关键字,用于显示搜索提示\n\t\t\tform: {}, //投递简历时传入的列表数据\n\t\t\tlist: {} //收藏职位时传入的列表数据\n\t\t}\n\t},\n\tprops: ['nxw', 'slist', 'searchValue'],\n\tmounted() {\n\t\tif (this.keywordValue) {\n\t\t\tthis.keyword = this.keywordValue;\n\t\t}\n\t\tthis.searchPositionList(this.keyword)\n\t},\n\t// watch: {\n\t// \t/**\n\t// \t * 关键字搜索\n\t// \t */\n\t// \tsearchKeyword(newVal) {\n\t// \t\tif (newVal) {\n\t// \t\t\tthis.keyword = newVal\n\t// \t\t\tif (this.searchUser) {\n\t// \t\t\t\tthis.keyword = `${newVal}`\n\t// \t\t\t}\n\t// \t\t} else {\n\t// \t\t\tthis.keyword = ''\n\t// \t\t\tthis.$refs.searchKeyword.clear()\n\t// \t\t}\n\t// \t\tthis.searchPositionList()\n\t// \t},\n\t// },\n\tmethods: {\n\t\tasync getByState() {\n\t\t\tconst page = this.currentPage - 1\n\t\t\tconst count = this.pageCount\n\t\t\t// 首页展示所有审核通过的职位\n\t\t\tconst positions = await Position.getByState(1, page, count)\n\t\t\tthis.tableData = positions.items\n\t\t\tthis.totalNums = positions.total\n\t\t},\n\t\t// 通过查询关键字分页搜索职位列表 \n\t\tasync searchPositionList() {\n\t\t\tconst page = this.currentPage - 1\n\t\t\tconst count = this.pageCount\n\t\t\tconst positions = await Position.getByKeyword(page, count, this.searchKeyword)\n\t\t\tthis.tableData = positions.items\n\t\t\tthis.totalNums = positions.total\n\t\t\tthis.$message.success(\"查询职位成功\")\n\t\t},\n\t\t// 清空检索\n\t\tasync backInit() {\n\t\t\tthis.searchKeyword = ''\n\t\t\tthis.keyword = ''\n\t\t\tthis.tableData = []\n\t\t\tthis.loading = true\n\t\t\tthis.searchPositionList()\n\t\t\tthis.loading = false\n\t\t},\n\t\t/**\n\t\t * 监听输入查询关键字\n\t\t */\n\t\tasync onQueryChange() {\n\t\t\tthis.searchKeyword = this.searchKeyword.trim()\n\t\t\tthis.searchPositionList()\n\t\t},\n\t\t// 切换table页\n\t\tasync handleCurrentChange(val) {\n\t\t\tthis.currentPage = val\n\t\t\tthis.loading = true\n\t\t\tthis.searchPositionList()\n\t\t\tthis.loading = false\n\t\t},\n\t\thandleDetail(val) {\n\t\t\tthis.showDetail = true\n\t\t\tthis.detailPositionID = val.id\n\t\t},\n\t\thandleHot() {\n\t\t\tthis.showHot = true\n\t\t},\n\t\trowClick() { },\n\t\tdetailClose() {\n\t\t\tthis.showDetail = false\n\t\t\tthis.searchPositionList()\n\t\t},\n\t\thotClose() {\n\t\t\tthis.showHot = false\n\t\t\tthis.showDetail = false\n\t\t\tthis.searchPositionList()\n\t\t},\n\t\t// 投递简历\n\t\tasync handleDelivery(val) {\n\t\t\t// 根据用户id和职位id判断用户是否已经投递过该职位，避免重复投递\n\t\t\tconst flag = await Application.getByPositionIdAndUserId(val.id, this.$store.getters.user.id)\n\t\t\tif (flag === false) {\n\t\t\t\t// 不能重复投递\n\t\t\t\tthis.$message.error(\"你已投递过该职位，不可重复投递\")\n\t\t\t} else {\n\t\t\t\t// 获取当前登录求职者的用户id\n\t\t\t\tthis.form.user_id = this.$store.getters.user.id\n\t\t\t\t// 获取当前投递简历的职位id\n\t\t\t\tthis.form.position_id = val.id\n\t\t\t\t// 根据用户id查询绑定的简历id\n\t\t\t\tconst temp = await Resume.getByUserId(this.$store.getters.user.id)\n\t\t\t\tthis.form.resume_id = temp.resume_id\n\t\t\t\tconsole.log(temp)\n\t\t\t\t// 根据职位id查询该职位所对应的hr_id\n\t\t\t\tconst result = await Position.getById(val.id)\n\t\t\t\tthis.form.hr_id = result.hr_id\n\t\t\t\tthis.form.company_id = val.company_id\n\t\t\t\t// 调用创建申请的方法\n\t\t\t\tconst res = await Application.create(this.form)\n\t\t\t\tif (res.code < window.MAX_SUCCESS_CODE) {\n\t\t\t\t\tthis.$message.success(`${res.message}`)\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t// 收藏职位\n\t\tasync handleCollect(val) {\n\t\t\t// 获取当前登录求职者的用户id\n\t\t\tthis.list.user_id = this.$store.getters.user.id\n\t\t\t// 获取当前收藏的职位id\n\t\t\tthis.list.position_id = val.id\n\t\t\t// 调用添加收藏的方法\n\t\t\tconst res = await Favor.create(this.list)\n\t\t\tif (res.code < window.MAX_SUCCESS_CODE) {\n\t\t\t\tthis.$message.success(`${res.message}`)\n\t\t\t}\n\t\t},\n\t},\n}\n</script>\n\n<style lang=\"scss\">\n.searchIndex {\n\twidth: 100%;\n\tbackground: #fff;\n\n\t.contains {\n\t\twidth: 100%;\n\t\tmargin: 0 auto;\n\n\t\t.search {\n\t\t\t// width: 50rem;\n\t\t\t// height: 10rem;\n\t\t\t// margin: 0 auto;\n\t\t\ttext-align: center;\n\t\t\tposition: relative;\n\n\t\t\t.search1 {\n\t\t\t\twidth: initial;\n\t\t\t\tmargin: center;\n\t\t\t\ttext-align: center;\n\t\t\t\tposition: relative;\n\t\t\t}\n\n\t\t\t.s_box {\n\t\t\t\theight: 5rem;\n\t\t\t\tpadding-top: 2rem;\n\n\t\t\t\t.search_input,\n\t\t\t\t.search_button {\n\t\t\t\t\tfloat: left;\n\t\t\t\t\tbox-sizing: content-box;\n\t\t\t\t\twidth: 39.5rem;\n\t\t\t\t\tborder: 1px solid #ddd;\n\n\t\t\t\t\t// margin-top: 20px;\n\t\t\t\t\t&:focus {\n\t\t\t\t\t\toutline: 0px;\n\t\t\t\t\t\toutline-offset: 0px;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t.search_input {\n\t\t\t\t\theight: 19px;\n\t\t\t\t\tpadding: 16px;\n\t\t\t\t\tfont-size: 16px;\n\t\t\t\t\tborder-right: none;\n\n\t\t\t\t\t&:focus {\n\t\t\t\t\t\tborder: 1px solid #3CBEF9;\n\t\t\t\t\t\tborder-right: 0px;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t.search_button {\n\t\t\t\t\twidth: 8rem;\n\t\t\t\t\theight: 51px;\n\t\t\t\t\tfont-size: 20px;\n\t\t\t\t\tline-height: 51px;\n\t\t\t\t\ttext-align: center;\n\t\t\t\t\tcursor: pointer;\n\t\t\t\t\tcolor: #fff;\n\t\t\t\t\tborder: 1px solid #3CBEF9;\n\t\t\t\t\tbackground: #3CBEF9;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t.s_hot {\n\t\t\t\tclear: both;\n\t\t\t\ttext-align: center;\n\t\t\t\tmargin-top: 20px;\n\t\t\t\tcolor: #666;\n\t\t\t\tfont-size: 14px;\n\n\t\t\t\t.s_hot_like {\n\t\t\t\t\tcolor: #3CBEF9;\n\t\t\t\t\tmargin-right: 16px;\n\t\t\t\t\tcursor: pointer;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t.nosee {\n\t\t\t\tdisplay: none;\n\t\t\t}\n\n\t\t}\n\t}\n\n}\n\n.container {\n\tpadding: 0 30px;\n\n\t.header {\n\t\tdisplay: flex;\n\t\tjustify-content: space-between;\n\t\talign-items: center;\n\n\t\t.title {\n\t\t\theight: 59px;\n\t\t\tline-height: 59px;\n\t\t\tcolor: $parent-title-color;\n\t\t\tfont-size: 25px;\n\t\t\tfont-weight: 500;\n\t\t\tmargin-left: 450px;\n\t\t}\n\t}\n\n\t.search3 {\n\t\theight: 52px;\n\t\twidth: 100%;\n\t\tbackground: rgba(57, 99, 188, 0.1);\n\t\tdisplay: flex;\n\t\tflex-direction: row;\n\t\tjustify-content: space-between;\n\t\tmargin-top: 24px;\n\t\tmargin-bottom: 24px;\n\n\t\t.search-tip {\n\t\t\tmargin-left: 40px;\n\t\t\theight: 52px;\n\t\t\tline-height: 52px;\n\t\t\tcolor: #354058;\n\t\t\tfont-size: 14px;\n\n\t\t\t.search-keyword {\n\t\t\t\tcolor: $theme;\n\t\t\t}\n\n\t\t\t.search-num {\n\t\t\t\tcolor: #f4516c;\n\t\t\t}\n\t\t}\n\n\t\t.search-back {\n\t\t\tmargin: 8px 20px;\n\t\t\theight: 32px;\n\t\t\tbackground: #f4516c;\n\t\t\tborder: none;\n\t\t\tborder-radius: 2px;\n\t\t\tcolor: #fff;\n\t\t\tpadding: 0 13px;\n\t\t\tfont-size: 14px;\n\t\t\tcursor: pointer;\n\t\t}\n\t}\n\n\t.box {\n\t\tdisplay: flex;\n\t\tjustify-content: flex-start;\n\t\talign-items: center;\n\n\t\t.left {\n\t\t\tmargin-left: 280px;\n\t\t}\n\n\t\t.right {\n\t\t\theight: 59px;\n\t\t\tline-height: 59px;\n\t\t\tcolor: $right-side-font-color;\n\t\t\tfont-size: 18px;\n\t\t\tfont-weight: 400;\n\t\t\tmargin-left: 50px;\n\t\t\tcursor: pointer;\n\t\t}\n\t}\n\n\t.pagination {\n\t\tdisplay: flex;\n\t\tjustify-content: flex-end;\n\t\tmargin: 30px;\n\t}\n}\n\n$nx-color2:#0470B8;\n$nx-width:76rem;\n\n.workList {\n\twidth: 100%;\n\tcursor: pointer;\n\n\t.work_list {\n\t\twidth: $nx-width;\n\t\tmargin: 1rem auto;\n\t\tzoom: 1;\n\n\t\t&:after {\n\t\t\tdisplay: block;\n\t\t\tcontent: '.';\n\t\t\tclear: both;\n\t\t\tline-height: 0;\n\t\t\tvisibility: hidden;\n\t\t}\n\n\t\t.cardWork {\n\t\t\tfloat: left;\n\t\t\twidth: 17.6rem;\n\t\t\theight: 16.75rem;\n\t\t\tborder: 1px solid #eee;\n\t\t\tmargin: 1rem 1rem 0 0;\n\n\t\t\t>div {\n\t\t\t\twidth: 100%;\n\t\t\t\theight: 100%;\n\t\t\t\tpadding: 1rem;\n\t\t\t\toverflow: hidden;\n\t\t\t\ttext-align: center;\n\n\t\t\t\t.cardWork_Up {\n\t\t\t\t\tcolor: #999;\n\n\t\t\t\t\t.card_workNT {\n\t\t\t\t\t\tdisplay: inline-block;\n\t\t\t\t\t\tfont-weight: 400;\n\n\t\t\t\t\t\t.card_workName {\n\t\t\t\t\t\t\tfloat: left;\n\t\t\t\t\t\t\tmax-width: 12rem;\n\t\t\t\t\t\t\tfont-size: 1rem;\n\t\t\t\t\t\t\ttext-overflow: ellipsis;\n\t\t\t\t\t\t\toverflow: hidden;\n\t\t\t\t\t\t\twhite-space: nowrap;\n\n\t\t\t\t\t\t\t&:hover {\n\t\t\t\t\t\t\t\tcolor: $nx-color2;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t.card_workTime {\n\t\t\t\t\t\t\tfont-size: 0.8rem;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t.card_workMoney {\n\t\t\t\t\t\tfloat: right;\n\t\t\t\t\t\tcolor: #FA606B;\n\t\t\t\t\t}\n\n\t\t\t\t\t.card_workExp {\n\t\t\t\t\t\tfont-size: 0.8rem;\n\t\t\t\t\t\tcolor: #888;\n\t\t\t\t\t}\n\n\t\t\t\t\tul {\n\t\t\t\t\t\theight: 4rem;\n\t\t\t\t\t\tborder-bottom: 1px dashed #ddd;\n\n\t\t\t\t\t\t.card_workTags {\n\t\t\t\t\t\t\tfloat: left;\n\t\t\t\t\t\t\tfont-size: 0.6rem;\n\t\t\t\t\t\t\tborder: 1px solid #eee;\n\t\t\t\t\t\t\tpadding: 0.2rem 0.3rem;\n\t\t\t\t\t\t\tmargin: 0.6rem 0.6rem 2rem 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t.cardWork_Down {\n\t\t\t\t\tfloat: left;\n\t\t\t\t\twidth: 100%;\n\t\t\t\t\theight: 2.5rem;\n\t\t\t\t\tmargin-top: 0.5rem;\n\n\t\t\t\t\t.card_workImg img {\n\t\t\t\t\t\twidth: 6rem;\n\t\t\t\t\t\tmargin-right: 1rem;\n\t\t\t\t\t}\n\n\t\t\t\t\tdiv {\n\t\t\t\t\t\tdisplay: inline-block;\n\n\t\t\t\t\t\tspan {\n\t\t\t\t\t\t\tfont-size: 0.9rem;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tul .card_workIncTags {\n\t\t\t\t\t\t\tfloat: left;\n\t\t\t\t\t\t\tfont-size: 0.8rem;\n\t\t\t\t\t\t\tcolor: #aaa;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n</style>\n"]}]}