{"remainingRequest":"C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\src\\view\\center\\center.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\src\\view\\center\\center.vue","mtime":1656036094000},{"path":"C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\babel.config.js","mtime":1656036094000},{"path":"C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1677772052210},{"path":"C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\node_modules\\babel-loader\\lib\\index.js","mtime":1677771858682},{"path":"C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1677772052210},{"path":"C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\node_modules\\vue-loader\\lib\\index.js","mtime":1677772060461}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"C:\\\\Users\\\\Hacker\\\\Desktop\\\\zhaop\\\\resume-master\\\\resume-master\\\\recruit-system\\\\recruit-web\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapActions, mapGetters } from 'vuex';\nimport Vue from 'vue';\nimport Croppa from 'vue-croppa';\nimport User from '@/lin/model/user';\nimport 'vue-croppa/dist/vue-croppa.css';\nimport defaultAvatar from '@/assets/image/user/user.png';\nVue.use(Croppa);\nvar width = 150;\nvar height = 150;\nexport default {\n  name: 'center',\n  components: {},\n  data: function data() {\n    var _this = this;\n\n    var oldPassword = function oldPassword(rule, value, callback) {\n      // eslint-disable-line\n      if (!value) {\n        return callback(new Error('原始密码不能为空'));\n      }\n\n      if (value.length < 6) {\n        callback(new Error('密码长度不能少于6位数'));\n      }\n\n      callback();\n    };\n\n    var validatePassword = function validatePassword(rule, value, callback) {\n      if (value === '') {\n        callback(new Error('请输入密码'));\n      } else if (value.length < 6) {\n        callback(new Error('密码长度不能少于6位数'));\n      } else {\n        if (_this.form.checkPassword !== '') {\n          _this.$refs.form.validateField('confirm_password');\n        }\n\n        callback();\n      }\n    };\n\n    var validatePassword2 = function validatePassword2(rule, value, callback) {\n      if (value === '') {\n        callback(new Error('请再次输入密码'));\n      } else if (value !== _this.form.new_password) {\n        callback(new Error('两次输入密码不一致!'));\n      } else {\n        callback();\n      }\n    };\n\n    return {\n      username: null,\n      nickname: null,\n      tel: null,\n      form: {\n        old_password: '',\n        new_password: '',\n        confirm_password: ''\n      },\n      rules: {\n        old_password: [{\n          validator: oldPassword,\n          trigger: 'blur',\n          required: true\n        }],\n        new_password: [{\n          validator: validatePassword,\n          trigger: 'blur',\n          required: true\n        }],\n        confirm_password: [{\n          validator: validatePassword2,\n          trigger: 'blur',\n          required: true\n        }]\n      },\n      cropRule: {\n        width: width,\n        height: height\n      },\n      imgRule: {\n        minWidth: width,\n        minHeight: height\n      },\n      cropVisible: false,\n      cropImg: '',\n      croppa: {},\n      imgInfo: null,\n      quality: 1,\n      defaultAvatar: defaultAvatar\n    };\n  },\n  computed: _objectSpread({}, mapGetters(['user'])),\n  watch: {\n    cropVisible: function cropVisible(val) {\n      if (!val) {\n        this.$refs.croppa.remove();\n        this.cropImg = '';\n        this.imgInfo = null;\n      }\n    }\n  },\n  created: function created() {\n    this.init();\n  },\n  methods: _objectSpread(_objectSpread({}, mapActions(['loginOut', 'setUserAndState'])), {}, {\n    fileChange: function fileChange(evt) {\n      var _this2 = this;\n\n      if (evt.target.files.length !== 1) {\n        return;\n      }\n\n      var imgFile = evt.target.files[0]; // 验证文件大小是否符合要求, 不大于 5M\n\n      if (imgFile.size > 1024 * 1024 * 5) {\n        this.$message.error('文件过大超过5M'); // 清空输入框\n\n        this.clearFileInput(this.$refs.avatarInput);\n        return;\n      } // 验证图像是否符合要求\n\n\n      var imgSrc = window.URL.createObjectURL(imgFile);\n      var image = new Image();\n      image.src = imgSrc;\n\n      image.onload = function () {\n        var w = image.width;\n        var h = image.height;\n\n        if (w < 50) {\n          _this2.$message.error('图像宽度过小, 请选择大于50px的图像'); // 清空输入框\n\n\n          _this2.clearFileInput(_this2.$refs.avatarInput);\n\n          return;\n        }\n\n        if (h < 50) {\n          _this2.$message.error('图像高度过小, 请选择大于50px的图像'); // 清空输入框\n\n\n          _this2.clearFileInput(_this2.$refs.avatarInput);\n\n          return;\n        } // 验证通过, 打开裁剪框\n\n\n        _this2.cropImg = imgSrc;\n        _this2.cropVisible = true;\n\n        if (_this2.$refs.croppa) {\n          _this2.$refs.croppa.refresh();\n        }\n      };\n\n      image.onerror = function () {\n        _this2.$message.error('获取本地图片出现错误, 请重试'); // 清空输入框\n\n\n        _this2.clearFileInput(_this2.$refs.avatarInput);\n      };\n    },\n    handleCrop: function () {\n      var _handleCrop = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var _this3 = this;\n\n        var blob, file;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.$refs.croppa.promisedBlob('image/jpeg', 0.8);\n\n              case 2:\n                blob = _context.sent;\n                // 构造为文件对象\n                file = new File([blob], 'avatar.jpg', {\n                  type: 'image/jpeg'\n                });\n                return _context.abrupt(\"return\", this.$axios({\n                  method: 'post',\n                  url: '/recruit/file',\n                  data: {\n                    file: file\n                  }\n                }).then(function (res) {\n                  // 清空输入框\n                  _this3.clearFileInput(_this3.$refs.avatarInput);\n\n                  if (!Array.isArray(res) || res.length !== 1) {\n                    _this3.$message.error('头像上传失败, 请重试');\n\n                    return false;\n                  } // TODO: 错误码处理\n                  // if (res.code === 10110) {\n                  //   throw new Error('文件体积过大')\n                  // }\n\n\n                  // TODO: 错误码处理\n                  // if (res.code === 10110) {\n                  //   throw new Error('文件体积过大')\n                  // }\n                  return _this3.$axios({\n                    method: 'put',\n                    url: '/recruit/user',\n                    data: {\n                      avatar: res[0].path\n                    }\n                  }).then(function (putRes) {\n                    // eslint-disable-line\n                    if (putRes.code < window.MAX_SUCCESS_CODE) {\n                      _this3.$message({\n                        type: 'success',\n                        message: '更新头像成功'\n                      });\n\n                      _this3.cropVisible = false; // 触发重新获取用户信息\n\n                      // 触发重新获取用户信息\n                      return User.getInformation();\n                    }\n\n                    return Promise.reject(new Error('更新头像失败'));\n                  }).then(function (infoRes) {\n                    // eslint-disable-line\n                    // 尝试获取当前用户信息\n                    var user = infoRes;\n\n                    _this3.setUserAndState(user);\n                  });\n                }));\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function handleCrop() {\n        return _handleCrop.apply(this, arguments);\n      }\n\n      return handleCrop;\n    }(),\n    blur: function () {\n      var _blur = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var _this4 = this;\n\n        var user;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (this.nickname) {\n                  user = this.$store.state.user;\n\n                  if (this.nickname !== user.nickname && this.nickname !== '佚名') {\n                    this.$axios({\n                      method: 'put',\n                      url: '/recruit/user',\n                      data: {\n                        nickname: this.nickname\n                      },\n                      showBackend: true\n                    }).then(function (res) {\n                      if (res.code < window.MAX_SUCCESS_CODE) {\n                        _this4.$message({\n                          type: 'success',\n                          message: '更新昵称成功'\n                        }); // 触发重新获取用户信息\n\n\n                        return User.getInformation();\n                      }\n                    }).then(function (res) {\n                      // eslint-disable-line\n                      _this4.setUserAndState(res);\n\n                      _this4.nickname = res.nickname;\n                      _this4.tel = res.tel;\n                    });\n                  }\n                }\n\n                this.nicknameChanged = false;\n\n              case 2:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function blur() {\n        return _blur.apply(this, arguments);\n      }\n\n      return blur;\n    }(),\n    init: function init() {\n      var user = this.$store.state.user;\n      this.nickname = user && user.nickname ? user.nickname : '佚名';\n      this.tel = user && user.tel ? user.tel : '';\n    },\n    goToCenter: function goToCenter() {\n      this.$router.push('/center');\n    },\n    submitForm: function submitForm(formName) {\n      var _this5 = this;\n\n      if (this.form.old_password === '' && this.form.new_password === '' && this.form.confirm_password === '') {\n        this.dialogFormVisible = false;\n        return;\n      }\n\n      if (this.form.old_password === this.form.new_password) {\n        this.$message.error('新密码不能与原始密码一样');\n        return;\n      }\n\n      this.$refs[formName].validate( /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(valid) {\n          var res;\n          return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n            while (1) {\n              switch (_context3.prev = _context3.next) {\n                case 0:\n                  if (!valid) {\n                    _context3.next = 7;\n                    break;\n                  }\n\n                  _context3.next = 3;\n                  return User.updatePassword(_this5.form);\n\n                case 3:\n                  res = _context3.sent;\n\n                  if (res.code < window.MAX_SUCCESS_CODE) {\n                    _this5.$message.success(\"\".concat(res.message));\n\n                    _this5.resetForm(formName);\n\n                    _this5.dialogFormVisible = false;\n                    setTimeout(function () {\n                      _this5.loginOut();\n\n                      var origin = window.location.origin;\n                      window.location.href = origin;\n                    }, 1000);\n                  }\n\n                  _context3.next = 10;\n                  break;\n\n                case 7:\n                  console.log('error submit!!');\n\n                  _this5.$message.error('请填写正确的信息');\n\n                  return _context3.abrupt(\"return\", false);\n\n                case 10:\n                case \"end\":\n                  return _context3.stop();\n              }\n            }\n          }, _callee3);\n        }));\n\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n    },\n    // 重置表单\n    resetForm: function resetForm(formName) {\n      this.$refs[formName].resetFields();\n    },\n    clearFileInput: function clearFileInput(ele) {\n      // eslint-disable-next-line\n      ele.value = '';\n    }\n  })\n};",{"version":3,"mappings":"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","names":["mapActions","mapGetters","Vue","name","components","data","callback","username","nickname","tel","form","old_password","new_password","confirm_password","rules","validator","trigger","required","cropRule","width","height","imgRule","minWidth","minHeight","cropVisible","cropImg","croppa","imgInfo","quality","defaultAvatar","computed","watch","val","created","methods","fileChange","evt","image","handleCrop","blob","file","type","method","url","then","avatar","message","blur","user","showBackend","init","goToCenter","submitForm","formName","valid","User","res","setTimeout","origin","window","console","resetForm","clearFileInput","ele"],"sourceRoot":"src/view/center","sources":["center.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <div class=\"title\" style=\" text-align: left;\">个人中心</div>\n    <div class=\"wrap\">\n      <el-row>\n        <el-col>\n          <div class=\"user\">\n            <div class=\"title\">用户信息</div>\n            <div class=\"content\">\n              <div class=\"name-wrapper\">\n                <div class=\"label\">昵称</div>\n                <div class=\"name\">\n                  <el-input placeholder=\"请输入内容\" size=\"small\" v-model=\"nickname\" suffix-icon=\"el-icon-edit\" ref=\"input\"\n                    @blur=\"blur\"></el-input>\n                </div>\n              </div>\n              <el-row>\n                <el-col>\n                  <div class=\"avatar\" title=\"点击修改头像\">\n                    <img :src=\"user.avatar || defaultAvatar\" alt=\"头像\" />\n                    <label class=\"mask\">\n                      <i class=\"iconfont icon-icon-test\" style=\"font-size: 20px;\"></i>\n                      <input ref=\"avatarInput\" type=\"file\" accept=\"image/*\" @change=\"fileChange\" />\n                    </label>\n                  </div>\n                </el-col>\n              </el-row>\n            </div>\n          </div>\n\n          <div class=\"password\">\n            <div class=\"title\">修改密码</div>\n            <el-form :model=\"form\" status-icon :rules=\"rules\" label-position=\"left\" ref=\"form\" label-width=\"90px\"\n              @submit.native.prevent>\n              <el-form-item label=\"原始密码\" prop=\"old_password\">\n                <el-input type=\"password\" v-model=\"form.old_password\" autocomplete=\"off\"></el-input>\n              </el-form-item>\n              <el-form-item label=\"新密码\" prop=\"new_password\">\n                <el-input type=\"password\" v-model=\"form.new_password\" autocomplete=\"off\"></el-input>\n              </el-form-item>\n              <el-form-item label=\"确认密码\" prop=\"confirm_password\" label-position=\"top\">\n                <el-input type=\"password\" v-model=\"form.confirm_password\" autocomplete=\"off\"></el-input>\n              </el-form-item>\n              <el-form-item>\n                <el-button type=\"primary\" @click=\"submitForm('form')\">保存</el-button>\n                <el-button @click=\"resetForm('form')\">重置</el-button>\n              </el-form-item>\n            </el-form>\n          </div>\n        </el-col>\n      </el-row>\n    </div>\n    <!-- 修改头像 -->\n    <el-dialog title=\"裁剪\" :visible.sync=\"cropVisible\" width=\"300px\" :append-to-body=\"true\" :close-on-click-modal=\"false\"\n      custom-class=\"croppa-dialog\" center>\n      <div style=\"text-align: center;\">\n        <div class=\"avatar-croppa-container\">\n          <croppa ref=\"croppa\" :width=\"cropRule.width\" :height=\"cropRule.height\" :placeholder=\"'loading'\"\n            :zoom-speed=\"30\" :disable-drag-and-drop=\"false\" :show-remove-button=\"false\" :prevent-white-space=\"true\"\n            :disable-click-to-choose=\"false\" :disable-scroll-to-zoom=\"false\" :show-loading=\"true\" :quality=\"quality\"\n            :initial-image=\"cropImg\"></croppa>\n        </div>\n        <div style=\"margin-top: 1em;\">通过鼠标滚轮调节头像大小</div>\n      </div>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"cropVisible = false\" size=\"small\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"handleCrop\" size=\"small\">确 定</el-button>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport {\n  mapActions,\n  mapGetters\n} from 'vuex'\nimport Vue from 'vue'\nimport Croppa from 'vue-croppa'\nimport User from '@/lin/model/user'\nimport 'vue-croppa/dist/vue-croppa.css'\nimport defaultAvatar from '@/assets/image/user/user.png'\n\nVue.use(Croppa)\n\nconst width = 150\nconst height = 150\n\nexport default {\n  name: 'center',\n  components: {},\n  data() {\n    const oldPassword = (rule, value, callback) => {\n      // eslint-disable-line\n      if (!value) {\n        return callback(new Error('原始密码不能为空'))\n      }\n      if (value.length < 6) {\n        callback(new Error('密码长度不能少于6位数'))\n      }\n      callback()\n    }\n    const validatePassword = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请输入密码'))\n      } else if (value.length < 6) {\n        callback(new Error('密码长度不能少于6位数'))\n      } else {\n        if (this.form.checkPassword !== '') {\n          this.$refs.form.validateField('confirm_password')\n        }\n        callback()\n      }\n    }\n    const validatePassword2 = (rule, value, callback) => {\n      if (value === '') {\n        callback(new Error('请再次输入密码'))\n      } else if (value !== this.form.new_password) {\n        callback(new Error('两次输入密码不一致!'))\n      } else {\n        callback()\n      }\n    }\n    return {\n      username: null,\n      nickname: null,\n      tel: null,\n      form: {\n        old_password: '',\n        new_password: '',\n        confirm_password: '',\n      },\n      rules: {\n        old_password: [{\n          validator: oldPassword,\n          trigger: 'blur',\n          required: true\n        }],\n        new_password: [{\n          validator: validatePassword,\n          trigger: 'blur',\n          required: true\n        }],\n        confirm_password: [{\n          validator: validatePassword2,\n          trigger: 'blur',\n          required: true\n        }],\n      },\n      cropRule: {\n        width,\n        height,\n      },\n      imgRule: {\n        minWidth: width,\n        minHeight: height,\n      },\n      cropVisible: false,\n      cropImg: '',\n      croppa: {},\n      imgInfo: null,\n      quality: 1,\n      defaultAvatar,\n    }\n  },\n  computed: {\n    ...mapGetters(['user']),\n  },\n  watch: {\n    cropVisible(val) {\n      if (!val) {\n        this.$refs.croppa.remove()\n        this.cropImg = ''\n        this.imgInfo = null\n      }\n    },\n  },\n  created() {\n    this.init()\n  },\n  methods: {\n    ...mapActions(['loginOut', 'setUserAndState']),\n    fileChange(evt) {\n      if (evt.target.files.length !== 1) {\n        return\n      }\n      const imgFile = evt.target.files[0]\n      // 验证文件大小是否符合要求, 不大于 5M\n      if (imgFile.size > 1024 * 1024 * 5) {\n        this.$message.error('文件过大超过5M')\n        // 清空输入框\n        this.clearFileInput(this.$refs.avatarInput)\n        return\n      }\n\n      // 验证图像是否符合要求\n      const imgSrc = window.URL.createObjectURL(imgFile)\n      const image = new Image()\n      image.src = imgSrc\n      image.onload = () => {\n        const w = image.width\n        const h = image.height\n        if (w < 50) {\n          this.$message.error('图像宽度过小, 请选择大于50px的图像')\n          // 清空输入框\n          this.clearFileInput(this.$refs.avatarInput)\n          return\n        }\n        if (h < 50) {\n          this.$message.error('图像高度过小, 请选择大于50px的图像')\n          // 清空输入框\n          this.clearFileInput(this.$refs.avatarInput)\n          return\n        }\n        // 验证通过, 打开裁剪框\n        this.cropImg = imgSrc\n        this.cropVisible = true\n        if (this.$refs.croppa) {\n          this.$refs.croppa.refresh()\n        }\n      }\n      image.onerror = () => {\n        this.$message.error('获取本地图片出现错误, 请重试')\n        // 清空输入框\n        this.clearFileInput(this.$refs.avatarInput)\n      }\n    },\n    async handleCrop() {\n      // 获取裁剪数据\n      const blob = await this.$refs.croppa.promisedBlob('image/jpeg', 0.8)\n      // 构造为文件对象\n      const file = new File([blob], 'avatar.jpg', {\n        type: 'image/jpeg',\n      })\n\n      return this.$axios({\n        method: 'post',\n        url: '/recruit/file',\n        data: {\n          file,\n        },\n      }).then(res => {\n        // 清空输入框\n        this.clearFileInput(this.$refs.avatarInput)\n        if (!Array.isArray(res) || res.length !== 1) {\n          this.$message.error('头像上传失败, 请重试')\n          return false\n        }\n        // TODO: 错误码处理\n        // if (res.code === 10110) {\n        //   throw new Error('文件体积过大')\n        // }\n        return this.$axios({\n          method: 'put',\n          url: '/recruit/user',\n          data: {\n            avatar: res[0].path,\n          },\n        })\n          .then(putRes => {\n            // eslint-disable-line\n            if (putRes.code < window.MAX_SUCCESS_CODE) {\n              this.$message({\n                type: 'success',\n                message: '更新头像成功',\n              })\n              this.cropVisible = false\n              // 触发重新获取用户信息\n              return User.getInformation()\n            }\n            return Promise.reject(new Error('更新头像失败'))\n          })\n          .then(infoRes => {\n            // eslint-disable-line\n            // 尝试获取当前用户信息\n            const user = infoRes\n            this.setUserAndState(user)\n          })\n      })\n    },\n    async blur() {\n      if (this.nickname) {\n        const {\n          user\n        } = this.$store.state\n        if (this.nickname !== user.nickname && this.nickname !== '佚名') {\n          this.$axios({\n            method: 'put',\n            url: '/recruit/user',\n            data: {\n              nickname: this.nickname,\n            },\n            showBackend: true,\n          })\n            .then(res => {\n              if (res.code < window.MAX_SUCCESS_CODE) {\n                this.$message({\n                  type: 'success',\n                  message: '更新昵称成功',\n                })\n                // 触发重新获取用户信息\n                return User.getInformation()\n              }\n            })\n            .then(res => {\n              // eslint-disable-line\n              this.setUserAndState(res)\n              this.nickname = res.nickname\n              this.tel = res.tel\n            })\n        }\n      }\n      this.nicknameChanged = false\n    },\n    init() {\n      const {\n        user\n      } = this.$store.state\n      this.nickname = user && user.nickname ? user.nickname : '佚名'\n      this.tel = user && user.tel ? user.tel : ''\n    },\n    goToCenter() {\n      this.$router.push('/center')\n    },\n    submitForm(formName) {\n      if (this.form.old_password === '' && this.form.new_password === '' && this.form.confirm_password === '') {\n        this.dialogFormVisible = false\n        return\n      }\n      if (this.form.old_password === this.form.new_password) {\n        this.$message.error('新密码不能与原始密码一样')\n        return\n      }\n      this.$refs[formName].validate(async valid => {\n        // eslint-disable-line\n        if (valid) {\n          const res = await User.updatePassword(this.form)\n          if (res.code < window.MAX_SUCCESS_CODE) {\n            this.$message.success(`${res.message}`)\n            this.resetForm(formName)\n            this.dialogFormVisible = false\n            setTimeout(() => {\n              this.loginOut()\n              const {\n                origin\n              } = window.location\n              window.location.href = origin\n            }, 1000)\n          }\n        } else {\n          console.log('error submit!!')\n          this.$message.error('请填写正确的信息')\n          return false\n        }\n      })\n    },\n    // 重置表单\n    resetForm(formName) {\n      this.$refs[formName].resetFields()\n    },\n    clearFileInput(ele) {\n      // eslint-disable-next-line\n      ele.value = ''\n    },\n  },\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.container {\n  .title {\n    height: 59px;\n    line-height: 59px;\n    color: $parent-title-color;\n    font-size: 16px;\n    font-weight: 500;\n    text-indent: 40px;\n    border-bottom: 1px solid #dae1ec;\n  }\n\n  .wrap {\n    padding: 20px;\n    max-width: 800px;\n\n    .user {\n      padding: 0px 20px 25px 30px;\n      z-index: 100;\n      position: relative;\n      border-bottom: 1px solid #dae1ec;\n\n      .title {\n        font-weight: bold;\n        font-size: 16px;\n        color: #3a3a3a;\n        text-indent: 0px;\n        border: none;\n      }\n\n      .content {\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n\n        .name-wrapper {\n          display: flex;\n          align-items: center;\n\n          .label {\n            margin-right: 20px;\n            color: #333;\n            font-weight: bold;\n            font-size: 14px;\n          }\n\n          .name {\n            font-weight: 500;\n          }\n        }\n\n        .avatar {\n          width: 80px;\n          height: 80px;\n          border-radius: 50%;\n          cursor: pointer;\n          overflow: hidden;\n          position: relative;\n\n          .mask {\n            opacity: 0;\n            transition: all 0.2s;\n            position: absolute;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n            background: rgba(0, 0, 0, 0.3);\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            cursor: pointer;\n            color: white;\n\n            input {\n              display: none;\n            }\n          }\n\n          &:hover {\n            .mask {\n              opacity: 1;\n            }\n          }\n        }\n\n        .text {\n          margin-left: 20px;\n          color: #fff;\n          display: flex;\n          flex-direction: column;\n          justify-content: center;\n\n          .username {\n            margin-bottom: 10px;\n            font-size: 16px;\n            cursor: pointer;\n          }\n\n          .desc {\n            font-size: 14px;\n            color: rgba(222, 226, 230, 1);\n          }\n        }\n\n        .info {\n          position: absolute;\n          bottom: 10px;\n          right: 10px;\n          display: flex;\n          color: #fff;\n          font-size: 14px;\n          height: 20px;\n          line-height: 20px;\n\n          .mid {\n            padding: 0 5px;\n          }\n        }\n      }\n    }\n\n    .password {\n      padding: 25px 20px 25px 30px;\n\n      .title {\n        color: #3a3a3a;\n        font-weight: bold;\n        font-size: 16px;\n        text-indent: 0px;\n        margin-bottom: 20px;\n        border: none;\n      }\n    }\n  }\n}\n</style>\n"]}]}