{"remainingRequest":"C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\src\\view\\company\\company-modify.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\src\\view\\company\\company-modify.vue","mtime":1656036094000},{"path":"C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\babel.config.js","mtime":1656036094000},{"path":"C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1677772052210},{"path":"C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\node_modules\\babel-loader\\lib\\index.js","mtime":1677771858682},{"path":"C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1677772052210},{"path":"C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\node_modules\\vue-loader\\lib\\index.js","mtime":1677772060461}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"C:\\\\Users\\\\Hacker\\\\Desktop\\\\zhaop\\\\resume-master\\\\resume-master\\\\recruit-system\\\\recruit-web\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { HRCompany } from '@/model/hrCompany';\nimport { Company } from '@/model/company';\nimport UploadImgs from '@/component/base/upload-image';\nimport CompanyCreate from '@/view/company/company-create';\nexport default {\n  components: {\n    UploadImgs: UploadImgs,\n    CompanyCreate: CompanyCreate\n  },\n  data: function data() {\n    return {\n      loading: false,\n      form: {},\n      maxNum: 1,\n      initData: [],\n      showCreate: false\n    };\n  },\n  mounted: function () {\n    var _mounted = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              this.loading = true;\n              _context.next = 4;\n              return HRCompany.get(this.$store.getters.user.id);\n\n            case 4:\n              res = _context.sent;\n              this.initData = [{\n                id: res.id,\n                display: res.logo\n              }];\n              this.form = res;\n              this.loading = false;\n              _context.next = 15;\n              break;\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](0);\n              this.loading = false;\n              console.log(_context.t0); // 还未完成企业认证，会显示企业认证组件\n\n              this.showCreate = true;\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this, [[0, 10]]);\n    }));\n\n    function mounted() {\n      return _mounted.apply(this, arguments);\n    }\n\n    return mounted;\n  }(),\n  methods: {\n    // 上传图片之后，获取服务器返回的url地址\n    getValue: function () {\n      var _getValue = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var val;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.$refs.uploadEle.getValue();\n\n              case 2:\n                val = _context2.sent;\n\n                if (val && val.length > 0) {\n                  this.form.logo = val[0].display;\n                }\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function getValue() {\n        return _getValue.apply(this, arguments);\n      }\n\n      return getValue;\n    }(),\n    submitForm: function () {\n      var _submitForm = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var res, result;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return this.getValue();\n\n              case 2:\n                _context3.next = 4;\n                return Company.update(this.form.id, this.form);\n\n              case 4:\n                res = _context3.sent;\n                _context3.next = 7;\n                return Company.updateState(this.form.id, 0);\n\n              case 7:\n                if (res.code < window.MAX_SUCCESS_CODE) {\n                  this.$message.success(\"\".concat(res.message));\n                } // 刷新页面，获取修改后的最新信息\n\n\n                this.loading = true;\n                _context3.next = 11;\n                return HRCompany.get(this.$store.getters.user.id);\n\n              case 11:\n                result = _context3.sent;\n                this.initData = [{\n                  id: result.id,\n                  display: result.logo\n                }];\n                this.form = result;\n                this.loading = false;\n\n              case 15:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function submitForm() {\n        return _submitForm.apply(this, arguments);\n      }\n\n      return submitForm;\n    }(),\n    // 重置表单\n    resetForm: function resetForm(formName) {\n      this.$refs[formName].resetFields();\n    },\n    createClose: function () {\n      var _createClose = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                this.showCreate = false; // 再次访问接口填充表单数据\n\n                this.loading = true;\n                _context4.next = 4;\n                return HRCompany.get(this.$store.getters.user.id);\n\n              case 4:\n                res = _context4.sent;\n                this.initData = [{\n                  id: res.id,\n                  display: res.logo\n                }];\n                this.form = res;\n                this.loading = false;\n\n              case 8:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function createClose() {\n        return _createClose.apply(this, arguments);\n      }\n\n      return createClose;\n    }()\n  }\n};",{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmDA;AACA;AACA;AACA;AAEA;AACAA;AACAC,0BADA;AAEAC;AAFA,GADA;AAKAC,MALA,kBAKA;AACA;AACAC,oBADA;AAEAC,cAFA;AAIAC,eAJA;AAKAC,kBALA;AAMAC;AANA;AAQA,GAdA;AAeAC,SAfA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiBA;AAjBA;AAAA,qBAkBAC,0CAlBA;;AAAA;AAkBAC,iBAlBA;AAmBA,+BACA;AACAC,0BADA;AAEAC;AAFA,eADA;AAMA;AACA;AA1BA;AAAA;;AAAA;AAAA;AAAA;AA4BA;AACAC,uCA7BA,CA8BA;;AACA;;AA/BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAkCAC;AACA;AACAC,YAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAGA,+BAHA;;AAAA;AAGAC,mBAHA;;AAIA;AACA;AACA;;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAQAC,cARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBASA,eATA;;AAAA;AAAA;AAAA,uBAUAC,uCAVA;;AAAA;AAUAR,mBAVA;AAAA;AAAA,uBAYAQ,oCAZA;;AAAA;AAaA;AACA;AACA,iBAfA,CAgBA;;;AACA;AAjBA;AAAA,uBAkBAT,0CAlBA;;AAAA;AAkBAU,sBAlBA;AAmBA,iCACA;AACAR,+BADA;AAEAC;AAFA,iBADA;AAMA;AACA;;AA1BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AA4BA;AACAQ,aA7BA,qBA6BAC,QA7BA,EA6BA;AACA;AACA,KA/BA;AAgCAC,eAhCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiCA,wCAjCA,CAkCA;;AACA;AAnCA;AAAA,uBAoCAb,0CApCA;;AAAA;AAoCAC,mBApCA;AAqCA,iCACA;AACAC,4BADA;AAEAC;AAFA,iBADA;AAMA;AACA;;AA5CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAlCA","names":["components","UploadImgs","CompanyCreate","data","loading","form","maxNum","initData","showCreate","mounted","HRCompany","res","id","display","console","methods","getValue","val","submitForm","Company","result","resetForm","formName","createClose"],"sourceRoot":"src/view/company","sources":["company-modify.vue"],"sourcesContent":["<template>\n  <!-- 我的企业信息页面 -->\n  <div class=\"container\" v-if=\"!showCreate\">\n    <div class=\"title\" style=\" text-align: left;\">\n      <span>我的企业信息</span>\n    </div>\n    <el-divider></el-divider>\n    <div class=\"wrap\">\n      <el-row>\n        <el-col :lg=\"16\" :md=\"20\" :sm=\"24\" :xs=\"24\">\n          <el-form :model=\"form\" status-icon ref=\"form\" label-width=\"100px\" v-loading=\"loading\" @submit.native.prevent>\n            <!-- 公司名称不设置prop属性，重置的时候就不会重置该字段 -->\n            <el-form-item label=\"公司名称\">\n              <el-input size=\"medium\" v-model=\"form.name\" placeholder=\"请填写公司名称\" disabled></el-input>\n            </el-form-item>\n            <el-form-item label=\"公司外文名\" prop=\"foreign_name\">\n              <el-input size=\"medium\" v-model=\"form.foreign_name\" placeholder=\"请填写公司外文名\"></el-input>\n            </el-form-item>\n            <el-form-item label=\"总部地点\" prop=\"city\">\n              <el-input size=\"medium\" v-model=\"form.city\" placeholder=\"请填写公司总部地点\"></el-input>\n            </el-form-item>\n            <el-form-item label=\"公司logo\" prop=\"logo\">\n              <upload-imgs :max-num=\"maxNum\" ref=\"uploadEle\" :value=\"initData\" />\n            </el-form-item>\n            <el-form-item label=\"公司使命\" prop=\"mission\">\n              <el-input size=\"medium\" v-model=\"form.mission\" placeholder=\"请填写使命\"></el-input>\n            </el-form-item>\n            <el-form-item label=\"公司简介\" prop=\"description\">\n              <el-input size=\"medium\" type=\"textarea\" :rows=\"4\" placeholder=\"请输入公司简介\" v-model=\"form.description\">\n              </el-input>\n            </el-form-item>\n            <el-form-item label=\"认证状态\" prop=\"state\">\n              <!-- <el-switch v-model=\"form.state\"></el-switch> -->\n              <span v-if=\"form.state\" style=\"color:green\">审核通过</span>\n              <span v-else style=\"color:brown\">待审核</span>\n            </el-form-item>\n            <el-form-item class=\"submit\">\n              <el-button type=\"primary\" @click=\"submitForm('form')\">保 存</el-button>\n              <el-button @click=\"resetForm('form')\">重 置</el-button>\n            </el-form-item>\n          </el-form>\n        </el-col>\n      </el-row>\n    </div>\n  </div>\n\n  <!-- 企业认证 -->\n  <company-create v-else @createClose=\"createClose\"></company-create>\n</template>\n\n<script>\nimport { HRCompany } from '@/model/hrCompany'\nimport { Company } from '@/model/company'\nimport UploadImgs from '@/component/base/upload-image'\nimport CompanyCreate from '@/view/company/company-create'\n\nexport default {\n  components: {\n    UploadImgs,\n    CompanyCreate,\n  },\n  data() {\n    return {\n      loading: false,\n      form: {\n      },\n      maxNum: 1,\n      initData: [],\n      showCreate: false,\n    }\n  },\n  async mounted() {\n    try {\n      this.loading = true\n      const res = await HRCompany.get(this.$store.getters.user.id)\n      this.initData = [\n        {\n          id: res.id,\n          display: res.logo,\n        },\n      ]\n      this.form = res\n      this.loading = false\n    } catch (error) {\n      this.loading = false\n      console.log(error)\n      // 还未完成企业认证，会显示企业认证组件\n      this.showCreate = true\n    }\n  },\n  methods: {\n    // 上传图片之后，获取服务器返回的url地址\n    async getValue() {\n      const val = await this.$refs.uploadEle.getValue()\n      if (val && val.length > 0) {\n        this.form.logo = val[0].display\n      }\n    },\n    async submitForm() {\n      await this.getValue()\n      const res = await Company.update(this.form.id, this.form)\n      // 修改公司状态为待审核，即state=0（每修改一次企业信息之后，都需要经过管理员再次审核）\n      await Company.updateState(this.form.id, 0);\n      if (res.code < window.MAX_SUCCESS_CODE) {\n        this.$message.success(`${res.message}`)\n      }\n      // 刷新页面，获取修改后的最新信息\n      this.loading = true\n      const result = await HRCompany.get(this.$store.getters.user.id)\n      this.initData = [\n        {\n          id: result.id,\n          display: result.logo,\n        },\n      ]\n      this.form = result\n      this.loading = false\n    },\n    // 重置表单\n    resetForm(formName) {\n      this.$refs[formName].resetFields()\n    },\n    async createClose() {\n      this.showCreate = false\n      // 再次访问接口填充表单数据\n      this.loading = true\n      const res = await HRCompany.get(this.$store.getters.user.id)\n      this.initData = [\n        {\n          id: res.id,\n          display: res.logo,\n        },\n      ]\n      this.form = res\n      this.loading = false\n    },\n  },\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.el-divider--horizontal {\n  margin: 0;\n}\n\n.container {\n  .title {\n    height: 59px;\n    line-height: 59px;\n    color: $parent-title-color;\n    font-size: 16px;\n    font-weight: 500;\n    text-indent: 40px;\n\n    .back {\n      float: right;\n      margin-right: 40px;\n      cursor: pointer;\n    }\n  }\n\n  .wrap {\n    padding: 20px;\n  }\n\n  .submit {\n    float: left;\n  }\n}\n</style>\n"]}]}