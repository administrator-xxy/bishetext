{"remainingRequest":"C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\src\\view\\category\\category-create.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\src\\view\\category\\category-create.vue","mtime":1656036094000},{"path":"C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\babel.config.js","mtime":1656036094000},{"path":"C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1677772052210},{"path":"C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\node_modules\\babel-loader\\lib\\index.js","mtime":1677771858682},{"path":"C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1677772052210},{"path":"C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\node_modules\\vue-loader\\lib\\index.js","mtime":1677772060461}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"C:\\\\Users\\\\Hacker\\\\Desktop\\\\zhaop\\\\resume-master\\\\resume-master\\\\recruit-system\\\\recruit-web\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { Category } from '@/model/category';\nexport default {\n  data: function data() {\n    return {\n      form: {},\n      loading: false\n    };\n  },\n  methods: {\n    submitForm: function () {\n      var _submitForm = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(formName) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                this.loading = true;\n                _context.next = 4;\n                return Category.createCategory(this.form);\n\n              case 4:\n                res = _context.sent;\n                this.loading = false;\n\n                if (res.code < window.MAX_SUCCESS_CODE) {\n                  this.$message.success(\"\".concat(res.message)); // 清空输入框，方便继续添加职位分类\n\n                  this.resetForm(formName);\n                }\n\n                _context.next = 13;\n                break;\n\n              case 9:\n                _context.prev = 9;\n                _context.t0 = _context[\"catch\"](0);\n                this.loading = false;\n                console.log(_context.t0);\n\n              case 13:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 9]]);\n      }));\n\n      function submitForm(_x) {\n        return _submitForm.apply(this, arguments);\n      }\n\n      return submitForm;\n    }(),\n    // 重置表单\n    resetForm: function resetForm(formName) {\n      this.$refs[formName].resetFields();\n    }\n  }\n};",{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BA;AAEA;AACAA,MADA,kBACA;AACA;AACAC,cADA;AAGAC;AAHA;AAKA,GAPA;AAQAC;AACAC,cADA;AAAA,kGACAC,QADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAHA;AAAA,uBAIAC,kCAJA;;AAAA;AAIAC,mBAJA;AAKA;;AACA;AACA,gEADA,CAEA;;AACA;AACA;;AAVA;AAAA;;AAAA;AAAA;AAAA;AAYA;AACAC;;AAbA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAgBA;AACAC,aAjBA,qBAiBAJ,QAjBA,EAiBA;AACA;AACA;AAnBA;AARA","names":["data","form","loading","methods","submitForm","formName","Category","res","console","resetForm"],"sourceRoot":"src/view/category","sources":["category-create.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <div class=\"title\" style=\" text-align: left;\">新建职位分类</div>\n    <div class=\"wrap\">\n      <el-row>\n        <el-col :lg=\"16\" :md=\"20\" :sm=\"24\" :xs=\"24\">\n          <el-form :model=\"form\" status-icon ref=\"form\" label-width=\"100px\" @submit.native.prevent>\n            <el-form-item label=\"分类名称\" prop=\"name\">\n              <el-input size=\"medium\" v-model=\"form.name\" placeholder=\"请填写职位分类名称\"></el-input>\n            </el-form-item>\n            <el-form-item label=\"分类描述\" prop=\"description\">\n              <el-input size=\"medium\" type=\"textarea\" :autosize=\"{ minRows: 4, maxRows: 8 }\" placeholder=\"请输入职位分类描述\"\n                v-model=\"form.description\">\n              </el-input>\n            </el-form-item>\n\n            <el-form-item class=\"submit\">\n              <el-button type=\"primary\" @click=\"submitForm('form')\" :loading=\"loading\">保 存</el-button>\n              <el-button @click=\"resetForm('form')\">重 置</el-button>\n            </el-form-item>\n          </el-form>\n        </el-col>\n      </el-row>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { Category } from '@/model/category'\n\nexport default {\n  data() {\n    return {\n      form: {\n      },\n      loading: false,\n    }\n  },\n  methods: {\n    async submitForm(formName) {\n      try {\n        this.loading = true\n        const res = await Category.createCategory(this.form)\n        this.loading = false\n        if (res.code < window.MAX_SUCCESS_CODE) {\n          this.$message.success(`${res.message}`)\n          // 清空输入框，方便继续添加职位分类\n          this.resetForm(formName)\n        }\n      } catch (error) {\n        this.loading = false\n        console.log(error)\n      }\n    },\n    // 重置表单\n    resetForm(formName) {\n      this.$refs[formName].resetFields()\n    },\n  },\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.container {\n  .title {\n    height: 59px;\n    line-height: 59px;\n    color: $parent-title-color;\n    font-size: 16px;\n    font-weight: 500;\n    text-indent: 40px;\n    border-bottom: 1px solid #dae1ec;\n  }\n\n  .wrap {\n    padding: 20px;\n  }\n\n  .submit {\n    float: left;\n  }\n}\n</style>\n"]}]}