{"remainingRequest":"C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\src\\component\\base\\upload-image\\utils.js","dependencies":[{"path":"C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\src\\component\\base\\upload-image\\utils.js","mtime":1656036094000},{"path":"C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\babel.config.js","mtime":1656036094000},{"path":"C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1677772052210},{"path":"C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\node_modules\\babel-loader\\lib\\index.js","mtime":1677771858682},{"path":"C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js","mtime":1677771968250}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"C:\\\\Users\\\\Hacker\\\\Desktop\\\\zhaop\\\\resume-master\\\\resume-master\\\\recruit-system\\\\recruit-web\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n// 检测官方文档: https://mimesniff.spec.whatwg.org/#matching-an-image-type-pattern\n\n/** 类型检测掩码集合 */\nvar patternMask = [{\n  name: 'image/x-icon',\n  mask: [0xff, 0xff, 0xff, 0xff],\n  byte: [0x00, 0x00, 0x01, 0x00]\n}, {\n  name: 'image/x-icon',\n  mask: [0xff, 0xff, 0xff, 0xff],\n  byte: [0x00, 0x00, 0x02, 0x00]\n}, {\n  name: 'image/bmp',\n  mask: [0xff, 0xff],\n  byte: [0x42, 0x4d]\n}, {\n  name: 'image/gif',\n  mask: [0xff, 0xff, 0xff, 0xff, 0xff, 0xff],\n  byte: [0x47, 0x49, 0x46, 0x38, 0x37, 0x61]\n}, {\n  name: 'image/gif',\n  mask: [0xff, 0xff, 0xff, 0xff, 0xff, 0xff],\n  byte: [0x47, 0x49, 0x46, 0x38, 0x39, 0x61]\n}, {\n  name: 'image/webp',\n  mask: [0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff],\n  byte: [0x52, 0x49, 0x46, 0x46, 0x00, 0x00, 0x00, 0x00, 0x57, 0x45, 0x42, 0x50, 0x56, 0x50]\n}, {\n  name: 'image/png',\n  mask: [0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff],\n  byte: [0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a]\n}, {\n  name: 'image/jpeg',\n  mask: [0xff, 0xff, 0xff],\n  byte: [0xff, 0xd8, 0xff]\n}];\n/** 判断是否是空对象 */\n\nexport function isEmptyObj(data) {\n  if (!data) return true;\n  return JSON.stringify(data) === '{}';\n}\n/** 生成随机字符串 */\n\nexport function createId() {\n  return Math.random().toString(36).substring(2);\n}\n/**\n * 检测是否是动图\n * 主要针对 Gif 和 Webp 两种格式\n */\n\nexport function checkIsAnimated(_x) {\n  return _checkIsAnimated.apply(this, arguments);\n}\n/**\n * 检测文件类型\n * 使用文件编码进行检测\n * 支持模式参看: patternMask 定义\n */\n\nfunction _checkIsAnimated() {\n  _checkIsAnimated = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {\n    var file, fileUrl, fileType;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            file = _ref.file, fileUrl = _ref.fileUrl, fileType = _ref.fileType;\n\n            if (!(!file || !(file instanceof File))) {\n              _context.next = 4;\n              break;\n            }\n\n            console.error('isAnimated param check fail: param expected to be File object');\n            return _context.abrupt(\"return\", false);\n\n          case 4:\n            if (!(fileType !== 'image/webp' && fileType !== 'image/gif')) {\n              _context.next = 6;\n              break;\n            }\n\n            return _context.abrupt(\"return\", false);\n\n          case 6:\n            if (!(fileType === 'image/webp')) {\n              _context.next = 8;\n              break;\n            }\n\n            return _context.abrupt(\"return\", new Promise(function (resolve) {\n              var request = new XMLHttpRequest();\n              request.open('GET', fileUrl, true);\n              request.addEventListener('load', function () {\n                resolve(request.response.indexOf('ANMF') !== -1);\n              });\n              request.send();\n            }));\n\n          case 8:\n            if (!(fileType === 'image/gif')) {\n              _context.next = 10;\n              break;\n            }\n\n            return _context.abrupt(\"return\", new Promise(function (resolve) {\n              var request = new XMLHttpRequest();\n              request.open('GET', fileUrl, true);\n              request.responseType = 'arraybuffer';\n              request.addEventListener('load', function () {\n                var arr = new Uint8Array(request.response); // make sure it's a gif (GIF8)\n\n                // make sure it's a gif (GIF8)\n                if (arr[0] !== 0x47 || arr[1] !== 0x49 || arr[2] !== 0x46 || arr[3] !== 0x38) {\n                  resolve(false);\n                  return;\n                } // ported from php http://www.php.net/manual/en/function.imagecreatefromgif.php#104473\n                // an animated gif contains multiple \"frames\", with each frame having a\n                // header made up of:\n                // * a static 4-byte sequence (\\x00\\x21\\xF9\\x04)\n                // * 4 variable bytes\n                // * a static 2-byte sequence (\\x00\\x2C) (some variants may use \\x00\\x21 ?)\n                // We read through the file til we reach the end of the file, or we've found\n                // at least 2 frame headers\n\n\n                // ported from php http://www.php.net/manual/en/function.imagecreatefromgif.php#104473\n                // an animated gif contains multiple \"frames\", with each frame having a\n                // header made up of:\n                // * a static 4-byte sequence (\\x00\\x21\\xF9\\x04)\n                // * 4 variable bytes\n                // * a static 2-byte sequence (\\x00\\x2C) (some variants may use \\x00\\x21 ?)\n                // We read through the file til we reach the end of the file, or we've found\n                // at least 2 frame headers\n                var frames = 0;\n\n                for (var i = 0, len = arr.length - 9; i < len && frames < 2; ++i) {\n                  if (arr[i] === 0x00 && arr[i + 1] === 0x21 && arr[i + 2] === 0xf9 && arr[i + 3] === 0x04 && arr[i + 8] === 0x00 && (arr[i + 9] === 0x2c || arr[i + 9] === 0x21)) {\n                    frames++;\n                  }\n                } // if frame count > 1, it's animated\n\n\n                // if frame count > 1, it's animated\n                resolve(frames > 1);\n              });\n              request.send();\n            }));\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _checkIsAnimated.apply(this, arguments);\n}\n\nexport function getFileType(_x2) {\n  return _getFileType.apply(this, arguments);\n}\n\nfunction _getFileType() {\n  _getFileType = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(file) {\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (file instanceof File) {\n              _context2.next = 2;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", 'unknown');\n\n          case 2:\n            return _context2.abrupt(\"return\", new Promise(function (resolve) {\n              var fileReader = new FileReader();\n\n              fileReader.onloadend = function (e) {\n                var header = new Uint8Array(e.target.result).slice(0, 20);\n                var type = 'unknown'; // eslint-disable-next-line arrow-body-style\n\n                // eslint-disable-next-line arrow-body-style\n                var index = patternMask.findIndex(function (item) {\n                  // eslint-disable-next-line arrow-body-style\n                  return item.mask.every(function (subItem, subI) {\n                    // subItem 掩码标志\n                    // item.byte[subI] 规范值\n                    // header[subI] 文件实际值\n                    // eslint-disable-next-line\n                    return (subItem & (header[subI] ^ item.byte[subI])) === 0;\n                  });\n                });\n\n                if (index >= 0) {\n                  type = patternMask[index].name;\n                }\n\n                resolve(type);\n              };\n\n              fileReader.readAsArrayBuffer(file);\n            }));\n\n          case 3:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _getFileType.apply(this, arguments);\n}",{"version":3,"sources":["C:/Users/Hacker/Desktop/zhaop/resume-master/resume-master/recruit-system/recruit-web/src/component/base/upload-image/utils.js"],"names":["patternMask","name","mask","byte","isEmptyObj","data","JSON","stringify","createId","Math","random","toString","substring","checkIsAnimated","file","fileUrl","fileType","File","console","error","Promise","resolve","request","XMLHttpRequest","open","addEventListener","response","indexOf","send","responseType","arr","Uint8Array","frames","i","len","length","getFileType","fileReader","FileReader","onloadend","e","header","target","result","slice","type","index","findIndex","item","every","subItem","subI","readAsArrayBuffer"],"mappings":"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","sourcesContent":["// 检测官方文档: https://mimesniff.spec.whatwg.org/#matching-an-image-type-pattern\n/** 类型检测掩码集合 */\nconst patternMask = [\n  {\n    name: 'image/x-icon',\n    mask: [0xff, 0xff, 0xff, 0xff],\n    byte: [0x00, 0x00, 0x01, 0x00],\n  },\n  {\n    name: 'image/x-icon',\n    mask: [0xff, 0xff, 0xff, 0xff],\n    byte: [0x00, 0x00, 0x02, 0x00],\n  },\n  {\n    name: 'image/bmp',\n    mask: [0xff, 0xff],\n    byte: [0x42, 0x4d],\n  },\n  {\n    name: 'image/gif',\n    mask: [0xff, 0xff, 0xff, 0xff, 0xff, 0xff],\n    byte: [0x47, 0x49, 0x46, 0x38, 0x37, 0x61],\n  },\n  {\n    name: 'image/gif',\n    mask: [0xff, 0xff, 0xff, 0xff, 0xff, 0xff],\n    byte: [0x47, 0x49, 0x46, 0x38, 0x39, 0x61],\n  },\n  {\n    name: 'image/webp',\n    mask: [0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff],\n    byte: [0x52, 0x49, 0x46, 0x46, 0x00, 0x00, 0x00, 0x00, 0x57, 0x45, 0x42, 0x50, 0x56, 0x50],\n  },\n  {\n    name: 'image/png',\n    mask: [0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff],\n    byte: [0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a],\n  },\n  {\n    name: 'image/jpeg',\n    mask: [0xff, 0xff, 0xff],\n    byte: [0xff, 0xd8, 0xff],\n  },\n]\n\n/** 判断是否是空对象 */\nexport function isEmptyObj(data) {\n  if (!data) return true\n  return JSON.stringify(data) === '{}'\n}\n\n/** 生成随机字符串 */\nexport function createId() {\n  return Math.random()\n    .toString(36)\n    .substring(2)\n}\n\n/**\n * 检测是否是动图\n * 主要针对 Gif 和 Webp 两种格式\n */\nexport async function checkIsAnimated({ file, fileUrl, fileType }) {\n  // 参数验证\n  if (!file || !(file instanceof File)) {\n    console.error('isAnimated param check fail: param expected to be File object')\n    return false\n  }\n  // 如果不是 gif 和 webp, 默认作为非动图\n  if (fileType !== 'image/webp' && fileType !== 'image/gif') {\n    return false\n  }\n\n  if (fileType === 'image/webp') {\n    return new Promise(resolve => {\n      const request = new XMLHttpRequest()\n      request.open('GET', fileUrl, true)\n      request.addEventListener('load', () => {\n        resolve(request.response.indexOf('ANMF') !== -1)\n      })\n      request.send()\n    })\n  }\n  if (fileType === 'image/gif') {\n    return new Promise(resolve => {\n      const request = new XMLHttpRequest()\n      request.open('GET', fileUrl, true)\n      request.responseType = 'arraybuffer'\n      request.addEventListener('load', () => {\n        const arr = new Uint8Array(request.response)\n        // make sure it's a gif (GIF8)\n        if (arr[0] !== 0x47 || arr[1] !== 0x49 || arr[2] !== 0x46 || arr[3] !== 0x38) {\n          resolve(false)\n          return\n        }\n\n        // ported from php http://www.php.net/manual/en/function.imagecreatefromgif.php#104473\n        // an animated gif contains multiple \"frames\", with each frame having a\n        // header made up of:\n        // * a static 4-byte sequence (\\x00\\x21\\xF9\\x04)\n        // * 4 variable bytes\n        // * a static 2-byte sequence (\\x00\\x2C) (some variants may use \\x00\\x21 ?)\n        // We read through the file til we reach the end of the file, or we've found\n        // at least 2 frame headers\n        let frames = 0\n        for (let i = 0, len = arr.length - 9; i < len && frames < 2; ++i) {\n          if (\n            arr[i] === 0x00\n            && arr[i + 1] === 0x21\n            && arr[i + 2] === 0xf9\n            && arr[i + 3] === 0x04\n            && arr[i + 8] === 0x00\n            && (arr[i + 9] === 0x2c || arr[i + 9] === 0x21)\n          ) {\n            frames++\n          }\n        }\n\n        // if frame count > 1, it's animated\n        resolve(frames > 1)\n      })\n      request.send()\n    })\n  }\n}\n\n/**\n * 检测文件类型\n * 使用文件编码进行检测\n * 支持模式参看: patternMask 定义\n */\nexport async function getFileType(file) {\n  if (!(file instanceof File)) {\n    return 'unknown'\n  }\n  return new Promise(resolve => {\n    const fileReader = new FileReader()\n    fileReader.onloadend = e => {\n      const header = new Uint8Array(e.target.result).slice(0, 20)\n      let type = 'unknown'\n\n      // eslint-disable-next-line arrow-body-style\n      const index = patternMask.findIndex(item => {\n        // eslint-disable-next-line arrow-body-style\n        return item.mask.every((subItem, subI) => {\n          // subItem 掩码标志\n          // item.byte[subI] 规范值\n          // header[subI] 文件实际值\n          // eslint-disable-next-line\n          return (subItem & (header[subI] ^ item.byte[subI])) === 0\n        })\n      })\n\n      if (index >= 0) {\n        type = patternMask[index].name\n      }\n\n      resolve(type)\n    }\n    fileReader.readAsArrayBuffer(file)\n  })\n}\n"]}]}