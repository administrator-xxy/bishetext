{"remainingRequest":"C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\src\\view\\position\\position-modify.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\src\\view\\position\\position-modify.vue","mtime":1656036094000},{"path":"C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\babel.config.js","mtime":1656036094000},{"path":"C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1677772052210},{"path":"C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\node_modules\\babel-loader\\lib\\index.js","mtime":1677771858682},{"path":"C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1677772052210},{"path":"C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\node_modules\\vue-loader\\lib\\index.js","mtime":1677772060461}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"C:\\\\Users\\\\Hacker\\\\Desktop\\\\zhaop\\\\resume-master\\\\resume-master\\\\recruit-system\\\\recruit-web\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { Position } from '@/model/position';\nimport { Category } from '@/model/category';\nexport default {\n  // 定义变量\n  props: {\n    // 子组件定义的变量通过父组件赋值\n    editPositionID: {\n      type: Number\n    }\n  },\n  data: function data() {\n    return {\n      loading: false,\n      form: {},\n      categoryState: '',\n      categorySuggestions: []\n    };\n  },\n  mounted: function () {\n    var _mounted = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              this.loading = true;\n              _context.next = 3;\n              return Position.getById(this.editPositionID);\n\n            case 3:\n              res = _context.sent;\n              this.categoryState = res.category_name; // 更新职位浏览量(每进入一次职位详情页面，职位浏览量加一)\n\n              _context.next = 7;\n              return Position.updateHits(this.editPositionID);\n\n            case 7:\n              this.form = res;\n              this.loading = false;\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    function mounted() {\n      return _mounted.apply(this, arguments);\n    }\n\n    return mounted;\n  }(),\n  methods: {\n    submitForm: function () {\n      var _submitForm = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                // 拿到hr_id\n                this.form.hr_id = this.$store.getters.user.id;\n                _context2.next = 3;\n                return Position.updatePosition(this.form.id, this.form);\n\n              case 3:\n                res = _context2.sent;\n\n                if (res.code < window.MAX_SUCCESS_CODE) {\n                  this.$message.success(\"\".concat(res.message)); // 返回职位列表页面\n\n                  this.$emit('editClose');\n                }\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function submitForm() {\n        return _submitForm.apply(this, arguments);\n      }\n\n      return submitForm;\n    }(),\n    // 重置表单\n    resetForm: function resetForm(formName) {\n      this.$refs[formName].resetFields();\n    },\n    back: function back() {\n      this.$emit('editClose');\n    },\n    queryCategorySearch: function queryCategorySearch(queryString, cb) {\n      // eslint-disable-next-line\n      var suggestions = this.categorySuggestions;\n      var results = queryString ? suggestions.filter(this.createCategoryFilter(queryString)) : suggestions;\n      cb(results);\n    },\n    createCategoryFilter: function createCategoryFilter(queryString) {\n      // eslint-disable-next-line\n      return function (suggestion) {\n        return suggestion.name.toLowerCase().indexOf(queryString.toLowerCase()) === 0;\n      };\n    },\n    handleCategorySelect: function handleCategorySelect(item) {\n      this.categoryState = item.name; // 给表单的职位分类id赋值\n\n      this.form.category_id = item.id;\n    },\n    loadCategorySuggestions: function () {\n      var _loadCategorySuggestions = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (!(this.categorySuggestions.length > 0)) {\n                  _context3.next = 2;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\");\n\n              case 2:\n                _context3.prev = 2;\n                _context3.next = 5;\n                return Category.getList();\n\n              case 5:\n                this.categorySuggestions = _context3.sent;\n\n                if (this.categorySuggestions.length === 0) {\n                  this.$message.error('暂无职位分类，请先添加');\n                }\n\n                _context3.next = 13;\n                break;\n\n              case 9:\n                _context3.prev = 9;\n                _context3.t0 = _context3[\"catch\"](2);\n                this.$message.error('获取职位分类失败');\n                console.error(_context3.t0);\n\n              case 13:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[2, 9]]);\n      }));\n\n      function loadCategorySuggestions() {\n        return _loadCategorySuggestions.apply(this, arguments);\n      }\n\n      return loadCategorySuggestions;\n    }()\n  }\n};",{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8DA;AACA;AAEA;AACA;AACAA;AACA;AACAC;AACAC;AADA;AAFA,GAFA;AAQAC,MARA,kBAQA;AACA;AACAC,oBADA;AAEAC,cAFA;AAIAC,uBAJA;AAKAC;AALA;AAOA,GAhBA;AAiBAC,SAjBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAkBA;AAlBA;AAAA,qBAmBAC,qCAnBA;;AAAA;AAmBAC,iBAnBA;AAoBA,qDApBA,CAqBA;;AArBA;AAAA,qBAsBAD,wCAtBA;;AAAA;AAuBA;AACA;;AAxBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AA0BAE;AACAC,cADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAHA;AAAA,uBAIAH,gDAJA;;AAAA;AAIAC,mBAJA;;AAKA;AACA,gEADA,CAEA;;AACA;AACA;;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAWA;AACAG,aAZA,qBAYAC,QAZA,EAYA;AACA;AACA,KAdA;AAeAC,QAfA,kBAeA;AACA;AACA,KAjBA;AAkBAC,uBAlBA,+BAkBAC,WAlBA,EAkBAC,EAlBA,EAkBA;AACA;AACA;AACA;AACAA;AACA,KAvBA;AAwBAC,wBAxBA,gCAwBAF,WAxBA,EAwBA;AACA;AACA;AACA;AACA,OAFA;AAGA,KA7BA;AA8BAG,wBA9BA,gCA8BAC,IA9BA,EA8BA;AACA,qCADA,CAEA;;AACA;AACA,KAlCA;AAmCAC,2BAnCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAoCA,mCApCA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA,uBAwCAC,kBAxCA;;AAAA;AAwCA,wCAxCA;;AAyCA;AACA;AACA;;AA3CA;AAAA;;AAAA;AAAA;AAAA;AA6CA;AACAC;;AA9CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AA1BA","names":["props","editPositionID","type","data","loading","form","categoryState","categorySuggestions","mounted","Position","res","methods","submitForm","resetForm","formName","back","queryCategorySearch","queryString","cb","createCategoryFilter","handleCategorySelect","item","loadCategorySuggestions","Category","console"],"sourceRoot":"src/view/position","sources":["position-modify.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <div class=\"title\">\n      <span>修改职位信息</span> <span class=\"back\" @click=\"back\"> <i class=\"iconfont icon-fanhui\"></i> 返回 </span>\n    </div>\n    <el-divider></el-divider>\n    <div class=\"wrap\">\n      <el-row>\n        <el-col :lg=\"16\" :md=\"20\" :sm=\"24\" :xs=\"24\">\n          <el-form :model=\"form\" status-icon ref=\"form\" label-width=\"100px\" v-loading=\"loading\" @submit.native.prevent>\n            <el-form-item label=\"职位名称\" prop=\"title\">\n              <el-input size=\"medium\" v-model=\"form.title\"></el-input>\n            </el-form-item>\n\n            <el-form-item label=\"职位分类\" prop=\"category_id\">\n              <el-autocomplete @focus=\"loadCategorySuggestions\" popper-class=\"my-autocomplete\" class=\"inline-input\"\n                v-model=\"categoryState\" :fetch-suggestions=\"queryCategorySearch\" placeholder=\"请填写职位所属分类\"\n                @select=\"handleCategorySelect\">\n                <template slot-scope=\"{ item }\">\n                  <span class=\"id\">{{ item.id }}</span>\n                  <span class=\"name\">{{ item.name }}</span>\n                </template>\n              </el-autocomplete>\n            </el-form-item>\n\n            <el-form-item label=\"职位浏览量\">\n              <el-input size=\"medium\" v-model=\"form.hits\" disabled></el-input>\n            </el-form-item>\n            <el-form-item label=\"招聘人数\" prop=\"quantity\">\n              <el-input size=\"medium\" v-model=\"form.quantity\"></el-input>\n            </el-form-item>\n            <el-form-item label=\"薪资\">\n              <el-input size=\"medium\" v-model=\"form.salary_down\" style=\"float: left;width: 10%\"></el-input>\n              <span style=\"float: left;\">~</span>\n              <el-input size=\"medium\" v-model=\"form.salary_up\" style=\"float: left;width: 10%\"></el-input>\n            </el-form-item>\n            <el-form-item label=\"工作地点\" prop=\"city\">\n              <el-input size=\"medium\" v-model=\"form.city\"></el-input>\n            </el-form-item>\n            <el-form-item label=\"职位要求\" prop=\"requirement\">\n              <el-input size=\"medium\" type=\"textarea\" :rows=\"4\" v-model=\"form.requirement\">\n              </el-input>\n            </el-form-item>\n            <el-form-item label=\"公司名称\">\n              <el-input size=\"medium\" v-model=\"form.company_name\" disabled></el-input>\n            </el-form-item>\n            <el-form-item label=\"公司简介\">\n              <el-input size=\"medium\" type=\"textarea\" :rows=\"4\" v-model=\"form.company_desc\" disabled>\n              </el-input>\n            </el-form-item>\n            <el-form-item class=\"submit\">\n              <el-button type=\"primary\" @click=\"submitForm('form')\">保 存</el-button>\n              <el-button @click=\"resetForm('form')\">重 置</el-button>\n            </el-form-item>\n          </el-form>\n        </el-col>\n      </el-row>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { Position } from '@/model/position'\nimport { Category } from '@/model/category'\n\nexport default {\n  // 定义变量\n  props: {\n    // 子组件定义的变量通过父组件赋值\n    editPositionID: {\n      type: Number,\n    },\n  },\n  data() {\n    return {\n      loading: false,\n      form: {\n      },\n      categoryState: '',\n      categorySuggestions: [],\n    }\n  },\n  async mounted() {\n    this.loading = true\n    const res = await Position.getById(this.editPositionID)\n    this.categoryState = res.category_name\n    // 更新职位浏览量(每进入一次职位详情页面，职位浏览量加一)\n    await Position.updateHits(this.editPositionID)\n    this.form = res\n    this.loading = false\n  },\n  methods: {\n    async submitForm() {\n      // 拿到hr_id\n      this.form.hr_id = this.$store.getters.user.id\n      const res = await Position.updatePosition(this.form.id, this.form)\n      if (res.code < window.MAX_SUCCESS_CODE) {\n        this.$message.success(`${res.message}`)\n        // 返回职位列表页面\n        this.$emit('editClose')\n      }\n    },\n    // 重置表单\n    resetForm(formName) {\n      this.$refs[formName].resetFields()\n    },\n    back() {\n      this.$emit('editClose')\n    },\n    queryCategorySearch(queryString, cb) {\n      // eslint-disable-next-line\n      const suggestions = this.categorySuggestions\n      const results = queryString ? suggestions.filter(this.createCategoryFilter(queryString)) : suggestions\n      cb(results)\n    },\n    createCategoryFilter(queryString) {\n      // eslint-disable-next-line\n      return suggestion => {\n        return suggestion.name.toLowerCase().indexOf(queryString.toLowerCase()) === 0\n      }\n    },\n    handleCategorySelect(item) {\n      this.categoryState = item.name\n      // 给表单的职位分类id赋值\n      this.form.category_id = item.id\n    },\n    async loadCategorySuggestions() {\n      if (this.categorySuggestions.length > 0) {\n        return\n      }\n      try {\n        this.categorySuggestions = await Category.getList()\n        if (this.categorySuggestions.length === 0) {\n          this.$message.error('暂无职位分类，请先添加')\n        }\n      } catch (error) {\n        this.$message.error('获取职位分类失败')\n        console.error(error)\n      }\n    },\n  },\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.el-divider--horizontal {\n  margin: 0;\n}\n\n.container {\n  .title {\n    height: 59px;\n    line-height: 59px;\n    color: $parent-title-color;\n    font-size: 16px;\n    font-weight: 500;\n    text-indent: 40px;\n\n    .back {\n      float: right;\n      margin-right: 40px;\n      cursor: pointer;\n    }\n  }\n\n  .wrap {\n    padding: 20px;\n  }\n\n  .submit {\n    float: left;\n  }\n}\n\n.my-autocomplete {\n  li {\n    line-height: normal;\n    padding: 7px;\n    display: inline-flex;\n    align-content: space-around;\n\n    .name {\n      text-overflow: ellipsis;\n      overflow: hidden;\n    }\n\n    .id {\n      margin-right: 15px;\n      font-size: 12px;\n      color: #b4b4b4;\n    }\n\n    .highlighted .addr {\n      color: #ddd;\n    }\n  }\n}\n</style>\n\n"]}]}