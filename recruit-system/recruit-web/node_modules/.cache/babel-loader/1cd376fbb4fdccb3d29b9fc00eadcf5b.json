{"remainingRequest":"C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\src\\component\\layout\\reuse-tab.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\src\\component\\layout\\reuse-tab.vue","mtime":1656036094000},{"path":"C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\babel.config.js","mtime":1656036094000},{"path":"C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1677772052210},{"path":"C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\node_modules\\babel-loader\\lib\\index.js","mtime":1677771858682},{"path":"C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1677772052210},{"path":"C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\node_modules\\vue-loader\\lib\\index.js","mtime":1677772060461}],"contextDependencies":[],"result":["function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters } from 'vuex';\nimport { swiper, swiperSlide } from 'vue-awesome-swiper';\nimport 'swiper/dist/css/swiper.css'; // eslint-disable-line\n\nexport default {\n  components: {\n    swiper: swiper,\n    swiperSlide: swiperSlide\n  },\n  data: function data() {\n    return {\n      histories: [],\n      visible: false,\n      hasLeft: true,\n      hasRight: true,\n      top: 0,\n      left: 0,\n      index: 0,\n      swiperOption: {\n        slidesPerView: 'auto',\n        initialSlide: 0,\n        effect: 'slide',\n        spaceBetween: 1,\n        preventClicks: false,\n        freeMode: true,\n        mousewheel: {\n          sensitivity: 1.5\n        }\n      }\n    };\n  },\n  watch: {\n    $route: function $route(to) {\n      // 对路由变化作出响应...\n      var histories = this.histories;\n      var flag = histories.find(function (item) {\n        return item.path === to.path;\n      });\n\n      if (flag) {\n        return;\n      }\n\n      var ele = {};\n      ele.stageId = to.name;\n      ele.path = to.path;\n      ele.routePath = to.matched[to.matched.length - 1].path;\n      this.histories = [ele].concat(_toConsumableArray(histories));\n    },\n    logined: function logined(val) {\n      if (val) {\n        return;\n      }\n\n      this.closeAll();\n    },\n    visible: function visible(value) {\n      if (value) {\n        document.body.addEventListener('click', this.closeMenu);\n      } else {\n        document.body.removeEventListener('click', this.closeMenu);\n      }\n    },\n    // 舞台改变时触发\n    stageList: function stageList() {\n      this.init();\n    },\n    histories: function histories(arr) {\n      if (arr.length < 2) {\n        this.eventBus.$emit('noReuse');\n      } else {\n        this.eventBus.$emit('hasReuse');\n      }\n    }\n  },\n  inject: ['eventBus'],\n  created: function created() {\n    var _this = this;\n\n    // 关闭窗口时执行\n    window.onbeforeunload = function () {\n      // 缓存历史记录\n      window.localStorage.setItem('history', JSON.stringify(_this.histories));\n    };\n  },\n  computed: _objectSpread({\n    logined: function logined() {\n      return this.$store.state.logined;\n    },\n    defaultRoute: function defaultRoute() {\n      return this.$store.state.defaultRoute;\n    }\n  }, mapGetters(['getStageByRoute', 'getStageByName', 'stageList'])),\n  mounted: function mounted() {\n    var _this2 = this;\n\n    this.init();\n    this.eventBus.$on('clearTap', function () {\n      _this2.histories = [];\n    });\n  },\n  methods: {\n    init: function init() {\n      var _this3 = this;\n\n      var histories = []; // 获取当前的历史记录, 可能从本地存储, 可能直接获取当前的\n\n      var localHistory;\n\n      if (this.histories.length > 0) {\n        localHistory = _toConsumableArray(this.histories);\n      } else {\n        localHistory = window.localStorage.getItem('history') || '[]';\n        localHistory = JSON.parse(localHistory);\n      }\n\n      localHistory.forEach(function (item) {\n        var findResult;\n\n        if (item.name) {\n          findResult = _this3.getStageByName(item.name);\n        } else {\n          findResult = _this3.getStageByRoute(item.routePath);\n        }\n\n        if (!findResult) {\n          return;\n        }\n\n        histories.push(_objectSpread(_objectSpread({}, item), {}, {\n          stageId: findResult.name\n        }));\n        _this3.histories = histories;\n      });\n    },\n    filterIcon: function filterIcon(icon) {\n      if (!icon) {\n        return false;\n      }\n\n      return icon.indexOf('/') !== -1;\n    },\n    closeAll: function closeAll() {\n      this.histories = [];\n      this.$router.push(this.defaultRoute);\n    },\n    closeOthers: function closeOthers() {\n      this.$router.push(this.histories[this.index].path);\n      this.histories = [];\n    },\n    closeLeft: function closeLeft() {\n      this.histories.splice(0, this.index);\n    },\n    closeRight: function closeRight() {\n      this.histories.splice(this.index + 1, this.histories.length - this.index - 1);\n    },\n    onTags: function onTags(index, event) {\n      this.closeMenu();\n      var menuMinWidth = 126;\n      var offsetLeft = this.$el.getBoundingClientRect().left;\n      var offsetWidth = this.$el.offsetWidth;\n      var maxLeft = offsetWidth - menuMinWidth;\n      var left = event.clientX - offsetLeft + 15;\n\n      if (left > maxLeft) {\n        this.left = maxLeft;\n      } else {\n        this.left = left;\n      }\n\n      if (index === 0) {\n        this.hasLeft = false;\n      }\n\n      if (index + 1 === this.histories.length) {\n        this.hasRight = false;\n      }\n\n      this.top = 18;\n      this.index = index;\n      this.visible = true;\n    },\n    closeMenu: function closeMenu() {\n      this.visible = false;\n      this.hasLeft = true;\n      this.hasRight = true;\n    },\n    close: function close(index) {\n      // 检测是否是当前页, 如果是当前页则自动切换路由\n      if (this.$route.path === this.histories[index].path) {\n        if (index > 0) {\n          this.$router.push(this.histories[index - 1].path);\n        } else if (this.histories.length > 1) {\n          this.$router.push(this.histories[1].path);\n        } else {\n          this.$router.push(this.defaultRoute);\n        }\n      } // 删除该历史记录\n\n\n      this.histories.splice(index, 1);\n      this.histories = _toConsumableArray(this.histories);\n    }\n  }\n};",{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BA;AACA;AAEA,oC,CAAA;;AAEA;AACAA;AAAAC;AAAAC;AAAA,GADA;AAEAC,MAFA,kBAEA;AACA;AACAC,mBADA;AAEAC,oBAFA;AAGAC,mBAHA;AAIAC,oBAJA;AAKAC,YALA;AAMAC,aANA;AAOAC,cAPA;AAQAC;AACAC,6BADA;AAEAC,uBAFA;AAGAC,uBAHA;AAIAC,uBAJA;AAKAC,4BALA;AAMAC,sBANA;AAOAC;AACAC;AADA;AAPA;AARA;AAoBA,GAvBA;AAwBAC;AACAC,UADA,kBACAC,EADA,EACA;AACA;AACA;AACA;AAAA;AAAA;;AACA;AACA;AACA;;AACA;AACAC;AACAA;AACAA;AACA;AACA,KAbA;AAcAC,WAdA,mBAcAC,GAdA,EAcA;AACA;AACA;AACA;;AACA;AACA,KAnBA;AAoBApB,WApBA,mBAoBAqB,KApBA,EAoBA;AACA;AACAC;AACA,OAFA,MAEA;AACAA;AACA;AACA,KA1BA;AA2BA;AACAC,aA5BA,uBA4BA;AACA;AACA,KA9BA;AA+BAxB,aA/BA,qBA+BAyB,GA/BA,EA+BA;AACA;AACA;AACA,OAFA,MAEA;AACA;AACA;AACA;AArCA,GAxBA;AA+DAC,sBA/DA;AAgEAC,SAhEA,qBAgEA;AAAA;;AACA;AACAC;AACA;AACAA;AACA,KAHA;AAIA,GAtEA;AAuEAC;AACAT,WADA,qBACA;AACA;AACA,KAHA;AAIAU,gBAJA,0BAIA;AACA;AACA;AANA,KAOAC,8DAPA,CAvEA;AAgFAC,SAhFA,qBAgFA;AAAA;;AACA;AACA;AACA;AACA,KAFA;AAGA,GArFA;AAsFAC;AACAC,QADA,kBACA;AAAA;;AACA,yBADA,CAGA;;AACA;;AACA;AACAC;AACA,OAFA,MAEA;AACAA;AACAA;AACA;;AAEAA;AACA;;AACA;AACAC;AACA,SAFA,MAEA;AACAA;AACA;;AACA;AACA;AACA;;AACApC,uDACAqC,IADA;AAEAC;AAFA;AAIA;AACA,OAfA;AAgBA,KA7BA;AA8BAC,cA9BA,sBA8BAC,IA9BA,EA8BA;AACA;AACA;AACA;;AACA;AACA,KAnCA;AAoCAC,YApCA,sBAoCA;AACA;AACA;AACA,KAvCA;AAwCAC,eAxCA,yBAwCA;AACA;AACA;AACA,KA3CA;AA4CAC,aA5CA,uBA4CA;AACA;AACA,KA9CA;AA+CAC,cA/CA,wBA+CA;AACA;AACA,KAjDA;AAkDAC,UAlDA,kBAkDAvC,KAlDA,EAkDAwC,KAlDA,EAkDA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAFA,MAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KA3EA;AA4EAC,aA5EA,uBA4EA;AACA;AACA;AACA;AACA,KAhFA;AAiFAC,SAjFA,iBAiFA1C,KAjFA,EAiFA;AACA;AACA;AACA;AACA;AACA,SAFA,MAEA;AACA;AACA,SAFA,MAEA;AACA;AACA;AACA,OAVA,CAWA;;;AACA;AACA;AACA;AA/FA;AAtFA","names":["components","swiper","swiperSlide","data","histories","visible","hasLeft","hasRight","top","left","index","swiperOption","slidesPerView","initialSlide","effect","spaceBetween","preventClicks","freeMode","mousewheel","sensitivity","watch","$route","to","ele","logined","val","value","document","stageList","arr","inject","created","window","computed","defaultRoute","mapGetters","mounted","methods","init","localHistory","findResult","item","stageId","filterIcon","icon","closeAll","closeOthers","closeLeft","closeRight","onTags","event","closeMenu","close"],"sourceRoot":"src/component/layout","sources":["reuse-tab.vue"],"sourcesContent":["<template>\n  <div v-if=\"histories.length > 1\" ref=\"resueTab\" class=\"reuse-tab\">\n    <swiper :options=\"swiperOption\" class=\"reuse-tab-wrap\">\n      <swiper-slide v-for=\"(item, index) in histories\" :key=\"item.path\">\n        <router-link\n          class=\"reuse-tab-item\"\n          :class=\"item.path === $route.path ? 'active' : ''\"\n          :to=\"item.path\"\n          @contextmenu.prevent.native=\"onTags(index, $event)\"\n        >\n          <i v-if=\"!filterIcon(stageList[item.stageId].icon)\" :class=\"stageList[item.stageId].icon\"></i>\n          <img v-else :src=\"stageList[item.stageId].icon\" style=\"width:16px;\" />\n          <span style=\"padding: 0 5px;\">{{ stageList[item.stageId].title }}</span>\n          <span class=\"el-icon-close\" @click.prevent.stop=\"close(index)\" />\n        </router-link>\n      </swiper-slide>\n    </swiper>\n\n    <ul v-show=\"visible\" :style=\"{ left: left + 'px', top: top + 'px' }\" class=\"contextmenu\">\n      <li @click=\"closeAll\">关闭所有</li>\n      <li @click=\"closeOthers\">关闭其他</li>\n      <li @click=\"closeLeft\" v-if=\"hasLeft\">关闭左侧</li>\n      <li @click=\"closeRight\" v-if=\"hasRight\">关闭右侧</li>\n    </ul>\n  </div>\n</template>\n\n<script>\nimport { mapGetters } from 'vuex'\nimport { swiper, swiperSlide } from 'vue-awesome-swiper'\n\nimport 'swiper/dist/css/swiper.css' // eslint-disable-line\n\nexport default {\n  components: { swiper, swiperSlide },\n  data() {\n    return {\n      histories: [],\n      visible: false,\n      hasLeft: true,\n      hasRight: true,\n      top: 0,\n      left: 0,\n      index: 0,\n      swiperOption: {\n        slidesPerView: 'auto',\n        initialSlide: 0,\n        effect: 'slide',\n        spaceBetween: 1,\n        preventClicks: false,\n        freeMode: true,\n        mousewheel: {\n          sensitivity: 1.5,\n        },\n      },\n    }\n  },\n  watch: {\n    $route(to) {\n      // 对路由变化作出响应...\n      const { histories } = this\n      const flag = histories.find(item => item.path === to.path)\n      if (flag) {\n        return\n      }\n      const ele = {}\n      ele.stageId = to.name\n      ele.path = to.path\n      ele.routePath = to.matched[to.matched.length - 1].path\n      this.histories = [ele, ...histories]\n    },\n    logined(val) {\n      if (val) {\n        return\n      }\n      this.closeAll()\n    },\n    visible(value) {\n      if (value) {\n        document.body.addEventListener('click', this.closeMenu)\n      } else {\n        document.body.removeEventListener('click', this.closeMenu)\n      }\n    },\n    // 舞台改变时触发\n    stageList() {\n      this.init()\n    },\n    histories(arr) {\n      if (arr.length < 2) {\n        this.eventBus.$emit('noReuse')\n      } else {\n        this.eventBus.$emit('hasReuse')\n      }\n    },\n  },\n  inject: ['eventBus'],\n  created() {\n    // 关闭窗口时执行\n    window.onbeforeunload = () => {\n      // 缓存历史记录\n      window.localStorage.setItem('history', JSON.stringify(this.histories))\n    }\n  },\n  computed: {\n    logined() {\n      return this.$store.state.logined\n    },\n    defaultRoute() {\n      return this.$store.state.defaultRoute\n    },\n    ...mapGetters(['getStageByRoute', 'getStageByName', 'stageList']),\n  },\n  mounted() {\n    this.init()\n    this.eventBus.$on('clearTap', () => {\n      this.histories = []\n    })\n  },\n  methods: {\n    init() {\n      const histories = []\n\n      // 获取当前的历史记录, 可能从本地存储, 可能直接获取当前的\n      let localHistory\n      if (this.histories.length > 0) {\n        localHistory = [...this.histories]\n      } else {\n        localHistory = window.localStorage.getItem('history') || '[]'\n        localHistory = JSON.parse(localHistory)\n      }\n\n      localHistory.forEach(item => {\n        let findResult\n        if (item.name) {\n          findResult = this.getStageByName(item.name)\n        } else {\n          findResult = this.getStageByRoute(item.routePath)\n        }\n        if (!findResult) {\n          return\n        }\n        histories.push({\n          ...item,\n          stageId: findResult.name,\n        })\n        this.histories = histories\n      })\n    },\n    filterIcon(icon) {\n      if (!icon) {\n        return false\n      }\n      return icon.indexOf('/') !== -1\n    },\n    closeAll() {\n      this.histories = []\n      this.$router.push(this.defaultRoute)\n    },\n    closeOthers() {\n      this.$router.push(this.histories[this.index].path)\n      this.histories = []\n    },\n    closeLeft() {\n      this.histories.splice(0, this.index)\n    },\n    closeRight() {\n      this.histories.splice(this.index + 1, this.histories.length - this.index - 1)\n    },\n    onTags(index, event) {\n      this.closeMenu()\n      const menuMinWidth = 126\n      const offsetLeft = this.$el.getBoundingClientRect().left\n      const { offsetWidth } = this.$el\n      const maxLeft = offsetWidth - menuMinWidth\n      const left = event.clientX - offsetLeft + 15\n\n      if (left > maxLeft) {\n        this.left = maxLeft\n      } else {\n        this.left = left\n      }\n\n      if (index === 0) {\n        this.hasLeft = false\n      }\n\n      if (index + 1 === this.histories.length) {\n        this.hasRight = false\n      }\n\n      this.top = 18\n      this.index = index\n      this.visible = true\n    },\n    closeMenu() {\n      this.visible = false\n      this.hasLeft = true\n      this.hasRight = true\n    },\n    close(index) {\n      // 检测是否是当前页, 如果是当前页则自动切换路由\n      if (this.$route.path === this.histories[index].path) {\n        if (index > 0) {\n          this.$router.push(this.histories[index - 1].path)\n        } else if (this.histories.length > 1) {\n          this.$router.push(this.histories[1].path)\n        } else {\n          this.$router.push(this.defaultRoute)\n        }\n      }\n      // 删除该历史记录\n      this.histories.splice(index, 1)\n      this.histories = [...this.histories]\n    },\n  },\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.swiper-slide {\n  width: auto;\n  min-width: 126px;\n  display: flex;\n  height: $reusetab-height;\n  flex-direction: column;\n  justify-content: center;\n  background-color: $reuse-tab-item-background;\n  color: $right-side-font-color;\n}\n\n.reuse-tab-wrap {\n  bottom: 0;\n  left: 0;\n  user-select: none;\n  height: $reusetab-height;\n  background: $header-background;\n  font-size: 14px;\n  color: #8c98ae;\n  display: flex;\n  align-items: center;\n  overflow: hidden;\n\n  .reuse-tab-item {\n    box-sizing: border-box;\n    width: auto;\n    height: $reusetab-height;\n    min-width: 126px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    padding: 0 1em;\n    margin-right: 1px;\n    position: relative;\n    white-space: nowrap;\n\n    > i {\n      color: $theme;\n    }\n\n    .el-icon-close {\n      opacity: 0;\n      position: absolute;\n    }\n\n    &:hover {\n      background: $theme;\n      border: none;\n      color: #fff;\n\n      > i {\n        color: #fff;\n      }\n\n      .el-icon-close {\n        position: absolute;\n        display: inline-block;\n        width: 14px;\n        height: 14px;\n        top: 0;\n        right: 0;\n        opacity: 1;\n        border-radius: 0 0 0 14px;\n        background: rgba(255, 255, 255, 0.3);\n\n        &::before {\n          font-size: 12px;\n          position: absolute;\n          right: -1px;\n          transform: scale(0.7);\n        }\n      }\n    }\n  }\n\n  .active {\n    box-sizing: border-box;\n    height: 40px;\n    color: #ffffff;\n    background: $theme;\n    border: none;\n    position: relative;\n\n    > i {\n      color: #fff;\n    }\n\n    .el-icon-close {\n      position: absolute;\n      display: inline-block;\n      width: 14px;\n      height: 14px;\n      top: 0;\n      right: 0;\n      opacity: 1;\n      border-radius: 0 0 0 14px;\n      background: rgba(255, 255, 255, 0.3);\n\n      &::before {\n        font-size: 12px;\n        position: absolute;\n        right: -1px;\n        transform: scale(0.7);\n      }\n    }\n  }\n\n  .reuse-tab-wrap {\n    height: 100%;\n  }\n}\n.reuse-tab {\n  position: relative;\n  .contextmenu {\n    margin: 0;\n    background: #ffffff;\n    z-index: 3000;\n    position: absolute;\n    list-style-type: none;\n    padding: 5px 0;\n    border-radius: 4px;\n    font-size: 14px;\n    font-weight: 400;\n    color: #596c8e;\n    box-shadow: 2px 2px 3px 0 rgba(0, 0, 0, 0.3);\n    li {\n      margin: 0;\n      padding: 10px 20px;\n      cursor: pointer;\n      &:hover {\n        background: #ebeff8;\n        color: #6182c9;\n      }\n    }\n  }\n}\n</style>\n"]}]}