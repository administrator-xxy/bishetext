{"remainingRequest":"C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\src\\view\\company\\company-create.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\src\\view\\company\\company-create.vue","mtime":1656036094000},{"path":"C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\babel.config.js","mtime":1656036094000},{"path":"C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1677772052210},{"path":"C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\node_modules\\babel-loader\\lib\\index.js","mtime":1677771858682},{"path":"C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1677772052210},{"path":"C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\node_modules\\vue-loader\\lib\\index.js","mtime":1677772060461}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"C:\\\\Users\\\\Hacker\\\\Desktop\\\\zhaop\\\\resume-master\\\\resume-master\\\\recruit-system\\\\recruit-web\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { Company } from '@/model/company';\nimport { HRCompany } from '@/model/hrCompany';\nimport UploadImgs from '@/component/base/upload-image';\nexport default {\n  components: {\n    UploadImgs: UploadImgs\n  },\n  data: function data() {\n    return {\n      form: {},\n      maxNum: 1,\n      loading: false\n    };\n  },\n  methods: {\n    // 上传图片之后，获取服务器返回的url地址\n    getValue: function () {\n      var _getValue = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var val;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.$refs.uploadEle.getValue();\n\n              case 2:\n                val = _context.sent;\n\n                if (val && val.length > 0) {\n                  this.form.logo = val[0].display;\n                }\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getValue() {\n        return _getValue.apply(this, arguments);\n      }\n\n      return getValue;\n    }(),\n    submitForm: function () {\n      var _submitForm = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(formName) {\n        var res, result;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.getValue();\n\n              case 2:\n                _context2.prev = 2;\n                this.loading = true; // 新增企业\n\n                _context2.next = 6;\n                return Company.create(this.form);\n\n              case 6:\n                res = _context2.sent;\n                _context2.next = 9;\n                return Company.getByName(this.form.name);\n\n              case 9:\n                result = _context2.sent;\n                _context2.next = 12;\n                return HRCompany.create(this.$store.getters.user.id, result.id);\n\n              case 12:\n                this.loading = false;\n\n                if (res.code < window.MAX_SUCCESS_CODE) {\n                  this.$message.success(\"\".concat(res.message)); // 返回我的企业信息页面\n\n                  this.$emit('createClose');\n                }\n\n                _context2.next = 20;\n                break;\n\n              case 16:\n                _context2.prev = 16;\n                _context2.t0 = _context2[\"catch\"](2);\n                this.loading = false;\n                console.log(_context2.t0);\n\n              case 20:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[2, 16]]);\n      }));\n\n      function submitForm(_x) {\n        return _submitForm.apply(this, arguments);\n      }\n\n      return submitForm;\n    }(),\n    // 重置表单\n    resetForm: function resetForm(formName) {\n      this.$refs[formName].resetFields();\n    }\n  }\n};",{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6CA;AACA;AACA;AAEA;AACAA;AACAC;AADA,GADA;AAIAC,MAJA,kBAIA;AACA;AACAC,cADA;AAGAC,eAHA;AAIAC;AAJA;AAMA,GAXA;AAYAC;AACA;AACAC,YAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAGA,+BAHA;;AAAA;AAGAC,mBAHA;;AAIA;AACA;AACA;;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAQAC,cARA;AAAA,mGAQAC,QARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBASA,eATA;;AAAA;AAAA;AAWA,oCAXA,CAYA;;AAZA;AAAA,uBAaAC,yBAbA;;AAAA;AAaAC,mBAbA;AAAA;AAAA,uBAeAD,iCAfA;;AAAA;AAeAE,sBAfA;AAAA;AAAA,uBAiBAC,wDAjBA;;AAAA;AAkBA;;AACA;AACA,gEADA,CAEA;;AACA;AACA;;AAvBA;AAAA;;AAAA;AAAA;AAAA;AAyBA;AACAC;;AA1BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AA6BA;AACAC,aA9BA,qBA8BAN,QA9BA,EA8BA;AACA;AACA;AAhCA;AAZA","names":["components","UploadImgs","data","form","maxNum","loading","methods","getValue","val","submitForm","formName","Company","res","result","HRCompany","console","resetForm"],"sourceRoot":"src/view/company","sources":["company-create.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <div class=\"title\">企业认证</div>\n    <div class=\"wrap\">\n      <el-row>\n        <el-col :lg=\"16\" :md=\"20\" :sm=\"24\" :xs=\"24\">\n          <el-form :model=\"form\" status-icon ref=\"form\" label-width=\"100px\" @submit.native.prevent>\n            <el-form-item label=\"公司名称\" prop=\"name\">\n              <el-input size=\"medium\" v-model=\"form.name\" placeholder=\"请填写公司名称\"></el-input>\n            </el-form-item>\n            <el-form-item label=\"公司外文名\" prop=\"foreign_name\">\n              <el-input size=\"medium\" v-model=\"form.foreign_name\" placeholder=\"请填写公司外文名\"></el-input>\n            </el-form-item>\n            <el-form-item label=\"总部地点\" prop=\"city\">\n              <el-input size=\"medium\" v-model=\"form.city\" placeholder=\"请填写总部地点\"></el-input>\n            </el-form-item>\n            <el-form-item label=\"公司logo\" prop=\"logo\">\n              <upload-imgs :max-num=\"maxNum\" ref=\"uploadEle\"/>\n            </el-form-item>\n            <el-form-item label=\"公司使命\" prop=\"mission\">\n              <el-input size=\"medium\" v-model=\"form.mission\" placeholder=\"请填写公司使命\"></el-input>\n            </el-form-item>\n            <el-form-item label=\"公司简介\" prop=\"description\">\n              <el-input\n                size=\"medium\"\n                type=\"textarea\"\n                :autosize=\"{ minRows: 4, maxRows: 8 }\"\n                placeholder=\"请输入公司简介\"\n                v-model=\"form.description\"\n              >\n              </el-input>\n            </el-form-item>\n\n            <el-form-item class=\"submit\">\n              <el-button type=\"primary\" @click=\"submitForm('form')\" :loading=\"loading\">保 存</el-button>\n              <el-button @click=\"resetForm('form')\">重 置</el-button>\n            </el-form-item>\n          </el-form>\n        </el-col>\n      </el-row>\n    </div>\n  </div>\n</template>\n\n<script>\nimport {Company} from '@/model/company'\nimport {HRCompany} from '@/model/hrCompany'\nimport UploadImgs from '@/component/base/upload-image'\n\nexport default {\n  components: {\n    UploadImgs,\n  },\n  data() {\n    return {\n      form: {\n      },\n      maxNum: 1,\n      loading: false,\n    }\n  },\n  methods: {\n    // 上传图片之后，获取服务器返回的url地址\n    async getValue() {\n      const val = await this.$refs.uploadEle.getValue()\n      if (val && val.length > 0) {\n        this.form.logo = val[0].display\n      }\n    },\n    async submitForm(formName) {\n      await this.getValue()\n      try {\n        this.loading = true\n        // 新增企业\n        const res = await Company.create(this.form)\n        // 根据新增的企业的名称查询company表，拿到对应的id\n        const result = await Company.getByName(this.form.name)\n        // 根据hr_id和company_id新增一条记录到hr_company表\n        await HRCompany.create(this.$store.getters.user.id, result.id)\n        this.loading = false\n        if (res.code < window.MAX_SUCCESS_CODE) {\n          this.$message.success(`${res.message}`)\n          // 返回我的企业信息页面\n          this.$emit('createClose')\n        }\n      } catch (error) {\n        this.loading = false\n        console.log(error)\n      }\n    },\n    // 重置表单\n    resetForm(formName) {\n      this.$refs[formName].resetFields()\n    },\n  },\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.container {\n  .title {\n    height: 59px;\n    line-height: 59px;\n    color: $parent-title-color;\n    font-size: 16px;\n    font-weight: 500;\n    text-indent: 40px;\n    border-bottom: 1px solid #dae1ec;\n  }\n\n  .wrap {\n    padding: 20px;\n  }\n\n  .submit {\n    float: left;\n  }\n}\n</style>\n"]}]}