{"remainingRequest":"C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\src\\view\\resume\\resume-modify.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\src\\view\\resume\\resume-modify.vue","mtime":1656036094000},{"path":"C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\babel.config.js","mtime":1656036094000},{"path":"C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1677772052210},{"path":"C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\node_modules\\babel-loader\\lib\\index.js","mtime":1677771858682},{"path":"C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1677772052210},{"path":"C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\node_modules\\vue-loader\\lib\\index.js","mtime":1677772060461}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"C:\\\\Users\\\\Hacker\\\\Desktop\\\\zhaop\\\\resume-master\\\\resume-master\\\\recruit-system\\\\recruit-web\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { Resume } from '@/model/resume';\nimport ResumeCreate from '@/view/resume/resume-create';\nimport Detail from './detail.vue';\nexport default {\n  components: {\n    ResumeCreate: ResumeCreate,\n    Detail: Detail\n  },\n  data: function data() {\n    return {\n      isRouterAlive: true,\n      tabPosition: 'right',\n      resumeId: \"\",\n      loading: false,\n      form: {},\n      showCreate: false,\n      educations: [{\n        id: \"\",\n        name: \"\",\n        start_time: \"\",\n        end_time: \"\",\n        major: \"\",\n        diploma: \"\",\n        descriptions: \"\"\n      }],\n      experiences: [{\n        id: \"\",\n        name: \"\",\n        start_time: \"\",\n        end_time: \"\",\n        position: \"\",\n        performance: \"\"\n      }],\n      projects: [{\n        id: \"\",\n        name: \"\",\n        start_time: \"\",\n        end_time: \"\",\n        position: \"\",\n        background: \"\",\n        performance: \"\"\n      }],\n      eduoptions: [{\n        value: 0,\n        label: '高中'\n      }, {\n        value: 1,\n        label: '大学专科'\n      }, {\n        value: 2,\n        label: '大学本科'\n      }, {\n        value: 3,\n        label: '硕士研究生'\n      }, {\n        value: 4,\n        label: '博士研究生'\n      }]\n    };\n  },\n  mounted: function () {\n    var _mounted = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              this.loading = true;\n              _context.next = 4;\n              return Resume.getByUserId(this.$store.getters.user.id);\n\n            case 4:\n              res = _context.sent;\n              this.resumeId = res.resume_id + \"\";\n              console.log(this.resumeId);\n              this.form = res;\n              this.educations = res.educations;\n              this.experiences = res.experiences;\n              this.projects = res.projects;\n              this.loading = false;\n              _context.next = 19;\n              break;\n\n            case 14:\n              _context.prev = 14;\n              _context.t0 = _context[\"catch\"](0);\n              this.loading = false;\n              console.log(_context.t0); // 还未创建简历，会来到简历创建页面\n\n              this.showCreate = true;\n\n            case 19:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this, [[0, 14]]);\n    }));\n\n    function mounted() {\n      return _mounted.apply(this, arguments);\n    }\n\n    return mounted;\n  }(),\n  methods: {\n    reload: function reload() {\n      var _this = this;\n\n      this.isRouterAlive = false;\n      this.$nextTick(function () {\n        return _this.isRouterAlive = true;\n      });\n    },\n    // 教育经历操作\n    updateEducation: function () {\n      var _updateEducation = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(row) {\n        var res, _res;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!(row.id !== \"\")) {\n                  _context2.next = 7;\n                  break;\n                }\n\n                _context2.next = 3;\n                return Resume.updateEducation(row);\n\n              case 3:\n                res = _context2.sent;\n\n                if (res.code === 1010) {\n                  this.$message.success(\"更新成功\");\n                  this.reload();\n                } else {\n                  this.$message.error(\"更新失败\");\n                }\n\n                _context2.next = 11;\n                break;\n\n              case 7:\n                _context2.next = 9;\n                return Resume.createEducation(row);\n\n              case 9:\n                _res = _context2.sent;\n\n                if (_res.code === 1000) {\n                  this.$message.success(\"保存成功\");\n                  this.reload();\n                } else {\n                  this.$message.error(\"保存失败\");\n                }\n\n              case 11:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function updateEducation(_x) {\n        return _updateEducation.apply(this, arguments);\n      }\n\n      return updateEducation;\n    }(),\n    delEducation: function () {\n      var _delEducation = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(row) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (!(row.id !== \"\")) {\n                  _context3.next = 5;\n                  break;\n                }\n\n                _context3.next = 3;\n                return Resume.delEducation(row.id);\n\n              case 3:\n                res = _context3.sent;\n\n                if (res.code === 2000) {\n                  this.$message.success(\"删除成功\");\n                  this.reload();\n                } else {\n                  this.$message.error(\"删除失败\");\n                }\n\n              case 5:\n                this.educations.pop(row);\n\n              case 6:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function delEducation(_x2) {\n        return _delEducation.apply(this, arguments);\n      }\n\n      return delEducation;\n    }(),\n    addEducation: function addEducation() {\n      this.educations.push({\n        resume_id: this.resumeId,\n        id: \"\",\n        name: \"\",\n        start_time: \"\",\n        end_time: \"\",\n        major: \"\",\n        diploma: \"\",\n        descriptions: \"\"\n      });\n    },\n    // 项目经历操作\n    updateProject: function () {\n      var _updateProject = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(row) {\n        var res, _res2;\n\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if (!(row.id !== \"\")) {\n                  _context4.next = 7;\n                  break;\n                }\n\n                _context4.next = 3;\n                return Resume.updateProject(row);\n\n              case 3:\n                res = _context4.sent;\n\n                if (res.code === 1010) {\n                  this.$message.success(\"更新成功\");\n                  this.reload();\n                } else {\n                  this.$message.error(\"更新失败\");\n                }\n\n                _context4.next = 11;\n                break;\n\n              case 7:\n                _context4.next = 9;\n                return Resume.createProject(row);\n\n              case 9:\n                _res2 = _context4.sent;\n\n                if (_res2.code === 1000) {\n                  this.$message.success(\"保存成功\");\n                  this.reload();\n                } else {\n                  this.$message.error(\"保存失败\");\n                }\n\n              case 11:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function updateProject(_x3) {\n        return _updateProject.apply(this, arguments);\n      }\n\n      return updateProject;\n    }(),\n    delProject: function () {\n      var _delProject = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(row) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                if (!(row.id !== \"\")) {\n                  _context5.next = 5;\n                  break;\n                }\n\n                _context5.next = 3;\n                return Resume.delProject(row.id);\n\n              case 3:\n                res = _context5.sent;\n\n                if (res.code === 2000) {\n                  this.reload();\n                  this.$message.success(\"删除成功\");\n                } else {\n                  this.$message.error(\"删除失败\");\n                }\n\n              case 5:\n                this.projects.pop(row);\n\n              case 6:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function delProject(_x4) {\n        return _delProject.apply(this, arguments);\n      }\n\n      return delProject;\n    }(),\n    addProject: function addProject() {\n      this.projects.push({\n        resume_id: this.resumeId,\n        id: \"\",\n        name: \"\",\n        start_time: \"\",\n        end_time: \"\",\n        position: \"\",\n        background: '',\n        performance: \"\"\n      });\n    },\n    // 工作经历操作\n    updateExperience: function () {\n      var _updateExperience = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(row) {\n        var res, _res3;\n\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                if (!(row.id !== \"\")) {\n                  _context6.next = 7;\n                  break;\n                }\n\n                _context6.next = 3;\n                return Resume.updateExperience(row);\n\n              case 3:\n                res = _context6.sent;\n\n                if (res.code === 1010) {\n                  this.$message.success(\"更新成功\");\n                  this.reload();\n                } else {\n                  this.$message.error(\"更新失败\");\n                }\n\n                _context6.next = 11;\n                break;\n\n              case 7:\n                _context6.next = 9;\n                return Resume.createExperience(row);\n\n              case 9:\n                _res3 = _context6.sent;\n\n                if (_res3.code === 1000) {\n                  this.$message.success(\"保存成功\");\n                  this.reload();\n                } else {\n                  this.$message.error(\"保存失败\");\n                }\n\n              case 11:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function updateExperience(_x5) {\n        return _updateExperience.apply(this, arguments);\n      }\n\n      return updateExperience;\n    }(),\n    delExperience: function () {\n      var _delExperience = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(row) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                if (!(row.id !== \"\")) {\n                  _context7.next = 5;\n                  break;\n                }\n\n                _context7.next = 3;\n                return Resume.delExperience(row.id);\n\n              case 3:\n                res = _context7.sent;\n\n                if (res.code === 2000) {\n                  this.$message.success(\"删除成功\");\n                  this.reload();\n                } else {\n                  this.$message.error(\"删除失败\");\n                }\n\n              case 5:\n                this.experiences.pop(row);\n\n              case 6:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n\n      function delExperience(_x6) {\n        return _delExperience.apply(this, arguments);\n      }\n\n      return delExperience;\n    }(),\n    addExperience: function addExperience() {\n      this.experiences.push({\n        resume_id: this.resumeId,\n        id: \"\",\n        name: \"\",\n        start_time: \"\",\n        end_time: \"\",\n        position: \"\",\n        performance: \"\"\n      });\n    },\n    submitForm: function () {\n      var _submitForm = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8() {\n        var res, result;\n        return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                // 获取到当前登录求职者的用户id\n                this.form.user_id = this.$store.getters.user.id;\n                _context8.next = 3;\n                return Resume.update(this.form.user_id, this.form);\n\n              case 3:\n                res = _context8.sent;\n\n                if (res.code < window.MAX_SUCCESS_CODE) {\n                  this.$message.success(\"\".concat(res.message));\n                } // 刷新页面，获取修改后的最新信息\n\n\n                this.loading = true;\n                _context8.next = 8;\n                return Resume.getByUserId(this.$store.getters.user.id);\n\n              case 8:\n                result = _context8.sent;\n                this.form = result;\n                this.loading = false;\n\n              case 11:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this);\n      }));\n\n      function submitForm() {\n        return _submitForm.apply(this, arguments);\n      }\n\n      return submitForm;\n    }(),\n    // 重置表单\n    resetForm: function resetForm(formName) {\n      this.$refs[formName].resetFields();\n    },\n    createClose: function () {\n      var _createClose = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9() {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                this.showCreate = false; // 再次访问接口填充表单数据\n\n                this.loading = true;\n                _context9.next = 4;\n                return Resume.getByUserId(this.$store.getters.user.id);\n\n              case 4:\n                res = _context9.sent;\n                this.form = res;\n                this.loading = false;\n\n              case 7:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, this);\n      }));\n\n      function createClose() {\n        return _createClose.apply(this, arguments);\n      }\n\n      return createClose;\n    }(),\n    getResumeInfo: function () {\n      var _getResumeInfo = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee10() {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                _context10.prev = 0;\n                this.loading = true;\n                _context10.next = 4;\n                return Resume.getByUserId(this.$store.getters.user.id);\n\n              case 4:\n                res = _context10.sent;\n                this.resumeId = res.resume_id + \"\";\n                console.log(this.resumeId);\n                this.form = res;\n                this.educations = res.educations;\n                this.experiences = res.experiences;\n                this.projects = res.projects;\n                this.$forceUpdate();\n                this.loading = false;\n                _context10.next = 20;\n                break;\n\n              case 15:\n                _context10.prev = 15;\n                _context10.t0 = _context10[\"catch\"](0);\n                this.loading = false;\n                console.log(_context10.t0); // 还未创建简历，会来到简历创建页面\n\n                this.showCreate = true;\n\n              case 20:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10, this, [[0, 15]]);\n      }));\n\n      function getResumeInfo() {\n        return _getResumeInfo.apply(this, arguments);\n      }\n\n      return getResumeInfo;\n    }()\n  }\n};",{"version":3,"mappings":"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","names":["Resume","components","ResumeCreate","Detail","data","isRouterAlive","tabPosition","resumeId","loading","form","showCreate","educations","id","name","start_time","end_time","major","diploma","descriptions","experiences","position","performance","projects","background","eduoptions","value","label","mounted","res","console","methods","reload","updateEducation","row","delEducation","addEducation","resume_id","updateProject","delProject","addProject","updateExperience","delExperience","addExperience","submitForm","result","resetForm","formName","createClose","getResumeInfo"],"sourceRoot":"src/view/resume","sources":["resume-modify.vue"],"sourcesContent":["<template>\n  <!-- 我的简历页面 -->\n  <div class=\"container\" v-if=\"!showCreate\">\n    <div class=\"title\">\n      <span>我的简历</span>\n    </div>\n    <el-divider></el-divider>\n    <div class=\"wrap\">\n      <el-tabs :tab-position=\"tabPosition\" style=\"height: auto;\">\n        <!-- 基本信息模块 -->\n        <el-tab-pane label=\"基本信息\">\n          <el-row>\n            <el-col :lg=\"16\" :md=\"20\" :sm=\"24\" :xs=\"24\">\n              <el-form :model=\"form\" status-icon ref=\"form\" label-width=\"100px\" v-loading=\"loading\"\n                @submit.native.prevent>\n                <el-form-item label=\"求职意向\" prop=\"job_intention\">\n                  <el-input size=\"medium\" v-model=\"form.job_intention\" placeholder=\"请填写求职意向\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"居住地\" prop=\"home\">\n                  <el-input size=\"medium\" v-model=\"form.home\" placeholder=\"请填写居住地\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"英语等级\" prop=\"english\">\n                  <el-input size=\"medium\" v-model=\"form.english\" placeholder=\"请填写英语等级\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"年龄\" prop=\"age\">\n                  <el-input size=\"medium\" v-model=\"form.age\" placeholder=\"请填写年龄\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"性别\" prop=\"sex\">\n                  <el-radio v-model=\"form.sex\" :label=\"0\">男</el-radio>\n                  <el-radio v-model=\"form.sex\" :label=\"1\">女</el-radio>\n                </el-form-item>\n                <el-form-item label=\"专业技能\" prop=\"ability\">\n                  <el-input type=\"textarea\" :rows=\"3\" size=\"medium\" v-model=\"form.ability\" placeholder=\"请填写专业技能\">\n                  </el-input>\n                </el-form-item>\n                <el-form-item label=\"个人总结\" prop=\"personal_summary\">\n                  <el-input type=\"textarea\" :rows=\"3\" size=\"medium\" v-model=\"form.personal_summary\"\n                    placeholder=\"请填写个人总结\"></el-input>\n                </el-form-item>\n                <el-form-item class=\"submit\">\n                  <el-button type=\"primary\" @click=\"submitForm('form')\">保 存</el-button>\n                  <el-button @click=\"resetForm('form')\">重 置</el-button>\n                </el-form-item>\n              </el-form>\n            </el-col>\n          </el-row>\n        </el-tab-pane>\n        <!-- 教育经历模块 -->\n        <el-tab-pane label=\"教育经历\">\n          <div>\n            <el-table :data=\"educations\" stripe :style=\"{ width: '100%' }\">\n              <el-table-column label=\"教育经历\" width=\"auto\">\n                <template slot-scope=\"scope\">\n                  <el-row :gutter=\"15\">\n                    <el-form ref=\"elForm\" :model=\"scope.row\" size=\"medium\" label-width=\"100px\">\n                      <el-col :span=\"12\">\n                        <el-form-item label=\"学校\">\n                          <el-input v-model=\"scope.row.name\" :style=\"{ width: '100%' }\"></el-input>\n                        </el-form-item>\n                      </el-col>\n                      <el-col :span=\"12\">\n                        <el-form-item label=\"专业\">\n                          <el-input v-model=\"scope.row.major\" :style=\"{ width: '100%' }\"></el-input>\n                        </el-form-item>\n                      </el-col>\n                      <el-col :span=\"12\">\n                        <el-form-item label=\"开始日期\">\n                          <el-date-picker type=\"date\" v-model=\"scope.row.start_time\" format=\"yyyy-MM-dd\"\n                            value-format=\"yyyy-MM-dd\" :style=\"{ width: '100%' }\" placeholder=\"请选择开始日期\" clearable>\n                          </el-date-picker>\n                        </el-form-item>\n                      </el-col>\n                      <el-col :span=\"12\">\n                        <el-form-item label=\"结束日期\">\n                          <el-date-picker type=\"date\" v-model=\"scope.row.end_time\" format=\"yyyy-MM-dd\"\n                            value-format=\"yyyy-MM-dd\" :style=\"{ width: '100%' }\" placeholder=\"请选择结束日期\" clearable>\n                          </el-date-picker>\n                        </el-form-item>\n                      </el-col>\n                      <el-col :span=\"12\">\n                        <el-form-item label=\"学历\">\n                          <el-select v-model=\"scope.row.diploma\" placeholder=\"请选择学历\">\n                            <el-option v-for=\"item in eduoptions\" :key=\"item.value\" :label=\"item.label\"\n                              :value=\"item.value\" clearable :style=\"{ width: '100%' }\"></el-option>\n                          </el-select>\n                        </el-form-item>\n                      </el-col>\n                      <el-col :span=\"24\">\n                        <el-form-item label=\"描述\">\n                          <el-input v-model=\"scope.row.descriptions\" type=\"textarea\"\n                            :autosize=\"{ minRows: 4, maxRows: 4 }\" :style=\"{ width: '100%' }\"></el-input>\n                        </el-form-item>\n                      </el-col>\n                      <el-col :span=\"12\">\n                        <el-form-item>\n                          <el-button @click=\"updateEducation(scope.row)\" style=\"font:center\" round type=\"primary\">保存\n                          </el-button>\n                          <el-button @click=\"delEducation(scope.row)\" style=\"font:center\" round type=\"danger\">删除\n                          </el-button>\n                        </el-form-item>\n                      </el-col>\n                    </el-form>\n                  </el-row>\n                </template>\n              </el-table-column>\n            </el-table>\n            <el-button @click=\"addEducation()\" style=\"font:center\" round>新增学习经历</el-button>\n          </div>\n        </el-tab-pane>\n        <el-tab-pane label=\"实习经历\">\n          <div>\n            <el-table :data=\"experiences\" stripe :style=\"{ width: '100%' }\">\n              <el-table-column label=\"实习经历\" width=\"auto\">\n                <template slot-scope=\"scope\">\n                  <el-row :gutter=\"15\">\n                    <el-form ref=\"elForm\" :model=\"scope.row\" size=\"medium\" label-width=\"100px\">\n                      <el-col :span=\"12\">\n                        <el-form-item label=\"公司名称\">\n                          <el-input v-model=\"scope.row.name\" :style=\"{ width: '100%' }\"></el-input>\n                        </el-form-item>\n                      </el-col>\n                      <el-col :span=\"12\">\n                        <el-form-item label=\"职位\">\n                          <el-input v-model=\"scope.row.position\" :style=\"{ width: '100%' }\"></el-input>\n                        </el-form-item>\n                      </el-col>\n                      <el-col :span=\"12\">\n                        <el-form-item label=\"开始日期\">\n                          <el-date-picker type=\"date\" v-model=\"scope.row.start_time\" format=\"yyyy-MM-dd\"\n                            value-format=\"yyyy-MM-dd\" :style=\"{ width: '100%' }\" placeholder=\"请选择开始日期\" clearable>\n                          </el-date-picker>\n                        </el-form-item>\n                      </el-col>\n                      <el-col :span=\"12\">\n                        <el-form-item label=\"结束日期\">\n                          <el-date-picker type=\"date\" v-model=\"scope.row.end_time\" format=\"yyyy-MM-dd\"\n                            value-format=\"yyyy-MM-dd\" :style=\"{ width: '100%' }\" placeholder=\"请选择结束日期\" clearable>\n                          </el-date-picker>\n                        </el-form-item>\n                      </el-col>\n\n                      <el-col :span=\"24\">\n                        <el-form-item label=\"工作描述\">\n                          <el-input v-model=\"scope.row.performance\" type=\"textarea\"\n                            :autosize=\"{ minRows: 4, maxRows: 4 }\" :style=\"{ width: '100%' }\"></el-input>\n                        </el-form-item>\n                      </el-col>\n                      <el-col :span=\"12\">\n                        <el-form-item>\n                          <el-button @click=\"updateExperience(scope.row)\" style=\"font:center\" round type=\"primary\">保存\n                          </el-button>\n                          <el-button @click=\"delExperience(scope.row)\" style=\"font:center\" round type=\"danger\">删除\n                          </el-button>\n                        </el-form-item>\n                      </el-col>\n                    </el-form>\n                  </el-row>\n                </template>\n              </el-table-column>\n            </el-table>\n            <el-button @click=\"addExperience()\" style=\"font:center\" round>新增实习经历</el-button>\n          </div>\n        </el-tab-pane>\n        <el-tab-pane label=\"项目经历\">\n          <div>\n            <el-table :data=\"projects\" stripe :style=\"{ width: '100%' }\">\n              <el-table-column label=\"项目经历\" width=\"auto\">\n                <template slot-scope=\"scope\">\n                  <el-row :gutter=\"15\">\n                    <el-form ref=\"elForm\" :model=\"scope.row\" size=\"medium\" label-width=\"100px\">\n                      <el-row>\n                        <el-col :span=\"12\">\n                          <el-form-item label=\"项目名称\">\n                            <el-input v-model=\"scope.row.name\" :style=\"{ width: '100%' }\"></el-input>\n                          </el-form-item>\n                        </el-col>\n                      </el-row>\n                      <el-row>\n                        <el-col :span=\"12\">\n                          <el-form-item label=\"开始日期\">\n                            <el-date-picker type=\"date\" v-model=\"scope.row.start_time\" format=\"yyyy-MM-dd\"\n                              value-format=\"yyyy-MM-dd\" :style=\"{ width: '100%' }\" placeholder=\"请选择开始日期\" clearable>\n                            </el-date-picker>\n                          </el-form-item>\n                        </el-col>\n                        <el-col :span=\"12\">\n                          <el-form-item label=\"结束日期\">\n                            <el-date-picker type=\"date\" v-model=\"scope.row.end_time\" format=\"yyyy-MM-dd\"\n                              value-format=\"yyyy-MM-dd\" :style=\"{ width: '100%' }\" placeholder=\"请选择结束日期\" clearable>\n                            </el-date-picker>\n                          </el-form-item>\n                        </el-col>\n                      </el-row>\n                      <el-col :span=\"24\">\n                        <el-form-item label=\"项目背景\">\n                          <el-input v-model=\"scope.row.background\" type=\"textarea\"\n                            :autosize=\"{ minRows: 3, maxRows: 3 }\" :style=\"{ width: '100%' }\"></el-input>\n                        </el-form-item>\n                      </el-col>\n                      <el-col :span=\"24\">\n                        <el-form-item label=\"项目描述\">\n                          <el-input v-model=\"scope.row.performance\" type=\"textarea\"\n                            :autosize=\"{ minRows: 4, maxRows: 4 }\" :style=\"{ width: '100%' }\"></el-input>\n                        </el-form-item>\n                      </el-col>\n                      <el-col :span=\"12\">\n                        <el-form-item>\n                          <el-button @click=\"updateProject(scope.row)\" style=\"font:center\" round type=\"primary\">保存\n                          </el-button>\n                          <el-button @click=\"delProject(scope.row)\" style=\"font:center\" round type=\"danger\">删除\n                          </el-button>\n                        </el-form-item>\n                      </el-col>\n                    </el-form>\n                  </el-row>\n                </template>\n              </el-table-column>\n            </el-table>\n            <el-button @click=\"addProject()\" style=\"font:center\" round>新增项目经历</el-button>\n          </div>\n        </el-tab-pane>\n        <el-tab-pane label=\"简历预览\">\n          <div>\n            <Detail :id=\"resumeId\" v-if=\"isRouterAlive\"></Detail>\n          </div>\n        </el-tab-pane>\n      </el-tabs>\n    </div>\n  </div>\n\n  <!-- 创建简历 -->\n  <resume-create v-else @createClose=\"createClose\"></resume-create>\n</template>\n\n<script>\nimport {\n  Resume\n} from '@/model/resume'\nimport ResumeCreate from '@/view/resume/resume-create'\nimport Detail from './detail.vue'\n\nexport default {\n  components: {\n    ResumeCreate,\n    Detail\n  },\n  data() {\n    return {\n      isRouterAlive: true,\n      tabPosition: 'right',\n      resumeId: \"\",\n      loading: false,\n      form: {},\n      showCreate: false,\n      educations: [{\n        id: \"\",\n        name: \"\",\n        start_time: \"\",\n        end_time: \"\",\n        major: \"\",\n        diploma: \"\",\n        descriptions: \"\",\n      },],\n      experiences: [{\n        id: \"\",\n        name: \"\",\n        start_time: \"\",\n        end_time: \"\",\n        position: \"\",\n        performance: \"\",\n      },],\n      projects: [{\n        id: \"\",\n        name: \"\",\n        start_time: \"\",\n        end_time: \"\",\n        position: \"\",\n        background: \"\",\n        performance: \"\",\n      },],\n      eduoptions: [{\n        value: 0,\n        label: '高中'\n      }, {\n        value: 1,\n        label: '大学专科'\n      }, {\n        value: 2,\n        label: '大学本科'\n      }, {\n        value: 3,\n        label: '硕士研究生'\n      }, {\n        value: 4,\n        label: '博士研究生'\n      }],\n    }\n  },\n  async mounted() {\n    try {\n      this.loading = true\n      const res = await Resume.getByUserId(this.$store.getters.user.id)\n      this.resumeId = res.resume_id + \"\"\n      console.log(this.resumeId)\n      this.form = res\n      this.educations = res.educations\n      this.experiences = res.experiences\n      this.projects = res.projects\n      this.loading = false\n    } catch (error) {\n      this.loading = false\n      console.log(error)\n      // 还未创建简历，会来到简历创建页面\n      this.showCreate = true\n    }\n  },\n  methods: {\n    reload() {\n      this.isRouterAlive = false\n      this.$nextTick(() => (this.isRouterAlive = true))\n    },\n    // 教育经历操作\n    async updateEducation(row) {\n      //更新操作\n      if (row.id !== \"\") {\n        const res = await Resume.updateEducation(row)\n        if (res.code === 1010) {\n          this.$message.success(\"更新成功\");\n          this.reload()\n        } else {\n          this.$message.error(\"更新失败\")\n        }\n      } else {\n        const res = await Resume.createEducation(row)\n        if (res.code === 1000) {\n          this.$message.success(\"保存成功\");\n          this.reload()\n        } else {\n          this.$message.error(\"保存失败\")\n        }\n      }\n    },\n    async delEducation(row) {\n      if (row.id !== \"\") {\n        const res = await Resume.delEducation(row.id)\n        if (res.code === 2000) {\n          this.$message.success(\"删除成功\")\n          this.reload()\n        } else {\n          this.$message.error(\"删除失败\")\n        }\n      }\n      this.educations.pop(row)\n    },\n    addEducation() {\n      this.educations.push({\n        resume_id: this.resumeId,\n        id: \"\",\n        name: \"\",\n        start_time: \"\",\n        end_time: \"\",\n        major: \"\",\n        diploma: \"\",\n        descriptions: \"\",\n      });\n    },\n\n    // 项目经历操作\n    async updateProject(row) {\n      //更新操作\n      if (row.id !== \"\") {\n        const res = await Resume.updateProject(row)\n        if (res.code === 1010) {\n          this.$message.success(\"更新成功\");\n          this.reload()\n        } else {\n          this.$message.error(\"更新失败\")\n        }\n      } else {\n        const res = await Resume.createProject(row)\n        if (res.code === 1000) {\n          this.$message.success(\"保存成功\");\n          this.reload()\n        } else {\n          this.$message.error(\"保存失败\")\n        }\n      }\n    },\n    async delProject(row) {\n      if (row.id !== \"\") {\n        const res = await Resume.delProject(row.id)\n        if (res.code === 2000) {\n          this.reload()\n          this.$message.success(\"删除成功\")\n        } else {\n          this.$message.error(\"删除失败\")\n        }\n      }\n      this.projects.pop(row)\n    },\n    addProject() {\n      this.projects.push({\n        resume_id: this.resumeId,\n        id: \"\",\n        name: \"\",\n        start_time: \"\",\n        end_time: \"\",\n        position: \"\",\n        background: '',\n        performance: \"\",\n      });\n    },\n\n    // 工作经历操作\n    async updateExperience(row) {\n      //更新操作\n      if (row.id !== \"\") {\n        const res = await Resume.updateExperience(row)\n        if (res.code === 1010) {\n          this.$message.success(\"更新成功\");\n          this.reload()\n        } else {\n          this.$message.error(\"更新失败\")\n        }\n      } else {\n        const res = await Resume.createExperience(row)\n        if (res.code === 1000) {\n          this.$message.success(\"保存成功\");\n          this.reload()\n        } else {\n          this.$message.error(\"保存失败\")\n        }\n      }\n    },\n    async delExperience(row) {\n      if (row.id !== \"\") {\n        const res = await Resume.delExperience(row.id)\n        if (res.code === 2000) {\n          this.$message.success(\"删除成功\")\n          this.reload()\n        } else {\n          this.$message.error(\"删除失败\")\n        }\n      }\n      this.experiences.pop(row)\n    },\n    addExperience() {\n      this.experiences.push({\n        resume_id: this.resumeId,\n        id: \"\",\n        name: \"\",\n        start_time: \"\",\n        end_time: \"\",\n        position: \"\",\n        performance: \"\",\n      });\n    },\n\n    async submitForm() {\n      // 获取到当前登录求职者的用户id\n      this.form.user_id = this.$store.getters.user.id\n      const res = await Resume.update(this.form.user_id, this.form)\n      if (res.code < window.MAX_SUCCESS_CODE) {\n        this.$message.success(`${res.message}`)\n      }\n      // 刷新页面，获取修改后的最新信息\n      this.loading = true\n      const result = await Resume.getByUserId(this.$store.getters.user.id)\n      this.form = result\n      this.loading = false\n    },\n    // 重置表单\n    resetForm(formName) {\n      this.$refs[formName].resetFields()\n    },\n    async createClose() {\n      this.showCreate = false\n      // 再次访问接口填充表单数据\n      this.loading = true\n      const res = await Resume.getByUserId(this.$store.getters.user.id)\n      this.form = res\n      this.loading = false\n    },\n    async getResumeInfo() {\n      try {\n        this.loading = true\n        const res = await Resume.getByUserId(this.$store.getters.user.id)\n        this.resumeId = res.resume_id + \"\"\n        console.log(this.resumeId)\n        this.form = res\n        this.educations = res.educations\n        this.experiences = res.experiences\n        this.projects = res.projects\n        this.$forceUpdate()\n        this.loading = false\n      } catch (error) {\n        this.loading = false\n        console.log(error)\n        // 还未创建简历，会来到简历创建页面\n        this.showCreate = true\n      }\n    }\n  },\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.el-divider--horizontal {\n  margin: 0;\n}\n\n.container {\n  .title {\n    height: 59px;\n    line-height: 59px;\n    color: $parent-title-color;\n    font-size: 16px;\n    font-weight: 500;\n    text-indent: 40px;\n\n    .back {\n      float: right;\n      margin-right: 40px;\n      cursor: pointer;\n    }\n  }\n\n  .wrap {\n    padding: 20px;\n  }\n\n  .submit {\n    float: left;\n  }\n}\n</style>\n"]}]}