{"remainingRequest":"C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\src\\lin\\model\\user.js","dependencies":[{"path":"C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\src\\lin\\model\\user.js","mtime":1656036094000},{"path":"C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\babel.config.js","mtime":1656036094000},{"path":"C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1677772052210},{"path":"C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\node_modules\\babel-loader\\lib\\index.js","mtime":1677771858682},{"path":"C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js","mtime":1677771968250}],"contextDependencies":[],"result":["function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport _regeneratorRuntime from \"C:\\\\Users\\\\Hacker\\\\Desktop\\\\zhaop\\\\resume-master\\\\resume-master\\\\recruit-system\\\\recruit-web\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nimport _axios, { post, get, put } from '@/lin/plugin/axios';\nimport { saveTokens } from '../util/token';\nimport store from '@/store';\n\nvar User = /*#__PURE__*/function () {\n  function User() {\n    _classCallCheck(this, User);\n  }\n\n  _createClass(User, null, [{\n    key: \"register\",\n    value:\n    /**\n     * 分配用户\n     * @param {object} data 注册信息\n     */\n    function register(data) {\n      return _axios({\n        method: 'post',\n        url: 'recruit/user/register',\n        data: data,\n        handleError: true\n      });\n    }\n    /**\n     * 登陆获取tokens\n     * @param {string} username 用户名\n     * @param {string} password 密码\n     */\n\n  }, {\n    key: \"getToken\",\n    value: function () {\n      var _getToken = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(username, password) {\n        var tokens;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return post('recruit/user/login', {\n                  username: username,\n                  password: password\n                });\n\n              case 2:\n                tokens = _context.sent;\n                console.log(tokens);\n                saveTokens(tokens.access_token, tokens.refresh_token);\n                return _context.abrupt(\"return\", tokens);\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getToken(_x, _x2) {\n        return _getToken.apply(this, arguments);\n      }\n\n      return getToken;\n    }()\n    /**\n     * 获取当前用户信息，并返回User实例\n     */\n\n  }, {\n    key: \"getInformation\",\n    value: function () {\n      var _getInformation = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var info, storeUser;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return get('recruit/user/information');\n\n              case 2:\n                info = _context2.sent;\n                storeUser = store.getters.user === null ? {} : store.getters.user;\n                return _context2.abrupt(\"return\", Object.assign(_objectSpread({}, storeUser), info));\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function getInformation() {\n        return _getInformation.apply(this, arguments);\n      }\n\n      return getInformation;\n    }()\n    /**\n     * 获取当前用户信息和所拥有的权限\n     */\n\n  }, {\n    key: \"getPermissions\",\n    value: function () {\n      var _getPermissions = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var info, storeUser;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return get('recruit/user/permissions');\n\n              case 2:\n                info = _context3.sent;\n                storeUser = store.getters.user === null ? {} : store.getters.user;\n                return _context3.abrupt(\"return\", Object.assign(_objectSpread({}, storeUser), info));\n\n              case 5:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function getPermissions() {\n        return _getPermissions.apply(this, arguments);\n      }\n\n      return getPermissions;\n    }()\n    /**\n     * 获取当前用户分组\n     */\n\n  }, {\n    key: \"getGroup\",\n    value: function () {\n      var _getGroup = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n        var id, res;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                id = store.getters.user === null ? \"\" : store.getters.user.id;\n                _context4.next = 3;\n                return get('recruit/user/getGroup/' + id);\n\n              case 3:\n                res = _context4.sent;\n                return _context4.abrupt(\"return\", res);\n\n              case 5:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      function getGroup() {\n        return _getGroup.apply(this, arguments);\n      }\n\n      return getGroup;\n    }()\n    /**\n     * 用户修改密码\n     * @param {string} newPassword 新密码\n     * @param {string} confirmPassword 确认新密码\n     * @param {string} oldPassword 旧密码\n     */\n\n  }, {\n    key: \"updatePassword\",\n    value: function updatePassword(_ref) {\n      var old_password = _ref.old_password,\n          new_password = _ref.new_password,\n          confirm_password = _ref.confirm_password;\n      return put('recruit/user/change_password', {\n        new_password: new_password,\n        confirm_password: confirm_password,\n        old_password: old_password\n      });\n    }\n  }]);\n\n  return User;\n}();\n\nexport { User as default };",{"version":3,"sources":["C:/Users/Hacker/Desktop/zhaop/resume-master/resume-master/recruit-system/recruit-web/src/lin/model/user.js"],"names":["_axios","post","get","put","saveTokens","store","User","data","method","url","handleError","username","password","tokens","console","log","access_token","refresh_token","info","storeUser","getters","user","Object","assign","id","res","old_password","new_password","confirm_password"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,MAAP,IACEC,IADF,EAEEC,GAFF,EAGEC,GAHF,QAIO,oBAJP;AAKA,SACEC,UADF,QAEO,eAFP;AAGA,OAAOC,KAAP,MAAkB,SAAlB;;IAEqBC,I;;;;;;;;AACnB;AACF;AACA;AACA;AACE,sBAAgBC,IAAhB,EAAsB;AACpB,aAAOP,MAAM,CAAC;AACZQ,QAAAA,MAAM,EAAE,MADI;AAEZC,QAAAA,GAAG,EAAE,uBAFO;AAGZF,QAAAA,IAAI,EAAJA,IAHY;AAIZG,QAAAA,WAAW,EAAE;AAJD,OAAD,CAAb;AAMD;AAED;AACF;AACA;AACA;AACA;;;;;+EACE,iBAAsBC,QAAtB,EAAgCC,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACuBX,IAAI,CAAC,oBAAD,EAAuB;AAC9CU,kBAAAA,QAAQ,EAARA,QAD8C;AAE9CC,kBAAAA,QAAQ,EAARA;AAF8C,iBAAvB,CAD3B;;AAAA;AACQC,gBAAAA,MADR;AAKEC,gBAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACAT,gBAAAA,UAAU,CAACS,MAAM,CAACG,YAAR,EAAsBH,MAAM,CAACI,aAA7B,CAAV;AANF,iDAOSJ,MAPT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;AAUA;AACF;AACA;;;;;qFACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACqBX,GAAG,CAAC,0BAAD,CADxB;;AAAA;AACQgB,gBAAAA,IADR;AAEQC,gBAAAA,SAFR,GAEoBd,KAAK,CAACe,OAAN,CAAcC,IAAd,KAAuB,IAAvB,GAA8B,EAA9B,GAAmChB,KAAK,CAACe,OAAN,CAAcC,IAFrE;AAAA,kDAGSC,MAAM,CAACC,MAAP,mBACFJ,SADE,GAEJD,IAFI,CAHT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;AAQA;AACF;AACA;;;;;qFACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACqBhB,GAAG,CAAC,0BAAD,CADxB;;AAAA;AACQgB,gBAAAA,IADR;AAEQC,gBAAAA,SAFR,GAEoBd,KAAK,CAACe,OAAN,CAAcC,IAAd,KAAuB,IAAvB,GAA8B,EAA9B,GAAmChB,KAAK,CAACe,OAAN,CAAcC,IAFrE;AAAA,kDAGSC,MAAM,CAACC,MAAP,mBACFJ,SADE,GAEJD,IAFI,CAHT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;AAQA;AACF;AACA;;;;;+EACE;AAAA;AAAA;AAAA;AAAA;AAAA;AACQM,gBAAAA,EADR,GACanB,KAAK,CAACe,OAAN,CAAcC,IAAd,KAAuB,IAAvB,GAA8B,EAA9B,GAAmChB,KAAK,CAACe,OAAN,CAAcC,IAAd,CAAmBG,EADnE;AAAA;AAAA,uBAEoBtB,GAAG,CAAC,2BAA2BsB,EAA5B,CAFvB;;AAAA;AAEQC,gBAAAA,GAFR;AAAA,kDAGSA,GAHT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;AAMA;AACF;AACA;AACA;AACA;AACA;;;;WACE,8BAIG;AAAA,UAHDC,YAGC,QAHDA,YAGC;AAAA,UAFDC,YAEC,QAFDA,YAEC;AAAA,UADDC,gBACC,QADDA,gBACC;AACD,aAAOzB,GAAG,CAAC,8BAAD,EAAiC;AACzCwB,QAAAA,YAAY,EAAZA,YADyC;AAEzCC,QAAAA,gBAAgB,EAAhBA,gBAFyC;AAGzCF,QAAAA,YAAY,EAAZA;AAHyC,OAAjC,CAAV;AAKD;;;;;;SA5EkBpB,I","sourcesContent":["import _axios, {\n  post,\n  get,\n  put\n} from '@/lin/plugin/axios'\nimport {\n  saveTokens\n} from '../util/token'\nimport store from '@/store'\n\nexport default class User {\n  /**\n   * 分配用户\n   * @param {object} data 注册信息\n   */\n  static register(data) {\n    return _axios({\n      method: 'post',\n      url: 'recruit/user/register',\n      data,\n      handleError: true,\n    })\n  }\n\n  /**\n   * 登陆获取tokens\n   * @param {string} username 用户名\n   * @param {string} password 密码\n   */\n  static async getToken(username, password) {\n    const tokens = await post('recruit/user/login', {\n      username,\n      password,\n    })\n    console.log(tokens)\n    saveTokens(tokens.access_token, tokens.refresh_token)\n    return tokens\n  }\n\n  /**\n   * 获取当前用户信息，并返回User实例\n   */\n  static async getInformation() {\n    const info = await get('recruit/user/information')\n    const storeUser = store.getters.user === null ? {} : store.getters.user\n    return Object.assign({\n      ...storeUser\n    }, info)\n  }\n\n  /**\n   * 获取当前用户信息和所拥有的权限\n   */\n  static async getPermissions() {\n    const info = await get('recruit/user/permissions')\n    const storeUser = store.getters.user === null ? {} : store.getters.user\n    return Object.assign({\n      ...storeUser\n    }, info)\n  }\n\n  /**\n   * 获取当前用户分组\n   */\n  static async getGroup() {\n    const id = store.getters.user === null ? \"\" : store.getters.user.id\n    const res = await get('recruit/user/getGroup/' + id)\n    return res\n  }\n\n  /**\n   * 用户修改密码\n   * @param {string} newPassword 新密码\n   * @param {string} confirmPassword 确认新密码\n   * @param {string} oldPassword 旧密码\n   */\n  static updatePassword({\n    old_password,\n    new_password,\n    confirm_password\n  }) {\n    return put('recruit/user/change_password', {\n      new_password,\n      confirm_password,\n      old_password,\n    })\n  }\n}\n"]}]}