{"remainingRequest":"C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\src\\lin\\util\\util.js","dependencies":[{"path":"C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\src\\lin\\util\\util.js","mtime":1656036094000},{"path":"C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\babel.config.js","mtime":1656036094000},{"path":"C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1677772052210},{"path":"C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\node_modules\\babel-loader\\lib\\index.js","mtime":1677771858682},{"path":"C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js","mtime":1677771968250}],"contextDependencies":[],"result":["function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport { cloneDeep, throttle, debounce } from 'lodash';\n/* eslint-disable */\n\nvar Utils = {};\n/** 参数说明：\n * 根据长度截取先使用字符串，超长部分追加…\n * str 对象字符串\n * len 目标字节长度\n * 返回值： 处理结果字符串\n */\n\nUtils.cutString = function (str, len) {\n  if (str.length * 2 <= len) {\n    return str;\n  }\n\n  var strlen = 0;\n  var s = '';\n\n  for (var i = 0; i < str.length; i++) {\n    // eslint-disable-line\n    s += str.charAt(i);\n\n    if (str.charCodeAt(i) > 128) {\n      strlen += 2;\n\n      if (strlen >= len) {\n        return \"\".concat(s.substring(0, s.length - 1), \"...\");\n      }\n    } else {\n      strlen += 1;\n\n      if (strlen >= len) {\n        return \"\".concat(s.substring(0, s.length - 2), \"...\");\n      }\n    }\n  }\n\n  return s;\n};\n/**\n * 简单数组的交集\n * @param {Array} a\n * @param {Array} b\n */\n\n\nUtils.getIntersect = function (a, b) {\n  if (a.constructor === Array && b.constructor === Array) {\n    var set1 = new Set(a);\n    var set2 = new Set(b);\n    return Array.from(new Set(_toConsumableArray(set1).filter(function (x) {\n      return set2.has(x);\n    })));\n  }\n\n  return null;\n};\n/**\n * 防抖函数\n * @param {*} func 函数体\n * @param {*} wait 延时\n */\n\n\nUtils.debounce = function (func) {\n  var wait = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 50;\n  return debounce(func, wait);\n};\n/**\n * 节流函数\n * @param {*} func 函数体\n * @param {*} wait 延时\n */\n\n\nUtils.throttle = function (func) {\n  var wait = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 50;\n  return throttle(func, wait);\n};\n/**\n * 返回 n 位的随机字符串\n * @param {Number} n\n */\n\n\nUtils.getRandomStr = function () {\n  var n = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 6;\n  var str = '';\n  var chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz1234567890';\n\n  for (var i = 0; i < n; i += 1) {\n    str += chars.charAt(Math.floor(Math.random() * 62));\n  }\n\n  return str;\n};\n\nfunction getTypeOf(obj) {\n  var toString = Object.prototype.toString;\n  var map = {\n    '[object Boolean]': 'boolean',\n    '[object Number]': 'number',\n    '[object String]': 'string',\n    '[object Function]': 'function',\n    '[object Array]': 'array',\n    '[object Date]': 'date',\n    '[object RegExp]': 'regExp',\n    '[object Undefined]': 'undefined',\n    '[object Null]': 'null',\n    '[object Object]': 'object',\n    '[object Symbol]': 'symbol'\n  };\n  return map[toString.call(obj)];\n}\n\nfunction insertItem(item, arr) {\n  var order = item.order;\n\n  if (typeof arr[order] !== 'number') {\n    arr[order] = item;\n    return;\n  }\n\n  var moveBegin;\n  var moveEnd;\n  var pos;\n  var i = order + 1;\n\n  while (arr[i]) {\n    if (arr[i].order > order) {\n      if (!moveBegin) {\n        moveBegin = i;\n        pos = i;\n      }\n    }\n\n    i += 1;\n  }\n\n  if (moveBegin) {\n    moveEnd = i;\n  } else {\n    pos = i;\n  }\n\n  if (!moveEnd) {\n    arr[pos] = item;\n    return;\n  } // 需要移动\n\n\n  for (var _i = moveEnd; _i >= moveBegin; _i -= 1) {\n    arr[_i + 1] = arr[_i];\n  }\n\n  arr[pos] = item;\n}\n/**\n * 根据数组的 order 字段排序\n * @param {Array} source\n */\n\n\nUtils.sortByOrder = function () {\n  var source = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n  if (!Array.isArray(source)) {\n    console.error('sortByOrder 传入参数不符合要求, 应为数组', source);\n    return source;\n  }\n\n  var tmp = [];\n  var target = []; // 将带排序的子项添加进临时数组 tmp\n\n  for (var i = 0; i < source.length; i += 1) {\n    if (typeof source[i].order !== 'number') {\n      continue;\n    }\n\n    var order = source[i].order; // 支持设置倒数顺序\n\n    if (order < 0) {\n      order = source.length + order;\n\n      if (order < 0) {\n        order = 0;\n      }\n    } // 确保整数\n\n\n    source[i].order = Math.floor(order); // 插入临时数组\n\n    insertItem(source[i], tmp);\n  } // 合并临时数组和原数组\n\n\n  for (var _i2 = 0, j = 0; _i2 < source.length; _i2 += 1) {\n    if (typeof source[_i2].order === 'number') {\n      continue;\n    } // 找需要填的坑\n\n\n    while (tmp[j]) {\n      j += 1;\n    }\n\n    tmp[j] = source[_i2];\n  } // 筛除空隙\n\n\n  target = tmp.filter(function (item) {\n    return !!item;\n  });\n  return target;\n};\n/**\n * 深度遍历，深拷贝\n * @param {*} data\n */\n\n\nUtils.deepClone = function (data) {\n  return cloneDeep(data);\n};\n/**\n * 中划线转驼峰\n */\n\n\nUtils.came = function (str) {\n  return \"\".concat(str).replace(/-\\D/g, function (match) {\n    return match.charAt(1).toUpperCase();\n  });\n};\n/**\n * 判断权限\n */\n\n\nUtils.hasPermission = function (permissions, route, user) {\n  // eslint-disable-line\n  if (user && user.admin) {\n    return true;\n  }\n\n  if (route.permission) {\n    return permissions.some(function (permission) {\n      return route.permission.indexOf(permission) > -1;\n    });\n  }\n\n  return true;\n};\n\nvar cached;\n/**\n * 获取窗口滚动条大小, From: https://github.com/react-component/util/blob/master/src/getScrollBarSize.js\n * @param {boolean} fresh 强制重新计算\n * @returns {number}\n */\n\nexport function getScrollBarSize(fresh) {\n  if (fresh || cached === undefined) {\n    var inner = document.createElement('div');\n    inner.style.width = '100%';\n    inner.style.height = '200px';\n    var outer = document.createElement('div');\n    var outerStyle = outer.style;\n    outerStyle.position = 'absolute';\n    outerStyle.top = 0;\n    outerStyle.left = 0;\n    outerStyle.pointerEvents = 'none';\n    outerStyle.visibility = 'hidden';\n    outerStyle.width = '200px';\n    outerStyle.height = '150px';\n    outerStyle.overflow = 'hidden';\n    outer.appendChild(inner);\n    document.body.appendChild(outer);\n    var widthContained = inner.offsetWidth;\n    outer.style.overflow = 'scroll';\n    var widthScroll = inner.offsetWidth;\n\n    if (widthContained === widthScroll) {\n      widthScroll = outer.clientWidth;\n    }\n\n    document.body.removeChild(outer);\n    cached = widthContained - widthScroll;\n  }\n\n  return cached;\n}\nexport default Utils;",{"version":3,"sources":["C:/Users/Hacker/Desktop/zhaop/resume-master/resume-master/recruit-system/recruit-web/src/lin/util/util.js"],"names":["cloneDeep","throttle","debounce","Utils","cutString","str","len","length","strlen","s","i","charAt","charCodeAt","substring","getIntersect","a","b","constructor","Array","set1","Set","set2","from","filter","x","has","func","wait","getRandomStr","n","chars","Math","floor","random","getTypeOf","obj","toString","Object","prototype","map","call","insertItem","item","arr","order","moveBegin","moveEnd","pos","sortByOrder","source","isArray","console","error","tmp","target","j","deepClone","data","came","replace","match","toUpperCase","hasPermission","permissions","route","user","admin","permission","some","indexOf","cached","getScrollBarSize","fresh","undefined","inner","document","createElement","style","width","height","outer","outerStyle","position","top","left","pointerEvents","visibility","overflow","appendChild","body","widthContained","offsetWidth","widthScroll","clientWidth","removeChild"],"mappings":"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","sourcesContent":["import { cloneDeep, throttle, debounce } from 'lodash'\n\n/* eslint-disable */\nconst Utils = {}\n\n/** 参数说明：\n * 根据长度截取先使用字符串，超长部分追加…\n * str 对象字符串\n * len 目标字节长度\n * 返回值： 处理结果字符串\n */\nUtils.cutString = (str, len) => {\n  if (str.length * 2 <= len) {\n    return str\n  }\n  let strlen = 0\n  let s = ''\n  for (let i = 0; i < str.length; i++) {\n    // eslint-disable-line\n    s += str.charAt(i)\n    if (str.charCodeAt(i) > 128) {\n      strlen += 2\n      if (strlen >= len) {\n        return `${s.substring(0, s.length - 1)}...`\n      }\n    } else {\n      strlen += 1\n      if (strlen >= len) {\n        return `${s.substring(0, s.length - 2)}...`\n      }\n    }\n  }\n  return s\n}\n\n/**\n * 简单数组的交集\n * @param {Array} a\n * @param {Array} b\n */\nUtils.getIntersect = (a, b) => {\n  if (a.constructor === Array && b.constructor === Array) {\n    const set1 = new Set(a)\n    const set2 = new Set(b)\n    return Array.from(new Set([...set1].filter(x => set2.has(x))))\n  }\n  return null\n}\n\n/**\n * 防抖函数\n * @param {*} func 函数体\n * @param {*} wait 延时\n */\nUtils.debounce = (func, wait = 50) => debounce(func, wait)\n\n/**\n * 节流函数\n * @param {*} func 函数体\n * @param {*} wait 延时\n */\nUtils.throttle = (func, wait = 50) => throttle(func, wait)\n\n/**\n * 返回 n 位的随机字符串\n * @param {Number} n\n */\nUtils.getRandomStr = (n = 6) => {\n  let str = ''\n  const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz1234567890'\n  for (let i = 0; i < n; i += 1) {\n    str += chars.charAt(Math.floor(Math.random() * 62))\n  }\n  return str\n}\n\nfunction getTypeOf(obj) {\n  const { toString } = Object.prototype\n  const map = {\n    '[object Boolean]': 'boolean',\n    '[object Number]': 'number',\n    '[object String]': 'string',\n    '[object Function]': 'function',\n    '[object Array]': 'array',\n    '[object Date]': 'date',\n    '[object RegExp]': 'regExp',\n    '[object Undefined]': 'undefined',\n    '[object Null]': 'null',\n    '[object Object]': 'object',\n    '[object Symbol]': 'symbol',\n  }\n  return map[toString.call(obj)]\n}\n\nfunction insertItem(item, arr) {\n  const { order } = item\n  if (typeof arr[order] !== 'number') {\n    arr[order] = item\n    return\n  }\n  let moveBegin\n  let moveEnd\n  let pos\n  let i = order + 1\n\n  while (arr[i]) {\n    if (arr[i].order > order) {\n      if (!moveBegin) {\n        moveBegin = i\n        pos = i\n      }\n    }\n    i += 1\n  }\n\n  if (moveBegin) {\n    moveEnd = i\n  } else {\n    pos = i\n  }\n\n  if (!moveEnd) {\n    arr[pos] = item\n    return\n  }\n\n  // 需要移动\n  for (let i = moveEnd; i >= moveBegin; i -= 1) {\n    arr[i + 1] = arr[i]\n  }\n  arr[pos] = item\n}\n\n/**\n * 根据数组的 order 字段排序\n * @param {Array} source\n */\nUtils.sortByOrder = (source = []) => {\n  if (!Array.isArray(source)) {\n    console.error('sortByOrder 传入参数不符合要求, 应为数组', source)\n    return source\n  }\n  const tmp = []\n  let target = []\n\n  // 将带排序的子项添加进临时数组 tmp\n  for (let i = 0; i < source.length; i += 1) {\n    if (typeof source[i].order !== 'number') {\n      continue\n    }\n    let { order } = source[i]\n    // 支持设置倒数顺序\n    if (order < 0) {\n      order = source.length + order\n      if (order < 0) {\n        order = 0\n      }\n    }\n\n    // 确保整数\n    source[i].order = Math.floor(order)\n\n    // 插入临时数组\n    insertItem(source[i], tmp)\n  }\n\n  // 合并临时数组和原数组\n  for (let i = 0, j = 0; i < source.length; i += 1) {\n    if (typeof source[i].order === 'number') {\n      continue\n    }\n    // 找需要填的坑\n    while (tmp[j]) {\n      j += 1\n    }\n    tmp[j] = source[i]\n  }\n  // 筛除空隙\n  target = tmp.filter(item => !!item)\n  return target\n}\n\n/**\n * 深度遍历，深拷贝\n * @param {*} data\n */\nUtils.deepClone = data => cloneDeep(data)\n\n/**\n * 中划线转驼峰\n */\nUtils.came = str => {\n  return `${str}`.replace(/-\\D/g, match => match.charAt(1).toUpperCase())\n}\n\n/**\n * 判断权限\n */\nUtils.hasPermission = (permissions, route, user) => {\n  // eslint-disable-line\n  if (user && user.admin) {\n    return true\n  }\n  if (route.permission) {\n    return permissions.some(permission => route.permission.indexOf(permission) > -1)\n  }\n  return true\n}\n\nlet cached\n/**\n * 获取窗口滚动条大小, From: https://github.com/react-component/util/blob/master/src/getScrollBarSize.js\n * @param {boolean} fresh 强制重新计算\n * @returns {number}\n */\nexport function getScrollBarSize(fresh) {\n  if (fresh || cached === undefined) {\n    const inner = document.createElement('div')\n    inner.style.width = '100%'\n    inner.style.height = '200px'\n\n    const outer = document.createElement('div')\n    const outerStyle = outer.style\n\n    outerStyle.position = 'absolute'\n    outerStyle.top = 0\n    outerStyle.left = 0\n    outerStyle.pointerEvents = 'none'\n    outerStyle.visibility = 'hidden'\n    outerStyle.width = '200px'\n    outerStyle.height = '150px'\n    outerStyle.overflow = 'hidden'\n\n    outer.appendChild(inner)\n\n    document.body.appendChild(outer)\n\n    const widthContained = inner.offsetWidth\n    outer.style.overflow = 'scroll'\n    let widthScroll = inner.offsetWidth\n\n    if (widthContained === widthScroll) {\n      widthScroll = outer.clientWidth\n    }\n\n    document.body.removeChild(outer)\n\n    cached = widthContained - widthScroll\n  }\n  return cached\n}\n\nexport default Utils\n"]}]}