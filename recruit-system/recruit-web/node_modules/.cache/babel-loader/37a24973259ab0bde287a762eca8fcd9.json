{"remainingRequest":"C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\src\\view\\interview\\interviewManage.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\src\\view\\interview\\interviewManage.vue","mtime":1656036094000},{"path":"C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\babel.config.js","mtime":1656036094000},{"path":"C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1677772052210},{"path":"C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\node_modules\\babel-loader\\lib\\index.js","mtime":1677771858682},{"path":"C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1677772052210},{"path":"C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\node_modules\\vue-loader\\lib\\index.js","mtime":1677772060461}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"C:\\\\Users\\\\Hacker\\\\Desktop\\\\zhaop\\\\resume-master\\\\resume-master\\\\recruit-system\\\\recruit-web\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { Interview } from '@/model/interview';\nimport ResumeDetail from '@/view/resume/resume-detail';\nimport moment from 'moment';\nexport default {\n  name: \"ApplicationWait\",\n  components: {\n    ResumeDetail: ResumeDetail\n  },\n  data: function data() {\n    return {\n      resultshow: false,\n      dialogVisible: false,\n      showDetail: false,\n      tableData: [],\n      totalNums: 0,\n      currentPage: 1,\n      pageCount: 10,\n      refreshPagination: true,\n      detailResumeID: 0,\n      applicationID: 0,\n      applicationState: 0,\n      formData: {\n        id: '',\n        interviewdate: '',\n        interviewTime: '',\n        time: '',\n        address: '',\n        memo: ''\n      },\n      rules: {\n        interviewdate: [{\n          required: true,\n          message: '请选择面试日期',\n          trigger: 'change'\n        }],\n        interviewTime: [{\n          required: true,\n          message: '请选择面试时间',\n          trigger: 'change'\n        }],\n        address: [{\n          required: true,\n          message: '请输入面试地点',\n          trigger: 'blur'\n        }],\n        memo: [{\n          required: true,\n          message: '请输入备注',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  created: function () {\n    var _created = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              this.loading = true;\n              this.getByHrId();\n              this.loading = false;\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    function created() {\n      return _created.apply(this, arguments);\n    }\n\n    return created;\n  }(),\n  methods: {\n    onOpen: function onOpen(row) {\n      this.dialogVisible = true;\n      this.formData = row;\n      this.formData.interviewdate = moment(\"\".concat(row.time), 'YYYY-MM-DD').format();\n      this.formData.interviewTime = moment(\"\".concat(row.time), 'HH:mm:ss').format();\n    },\n    onClose: function onClose() {\n      this.$refs['elForm'].resetFields();\n    },\n    close: function close() {\n      this.dialogVisible = false;\n    },\n    handelConfirm: function () {\n      var _handelConfirm = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var _this = this;\n\n        var res;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                this.$refs['elForm'].validate(function (valid) {\n                  if (!valid) return;\n\n                  _this.close();\n                });\n                this.formData.time = moment(\"\".concat(this.formData.interviewdate, \" \").concat(this.formData.interviewTime), 'YYYY-MM-DD HH:mm:ss').format();\n                _context2.next = 4;\n                return Interview.sendInterviewNotify(this.formData);\n\n              case 4:\n                res = _context2.sent;\n\n                if (res.code < window.MAX_SUCCESS_CODE) {\n                  this.$message.success(\"\\u53D1\\u9001\\u6210\\u529F\");\n                  this.getByHrId();\n                  this.close();\n                }\n\n              case 6:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function handelConfirm() {\n        return _handelConfirm.apply(this, arguments);\n      }\n\n      return handelConfirm;\n    }(),\n    getByHrId: function () {\n      var _getByHrId = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var page, count, applications;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                page = this.currentPage - 1;\n                count = this.pageCount; // 未处理：state=0\n\n                _context3.next = 4;\n                return Interview.getByHrId(this.$store.getters.user.id, 0);\n\n              case 4:\n                applications = _context3.sent;\n                this.tableData = applications.items;\n                this.tableData = this.tableData.filter(function (item) {\n                  return item.status < 2;\n                });\n                this.totalNums = applications.total;\n\n              case 8:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function getByHrId() {\n        return _getByHrId.apply(this, arguments);\n      }\n\n      return getByHrId;\n    }(),\n    // 切换table页\n    handleCurrentChange: function () {\n      var _handleCurrentChange = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(val) {\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                this.currentPage = val;\n                this.loading = true;\n                this.getByHrId();\n                this.loading = false;\n\n              case 4:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function handleCurrentChange(_x) {\n        return _handleCurrentChange.apply(this, arguments);\n      }\n\n      return handleCurrentChange;\n    }(),\n    handleDetail: function handleDetail(val) {\n      this.showDetail = true;\n      this.detailResumeID = val.resume_id;\n      this.applicationID = val.id;\n      this.applicationState = val.state;\n    },\n    rowClick: function rowClick() {},\n    detailClose: function detailClose() {\n      this.showDetail = false;\n      this.getByHrId();\n    }\n  }\n};",{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiFA,SACAA,SADA,QAEA,mBAFA;AAGA;AACA;AACA;AACAC,yBADA;AAEAC;AACAC;AADA,GAFA;AAKAC,MALA,kBAKA;AACA;AACAC,uBADA;AAEAC,0BAFA;AAGAC,uBAHA;AAIAC,mBAJA;AAKAC,kBALA;AAMAC,oBANA;AAOAC,mBAPA;AAQAC,6BARA;AASAC,uBATA;AAUAC,sBAVA;AAWAC,yBAXA;AAYAC;AACAC,cADA;AAEAC,yBAFA;AAGAC,yBAHA;AAIAC,gBAJA;AAKAC,mBALA;AAMAC;AANA,OAZA;AAoBAC;AACAL;AACAM,wBADA;AAEAC,4BAFA;AAGAC;AAHA,UADA;AAMAP;AACAK,wBADA;AAEAC,4BAFA;AAGAC;AAHA,UANA;AAWAL;AACAG,wBADA;AAEAC,4BAFA;AAGAC;AAHA,UAXA;AAgBAJ;AACAE,wBADA;AAEAC,0BAFA;AAGAC;AAHA;AAhBA;AApBA;AA2CA,GAjDA;AAkDAC,SAlDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAmDA;AACA;AACA;;AArDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAuDAC;AACAC,UADA,kBACAC,GADA,EACA;AACA;AACA;AACA;AACA;AACA,KANA;AAOAC,WAPA,qBAOA;AACA;AACA,KATA;AAUAC,SAVA,mBAUA;AACA;AACA,KAZA;AAaAC,iBAbA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAcA;AACA;;AACA;AACA,iBAHA;AAIA;AAlBA;AAAA,uBAmBAjC,4CAnBA;;AAAA;AAmBAkC,mBAnBA;;AAoBA;AACA;AACA;AACA;AACA;;AAxBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AA0BAC,aA1BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA2BAC,oBA3BA,GA2BA,oBA3BA;AA4BAC,qBA5BA,GA4BA,cA5BA,EA6BA;;AA7BA;AAAA,uBA8BArC,mDA9BA;;AAAA;AA8BAsC,4BA9BA;AA+BA;AACA;AACA;AACA,iBAFA;AAGA;;AAnCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAqCA;AACAC,uBAtCA;AAAA,4GAsCAC,GAtCA;AAAA;AAAA;AAAA;AAAA;AAuCA;AACA;AACA;AACA;;AA1CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AA4CAC,gBA5CA,wBA4CAD,GA5CA,EA4CA;AACA;AACA;AACA;AACA;AACA,KAjDA;AAkDAE,YAlDA,sBAkDA,EAlDA;AAmDAC,eAnDA,yBAmDA;AACA;AACA;AACA;AAtDA;AAvDA","names":["Interview","name","components","ResumeDetail","data","resultshow","dialogVisible","showDetail","tableData","totalNums","currentPage","pageCount","refreshPagination","detailResumeID","applicationID","applicationState","formData","id","interviewdate","interviewTime","time","address","memo","rules","required","message","trigger","created","methods","onOpen","row","onClose","close","handelConfirm","res","getByHrId","page","count","applications","handleCurrentChange","val","handleDetail","rowClick","detailClose"],"sourceRoot":"src/view/interview","sources":["interviewManage.vue"],"sourcesContent":["<template>\n  <div class=\"container\" v-if=\"!showDetail\">\n    <div class=\"header\">\n      <div class=\"title\">查看面试名单</div>\n    </div>\n    <el-table stripe v-loading=\"loading\" :data=\"tableData\">\n      <el-table-column prop=\"nickname\" label=\"名字\"></el-table-column>\n      <el-table-column prop=\"tel\" label=\"手机\"></el-table-column>\n      <el-table-column prop=\"email\" label=\"邮箱\"></el-table-column>\n      <el-table-column prop=\"title\" label=\"申请职位\"></el-table-column>\n      <el-table-column label=\"面试状态\">\n        <template slot-scope=\"scope\">\n          <!-- <p v-if=\"scope.row.status == 0\">未开始</p>\n          <p v-if=\"scope.row.status == 1\" :style=\"{ color: 'green' }\">通知面试</p>\n          <p v-if=\"scope.row.status == 2\" :style=\"{ color: 'green' }\">面试通过</p>\n          <p v-if=\"scope.row.status == 3\" :style=\"{ color: 'red' }\">面试未通过</p> -->\n          <el-tag v-if=\"scope.row.status == 0\" type=\"info\" plain size=\"small\" round>未开始</el-tag>\n          <el-tag v-if=\"scope.row.status == 1\" type=\"success\" plain size=\"small\" round>通知面试</el-tag>\n          <el-tag v-if=\"scope.row.status == 2\" type=\"success\" plain size=\"small\" round>面试通过</el-tag>\n          <el-tag v-if=\"scope.row.status == 3\" type=\"danger\" plain size=\"small\" round>面试未通过</el-tag>\n        </template>\n      </el-table-column>\n      <el-table-column fixed=\"right\" label=\"操作\" width=\"400\">\n        <template slot-scope=\"scope\">\n          <el-button @click.prevent=\"handleDetail(scope.row)\" type=\"success\" plain size=\"small\" round>查看简历</el-button>\n          <el-button @click.prevent=\"onOpen(scope.row)\" type=\"primary\" plain size=\"small\" v-if=\"scope.row.status < 1\"\n            round>\n            发送面试通知</el-button>\n          <el-button @click.prevent=\"onOpen(scope.row)\" type=\"info\" plain size=\"small\" v-if=\"scope.row.status === 1\"\n            round>\n            重新发送通知</el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n    <!-- 发送面试通知 -->\n    <el-dialog :visible.sync=\"dialogVisible\" v-bind=\"$attrs\" v-on=\"$listeners\" title=\"发送面试通知\">\n      <el-row :gutter=\"15\">\n        <el-form ref=\"elForm\" :model=\"formData\" :rules=\"rules\" size=\"small\" label-width=\"100px\">\n          <el-col :span=\"12\">\n            <el-form-item label=\"面试日期\" prop=\"interviewdate\">\n              <el-date-picker v-model=\"formData.interviewdate\" format=\"yyyy-MM-dd\" value-format=\"yyyy-MM-dd\"\n                :style=\"{ width: '100%' }\" placeholder=\"请选择面试日期\" clearable></el-date-picker>\n            </el-form-item>\n          </el-col>\n          <el-col :span=\"12\">\n            <el-form-item label=\"面试时间\" prop=\"interviewTime\">\n              <el-time-picker v-model=\"formData.interviewTime\" format=\"HH:mm:ss\" value-format=\"HH:mm:ss\"\n                :style=\"{ width: '100%' }\" placeholder=\"请选择面试时间\" clearable></el-time-picker>\n            </el-form-item>\n          </el-col>\n          <el-col :span=\"24\">\n            <el-form-item label=\"面试地点\" prop=\"address\">\n              <el-input v-model=\"formData.address\" placeholder=\"请输入面试地点\" clearable :style=\"{ width: '100%' }\">\n              </el-input>\n            </el-form-item>\n          </el-col>\n          <el-col :span=\"24\">\n            <el-form-item label=\"备注\" prop=\"memo\">\n              <el-input v-model=\"formData.memo\" type=\"textarea\" placeholder=\"请输入备注\"\n                :autosize=\"{ minRows: 4, maxRows: 4 }\" :style=\"{ width: '100%' }\"></el-input>\n            </el-form-item>\n          </el-col>\n        </el-form>\n      </el-row>\n      <div slot=\"footer\">\n        <el-button @click=\"close\">取消</el-button>\n        <el-button type=\"primary\" @click=\"handelConfirm\">发送</el-button>\n      </div>\n    </el-dialog>\n    <div class=\"pagination\">\n      <el-pagination @current-change=\"handleCurrentChange\" :background=\"true\" :page-size=\"pageCount\"\n        :current-page=\"currentPage\" v-if=\"refreshPagination\" layout=\"prev, pager, next, jumper\" :total=\"totalNums\">\n      </el-pagination>\n    </div>\n  </div>\n  <!-- 简历详情页 -->\n  <resume-detail v-else @detailClose=\"detailClose\" :detailResumeID=\"detailResumeID\" :applicationID=\"applicationID\"\n    :applicationState=\"applicationState\"></resume-detail>\n</template>\n\n<script>\nimport {\n  Interview\n} from '@/model/interview'\nimport ResumeDetail from '@/view/resume/resume-detail'\nimport moment from 'moment'\nexport default {\n  name: \"ApplicationWait\",\n  components: {\n    ResumeDetail\n  },\n  data() {\n    return {\n      resultshow: false,\n      dialogVisible: false,\n      showDetail: false,\n      tableData: [],\n      totalNums: 0,\n      currentPage: 1,\n      pageCount: 10,\n      refreshPagination: true,\n      detailResumeID: 0,\n      applicationID: 0,\n      applicationState: 0,\n      formData: {\n        id: '',\n        interviewdate: '',\n        interviewTime: '',\n        time: '',\n        address: '',\n        memo: '',\n      },\n      rules: {\n        interviewdate: [{\n          required: true,\n          message: '请选择面试日期',\n          trigger: 'change'\n        }],\n        interviewTime: [{\n          required: true,\n          message: '请选择面试时间',\n          trigger: 'change'\n        }],\n        address: [{\n          required: true,\n          message: '请输入面试地点',\n          trigger: 'blur'\n        }],\n        memo: [{\n          required: true,\n          message: '请输入备注',\n          trigger: 'blur'\n        }],\n      },\n    }\n  },\n  async created() {\n    this.loading = true\n    this.getByHrId()\n    this.loading = false\n  },\n  methods: {\n    onOpen(row) {\n      this.dialogVisible = true\n      this.formData = row\n      this.formData.interviewdate = moment(`${row.time}`, 'YYYY-MM-DD').format();\n      this.formData.interviewTime = moment(`${row.time}`, 'HH:mm:ss').format();\n    },\n    onClose() {\n      this.$refs['elForm'].resetFields()\n    },\n    close() {\n      this.dialogVisible = false\n    },\n    async handelConfirm() {\n      this.$refs['elForm'].validate(valid => {\n        if (!valid) return\n        this.close()\n      })\n      this.formData.time = moment(`${this.formData.interviewdate} ${this.formData.interviewTime}`, 'YYYY-MM-DD HH:mm:ss').format();\n      const res = await Interview.sendInterviewNotify(this.formData)\n      if (res.code < window.MAX_SUCCESS_CODE) {\n        this.$message.success(`发送成功`)\n        this.getByHrId()\n        this.close()\n      }\n    },\n    async getByHrId() {\n      const page = this.currentPage - 1\n      const count = this.pageCount\n      // 未处理：state=0\n      const applications = await Interview.getByHrId(this.$store.getters.user.id, 0)\n      this.tableData = applications.items\n      this.tableData = this.tableData.filter((item) => {\n        return item.status < 2\n      });\n      this.totalNums = applications.total\n    },\n    // 切换table页\n    async handleCurrentChange(val) {\n      this.currentPage = val\n      this.loading = true\n      this.getByHrId()\n      this.loading = false\n    },\n    handleDetail(val) {\n      this.showDetail = true\n      this.detailResumeID = val.resume_id\n      this.applicationID = val.id\n      this.applicationState = val.state\n    },\n    rowClick() { },\n    detailClose() {\n      this.showDetail = false\n      this.getByHrId()\n    },\n  },\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.container {\n  padding: 0 30px;\n\n  .header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n\n    .title {\n      height: 59px;\n      line-height: 59px;\n      color: $parent-title-color;\n      font-size: 16px;\n      font-weight: 500;\n      float: left;\n    }\n  }\n\n  .pagination {\n    display: flex;\n    justify-content: flex-end;\n    margin: 20px;\n  }\n}\n</style>\n"]}]}