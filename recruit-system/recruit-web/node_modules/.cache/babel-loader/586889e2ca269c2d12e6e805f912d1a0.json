{"remainingRequest":"C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\src\\lin\\plugin\\axios.js","dependencies":[{"path":"C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\src\\lin\\plugin\\axios.js","mtime":1656036094000},{"path":"C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\babel.config.js","mtime":1656036094000},{"path":"C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1677772052210},{"path":"C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\node_modules\\babel-loader\\lib\\index.js","mtime":1677771858682},{"path":"C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js","mtime":1677771968250}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"C:\\\\Users\\\\Hacker\\\\Desktop\\\\zhaop\\\\resume-master\\\\resume-master\\\\recruit-system\\\\recruit-web\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// ajax 封装插件, 使用 axios\nimport Vue from 'vue';\nimport axios from 'axios';\nimport Config from '@/config';\nimport ErrorCode from '@/config/error-code';\nimport store from '@/store';\nimport { getToken, saveAccessToken } from '@/lin/util/token';\nvar config = {\n  baseURL: Config.baseURL || process.env.apiUrl || '',\n  timeout: 5 * 1000,\n  // 请求超时时间设置\n  crossDomain: true,\n  // withCredentials: true, // Check cross-site Access-Control\n  // 定义可获得的http响应状态码\n  // return true、设置为null或者undefined，promise将resolved,否则将rejected\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 510;\n  }\n};\n/**\n * 错误码是否是refresh相关\n * @param {number} code 错误码\n */\n\nfunction refreshTokenException(code) {\n  var flag = false;\n  var codes = [10000, 10042, 10050, 10052];\n\n  if (codes.includes(code)) {\n    flag = true;\n  }\n\n  return flag;\n} // const retryTime = 2 // 请求失败重试次数\n// const retryDelay = 1500 // 请求失败重试间隔\n// 创建请求实例\n\n\nvar _axios = axios.create(config);\n\n_axios.interceptors.request.use(function (originConfig) {\n  // 有 API 请求重新计时\n  Vue.prototype.$_lin_jump();\n\n  var reqConfig = _objectSpread({}, originConfig); // step1: 容错处理\n\n\n  if (!reqConfig.url) {\n    /* eslint-disable-next-line */\n    console.error('request need url');\n    throw new Error({\n      source: 'axiosInterceptors',\n      message: 'request need url'\n    });\n  }\n\n  if (!reqConfig.method) {\n    // 默认使用 get 请求\n    reqConfig.method = 'get';\n  } // 大小写容错\n\n\n  reqConfig.method = reqConfig.method.toLowerCase(); // 参数容错\n\n  if (reqConfig.method === 'get') {\n    if (!reqConfig.params) {\n      // 防止字段用错\n      reqConfig.params = reqConfig.data || {};\n    }\n  } else if (reqConfig.method === 'post') {\n    if (!reqConfig.data) {\n      // 防止字段用错\n      reqConfig.data = reqConfig.params || {};\n    } // 检测是否包含文件类型, 若包含则进行 formData 封装\n\n\n    var hasFile = false;\n    Object.keys(reqConfig.data).forEach(function (key) {\n      if (_typeof(reqConfig.data[key]) === 'object') {\n        var item = reqConfig.data[key];\n\n        if (item instanceof FileList || item instanceof File || item instanceof Blob) {\n          hasFile = true;\n        }\n      }\n    }); // 检测到存在文件使用 FormData 提交数据\n\n    if (hasFile) {\n      var formData = new FormData();\n      Object.keys(reqConfig.data).forEach(function (key) {\n        formData.append(key, reqConfig.data[key]);\n      });\n      reqConfig.data = formData;\n    }\n  } else {\n    // TODO: 其他类型请求数据格式处理\n\n    /* eslint-disable-next-line */\n    console.warn(\"\\u5176\\u4ED6\\u8BF7\\u6C42\\u7C7B\\u578B: \".concat(reqConfig.method, \", \\u6682\\u65E0\\u81EA\\u52A8\\u5904\\u7406\"));\n  } // step2: permission 处理\n\n\n  if (reqConfig.url === 'recruit/user/refresh') {\n    var refreshToken = getToken('refresh_token');\n\n    if (refreshToken) {\n      // eslint-disable-next-line no-param-reassign\n      reqConfig.headers.Authorization = refreshToken;\n    }\n  } else {\n    // 有access_token\n    var accessToken = getToken('access_token');\n\n    if (accessToken) {\n      // eslint-disable-next-line no-param-reassign\n      reqConfig.headers.Authorization = accessToken;\n    }\n  }\n\n  return reqConfig;\n}, function (error) {\n  Promise.reject(error);\n}); // Add a response interceptor\n\n\n_axios.interceptors.response.use( /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(res) {\n    var _res$data, code, message;\n\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _res$data = res.data, code = _res$data.code, message = _res$data.message; // eslint-disable-line\n\n            if (!(res.status.toString().charAt(0) === '2')) {\n              _context2.next = 3;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", res.data);\n\n          case 3:\n            return _context2.abrupt(\"return\", new Promise( /*#__PURE__*/function () {\n              var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(resolve, reject) {\n                var url, cache, refreshResult, result, errorArr;\n                return _regeneratorRuntime.wrap(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        url = res.config.url; // refreshToken相关，直接登出\n\n                        if (!refreshTokenException(code)) {\n                          _context.next = 4;\n                          break;\n                        }\n\n                        setTimeout(function () {\n                          store.dispatch('loginOut');\n                          var origin = window.location.origin;\n                          window.location.href = origin;\n                        }, 1500);\n                        return _context.abrupt(\"return\", resolve(null));\n\n                      case 4:\n                        if (!(code === 10041 || code === 10051)) {\n                          _context.next = 16;\n                          break;\n                        }\n\n                        cache = {};\n\n                        if (!(cache.url !== url)) {\n                          _context.next = 16;\n                          break;\n                        }\n\n                        cache.url = url;\n                        _context.next = 10;\n                        return _axios('recruit/user/refresh');\n\n                      case 10:\n                        refreshResult = _context.sent;\n                        saveAccessToken(refreshResult.access_token); // 将上次失败请求重发\n\n                        _context.next = 14;\n                        return _axios(res.config);\n\n                      case 14:\n                        result = _context.sent;\n                        return _context.abrupt(\"return\", resolve(result));\n\n                      case 16:\n                        if (!res.config.handleError) {\n                          _context.next = 18;\n                          break;\n                        }\n\n                        return _context.abrupt(\"return\", reject(res));\n\n                      case 18:\n                        // 第二种情况：采用前端自己的一套异常提示信息；特殊情况：如果本次请求添加了 showBackend: true, 弹出后端返回错误信息。\n                        if (Config.useFrontEndErrorMsg && !res.config.showBackend) {\n                          // 弹出前端自定义错误信息\n                          errorArr = Object.entries(ErrorCode).filter(function (v) {\n                            return v[0] === code.toString();\n                          }); // 匹配到前端自定义的错误码\n\n                          // 匹配到前端自定义的错误码\n                          if (errorArr.length > 0 && errorArr[0][1] !== '') {\n                            message = errorArr[0][1]; // eslint-disable-line\n                          } else {\n                            message = ErrorCode['777'];\n                          }\n                        }\n\n                        Vue.prototype.$message({\n                          message: message,\n                          type: 'error'\n                        });\n                        reject();\n\n                      case 21:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _callee);\n              }));\n\n              return function (_x2, _x3) {\n                return _ref2.apply(this, arguments);\n              };\n            }()));\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}(), function (error) {\n  if (!error.response) {\n    Vue.prototype.$notify({\n      title: 'Network Error',\n      dangerouslyUseHTMLString: true,\n      message: '<strong class=\"my-notify\">请检查 API 是否异常</strong>'\n    });\n    console.log('error', error);\n  } // 判断请求超时\n\n\n  if (error.code === 'ECONNABORTED' && error.message.indexOf('timeout') !== -1) {\n    Vue.prototype.$message({\n      type: 'warning',\n      message: '请求超时'\n    });\n  }\n\n  return Promise.reject(error);\n}); // eslint-disable-next-line\n\n\nPlugin.install = function (Vue, options) {\n  // eslint-disable-next-line\n  Vue.axios = _axios;\n  window.axios = _axios;\n  Object.defineProperties(Vue.prototype, {\n    axios: {\n      get: function get() {\n        return _axios;\n      }\n    },\n    $axios: {\n      get: function get() {\n        return _axios;\n      }\n    }\n  });\n};\n\nif (!Vue.axios) {\n  Vue.use(Plugin);\n} // 导出常用函数\n\n/**\n * @param {string} url\n * @param {object} data\n * @param {object} params\n */\n\n\nexport function post(url) {\n  var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var params = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  return _axios({\n    method: 'post',\n    url: url,\n    data: data,\n    params: params\n  });\n}\n/**\n * @param {string} url\n * @param {object} params\n */\n\nexport function get(url) {\n  var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return _axios({\n    method: 'get',\n    url: url,\n    params: params\n  });\n}\n/**\n * @param {string} url\n * @param {object} data\n * @param {object} params\n */\n\nexport function put(url) {\n  var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var params = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  return _axios({\n    method: 'put',\n    url: url,\n    params: params,\n    data: data\n  });\n}\n/**\n * @param {string} url\n * @param {object} params\n */\n\nexport function _delete(url) {\n  var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return _axios({\n    method: 'delete',\n    url: url,\n    params: params\n  });\n}\nexport default _axios;",{"version":3,"sources":["C:/Users/Hacker/Desktop/zhaop/resume-master/resume-master/recruit-system/recruit-web/src/lin/plugin/axios.js"],"names":["Vue","axios","Config","ErrorCode","store","getToken","saveAccessToken","config","baseURL","process","env","apiUrl","timeout","crossDomain","validateStatus","status","refreshTokenException","code","flag","codes","includes","_axios","create","interceptors","request","use","originConfig","prototype","$_lin_jump","reqConfig","url","console","error","Error","source","message","method","toLowerCase","params","data","hasFile","Object","keys","forEach","key","item","FileList","File","Blob","formData","FormData","append","warn","refreshToken","headers","Authorization","accessToken","Promise","reject","response","res","toString","charAt","resolve","setTimeout","dispatch","origin","window","location","href","cache","refreshResult","access_token","result","handleError","useFrontEndErrorMsg","showBackend","errorArr","entries","filter","v","length","$message","type","$notify","title","dangerouslyUseHTMLString","log","indexOf","Plugin","install","options","defineProperties","get","$axios","post","put","_delete"],"mappings":"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","sourcesContent":["// ajax 封装插件, 使用 axios\nimport Vue from 'vue'\nimport axios from 'axios'\nimport Config from '@/config'\nimport ErrorCode from '@/config/error-code'\nimport store from '@/store'\nimport {\n  getToken,\n  saveAccessToken\n} from '@/lin/util/token'\n\nconst config = {\n  baseURL: Config.baseURL || process.env.apiUrl || '',\n  timeout: 5 * 1000, // 请求超时时间设置\n  crossDomain: true,\n  // withCredentials: true, // Check cross-site Access-Control\n  // 定义可获得的http响应状态码\n  // return true、设置为null或者undefined，promise将resolved,否则将rejected\n  validateStatus(status) {\n    return status >= 200 && status < 510\n  },\n}\n\n/**\n * 错误码是否是refresh相关\n * @param {number} code 错误码\n */\nfunction refreshTokenException(code) {\n  let flag = false\n  const codes = [10000, 10042, 10050, 10052]\n  if (codes.includes(code)) {\n    flag = true\n  }\n  return flag\n}\n\n// const retryTime = 2 // 请求失败重试次数\n// const retryDelay = 1500 // 请求失败重试间隔\n\n// 创建请求实例\nconst _axios = axios.create(config)\n\n_axios.interceptors.request.use(\n  originConfig => {\n    // 有 API 请求重新计时\n    Vue.prototype.$_lin_jump()\n\n    const reqConfig = {\n      ...originConfig\n    }\n\n    // step1: 容错处理\n    if (!reqConfig.url) {\n      /* eslint-disable-next-line */\n      console.error('request need url')\n      throw new Error({\n        source: 'axiosInterceptors',\n        message: 'request need url',\n      })\n    }\n\n    if (!reqConfig.method) {\n      // 默认使用 get 请求\n      reqConfig.method = 'get'\n    }\n    // 大小写容错\n    reqConfig.method = reqConfig.method.toLowerCase()\n\n    // 参数容错\n    if (reqConfig.method === 'get') {\n      if (!reqConfig.params) {\n        // 防止字段用错\n        reqConfig.params = reqConfig.data || {}\n      }\n    } else if (reqConfig.method === 'post') {\n      if (!reqConfig.data) {\n        // 防止字段用错\n        reqConfig.data = reqConfig.params || {}\n      }\n\n      // 检测是否包含文件类型, 若包含则进行 formData 封装\n      let hasFile = false\n      Object.keys(reqConfig.data).forEach(key => {\n        if (typeof reqConfig.data[key] === 'object') {\n          const item = reqConfig.data[key]\n          if (item instanceof FileList || item instanceof File || item instanceof Blob) {\n            hasFile = true\n          }\n        }\n      })\n\n      // 检测到存在文件使用 FormData 提交数据\n      if (hasFile) {\n        const formData = new FormData()\n        Object.keys(reqConfig.data).forEach(key => {\n          formData.append(key, reqConfig.data[key])\n        })\n        reqConfig.data = formData\n      }\n    } else {\n      // TODO: 其他类型请求数据格式处理\n      /* eslint-disable-next-line */\n      console.warn(`其他请求类型: ${reqConfig.method}, 暂无自动处理`)\n    }\n    // step2: permission 处理\n    if (reqConfig.url === 'recruit/user/refresh') {\n      const refreshToken = getToken('refresh_token')\n      if (refreshToken) {\n        // eslint-disable-next-line no-param-reassign\n        reqConfig.headers.Authorization = refreshToken\n      }\n    } else {\n      // 有access_token\n      const accessToken = getToken('access_token')\n      if (accessToken) {\n        // eslint-disable-next-line no-param-reassign\n        reqConfig.headers.Authorization = accessToken\n      }\n    }\n    return reqConfig\n  },\n  error => {\n    Promise.reject(error)\n  },\n)\n\n// Add a response interceptor\n_axios.interceptors.response.use(\n  async res => {\n      let {\n        code,\n        message\n      } = res.data // eslint-disable-line\n      if (res.status.toString().charAt(0) === '2') {\n        return res.data\n      }\n      return new Promise(async (resolve, reject) => {\n        const {\n          url\n        } = res.config\n\n        // refreshToken相关，直接登出\n        if (refreshTokenException(code)) {\n          setTimeout(() => {\n            store.dispatch('loginOut')\n            const {\n              origin\n            } = window.location\n            window.location.href = origin\n          }, 1500)\n          return resolve(null)\n        }\n        // assessToken相关，刷新令牌\n        if (code === 10041 || code === 10051) {\n          const cache = {}\n          if (cache.url !== url) {\n            cache.url = url\n            const refreshResult = await _axios('recruit/user/refresh')\n            saveAccessToken(refreshResult.access_token)\n            // 将上次失败请求重发\n            const result = await _axios(res.config)\n            return resolve(result)\n          }\n        }\n        // 第一种情况：默认直接提示后端返回的异常信息；特殊情况：如果本次请求添加了 handleError: true，用户自己try catch，框架不做处理\n        if (res.config.handleError) {\n          return reject(res)\n        }\n        // 第二种情况：采用前端自己的一套异常提示信息；特殊情况：如果本次请求添加了 showBackend: true, 弹出后端返回错误信息。\n        if (Config.useFrontEndErrorMsg && !res.config.showBackend) {\n          // 弹出前端自定义错误信息\n          const errorArr = Object.entries(ErrorCode).filter(v => v[0] === code.toString())\n          // 匹配到前端自定义的错误码\n          if (errorArr.length > 0 && errorArr[0][1] !== '') {\n            message = errorArr[0][1] // eslint-disable-line\n          } else {\n            message = ErrorCode['777']\n          }\n        }\n\n        Vue.prototype.$message({\n          message,\n          type: 'error',\n        })\n        reject()\n      })\n    },\n    error => {\n      if (!error.response) {\n        Vue.prototype.$notify({\n          title: 'Network Error',\n          dangerouslyUseHTMLString: true,\n          message: '<strong class=\"my-notify\">请检查 API 是否异常</strong>',\n        })\n        console.log('error', error)\n      }\n\n      // 判断请求超时\n      if (error.code === 'ECONNABORTED' && error.message.indexOf('timeout') !== -1) {\n        Vue.prototype.$message({\n          type: 'warning',\n          message: '请求超时',\n        })\n      }\n      return Promise.reject(error)\n    },\n)\n\n// eslint-disable-next-line\nPlugin.install = function (Vue, options) {\n  // eslint-disable-next-line\n  Vue.axios = _axios\n  window.axios = _axios\n  Object.defineProperties(Vue.prototype, {\n    axios: {\n      get() {\n        return _axios\n      },\n    },\n    $axios: {\n      get() {\n        return _axios\n      },\n    },\n  })\n}\n\nif (!Vue.axios) {\n  Vue.use(Plugin)\n}\n\n// 导出常用函数\n\n/**\n * @param {string} url\n * @param {object} data\n * @param {object} params\n */\nexport function post(url, data = {}, params = {}) {\n  return _axios({\n    method: 'post',\n    url,\n    data,\n    params,\n  })\n}\n\n/**\n * @param {string} url\n * @param {object} params\n */\nexport function get(url, params = {}) {\n  return _axios({\n    method: 'get',\n    url,\n    params,\n  })\n}\n\n/**\n * @param {string} url\n * @param {object} data\n * @param {object} params\n */\nexport function put(url, data = {}, params = {}) {\n  return _axios({\n    method: 'put',\n    url,\n    params,\n    data,\n  })\n}\n\n/**\n * @param {string} url\n * @param {object} params\n */\nexport function _delete(url, params = {}) {\n  return _axios({\n    method: 'delete',\n    url,\n    params,\n  })\n}\n\nexport default _axios\n"]}]}