{"remainingRequest":"C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\src\\view\\interview\\myInterview.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\src\\view\\interview\\myInterview.vue","mtime":1656036094000},{"path":"C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\babel.config.js","mtime":1656036094000},{"path":"C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1677772052210},{"path":"C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\node_modules\\babel-loader\\lib\\index.js","mtime":1677771858682},{"path":"C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1677772052210},{"path":"C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\node_modules\\vue-loader\\lib\\index.js","mtime":1677772060461}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"C:\\\\Users\\\\Hacker\\\\Desktop\\\\zhaop\\\\resume-master\\\\resume-master\\\\recruit-system\\\\recruit-web\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { Interview } from '@/model/interview';\nimport PositionDetail from '@/view/position/position-detail';\nimport moment from 'moment';\nexport default {\n  components: {\n    PositionDetail: PositionDetail\n  },\n  data: function data() {\n    return {\n      resultshow: false,\n      time: '',\n      flag: true,\n      showPositionDetail: false,\n      tableData: [],\n      totalNums: 0,\n      currentPage: 1,\n      pageCount: 10,\n      refreshPagination: true,\n      showPositionID: 0,\n      resultData: {\n        time: undefined,\n        address: '',\n        memo: '',\n        status: 0\n      }\n    };\n  },\n  created: function () {\n    var _created = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              this.loading = true;\n              this.getByUserId();\n              this.loading = false;\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    function created() {\n      return _created.apply(this, arguments);\n    }\n\n    return created;\n  }(),\n  methods: {\n    getstatus: function getstatus() {\n      return this.resultData.status == 3 ? \"error\" : \"success\";\n    },\n    onClose: function onClose() {\n      this.resultData = {\n        time: undefined,\n        address: '',\n        memo: '',\n        status: 0\n      };\n      this.time = '';\n    },\n    showMessage: function showMessage(row) {\n      this.resultshow = true;\n      this.resultData = row;\n      this.time = this.resultData.time ? moment(this.resultData.time).format('北京时间 YYYY年MM月DD日 HH:mm:ss') : '';\n    },\n    editClose: function editClose() {\n      this.showPositionDetail = false;\n      this.$router.push(\"/box/wait\");\n    },\n    handleShow: function handleShow(val) {\n      this.showPositionDetail = true;\n      this.showPositionID = val.id;\n    },\n    getByUserId: function () {\n      var _getByUserId = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var page, count, applications;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                page = this.currentPage - 1;\n                count = this.pageCount; // 待处理：state=0\n\n                _context2.next = 4;\n                return Interview.getByUserId(this.$store.getters.user.id, 0);\n\n              case 4:\n                applications = _context2.sent;\n                this.tableData = applications.items;\n                this.totalNums = applications.total;\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function getByUserId() {\n        return _getByUserId.apply(this, arguments);\n      }\n\n      return getByUserId;\n    }(),\n    // 切换table页\n    handleCurrentChange: function () {\n      var _handleCurrentChange = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(val) {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                this.currentPage = val;\n                this.loading = true;\n                this.getByUserId();\n                this.loading = false;\n\n              case 4:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function handleCurrentChange(_x) {\n        return _handleCurrentChange.apply(this, arguments);\n      }\n\n      return handleCurrentChange;\n    }()\n  }\n};",{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4EA,SACAA,SADA,QAEA,mBAFA;AAGA;AACA;AACA;AACAC;AACAC;AADA,GADA;AAIAC,MAJA,kBAIA;AACA;AACAC,uBADA;AAEAC,cAFA;AAGAC,gBAHA;AAIAC,+BAJA;AAKAC,mBALA;AAMAC,kBANA;AAOAC,oBAPA;AAQAC,mBARA;AASAC,6BATA;AAUAC,uBAVA;AAWAC;AACAT,uBADA;AAEAU,mBAFA;AAGAC,gBAHA;AAIAC;AAJA;AAXA;AAkBA,GAvBA;AAwBAC,SAxBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAyBA;AACA;AACA;;AA3BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AA6BAC;AACAC,aADA,uBACA;AACA;AACA,KAHA;AAIAC,WAJA,qBAIA;AACA;AACAhB,uBADA;AAEAU,mBAFA;AAGAC,gBAHA;AAIAC;AAJA;AAMA;AACA,KAZA;AAaAK,eAbA,uBAaAC,GAbA,EAaA;AACA;AACA;AACA;AACA,KAjBA;AAkBAC,aAlBA,uBAkBA;AACA;AACA;AACA,KArBA;AAsBAC,cAtBA,sBAsBAC,GAtBA,EAsBA;AACA;AACA;AACA,KAzBA;AA0BAC,eA1BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA2BAC,oBA3BA,GA2BA,oBA3BA;AA4BAC,qBA5BA,GA4BA,cA5BA,EA6BA;;AA7BA;AAAA,uBA8BA7B,qDA9BA;;AAAA;AA8BA8B,4BA9BA;AA+BA;AACA;;AAhCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAkCA;AACAC,uBAnCA;AAAA,4GAmCAL,GAnCA;AAAA;AAAA;AAAA;AAAA;AAoCA;AACA;AACA;AACA;;AAvCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AA7BA","names":["Interview","components","PositionDetail","data","resultshow","time","flag","showPositionDetail","tableData","totalNums","currentPage","pageCount","refreshPagination","showPositionID","resultData","address","memo","status","created","methods","getstatus","onClose","showMessage","row","editClose","handleShow","val","getByUserId","page","count","applications","handleCurrentChange"],"sourceRoot":"src/view/interview","sources":["myInterview.vue"],"sourcesContent":["<template>\n  <div class=\"container\" v-if=\"!showPositionDetail\">\n    <div class=\"header\">\n      <div class=\"title\" :style=\"{ 'text-align': 'left' }\">我的面试</div>\n    </div>\n    <el-table stripe v-loading=\"loading\" :data=\"tableData\" :header-cell-style=\"{ 'text-align': 'center' }\"\n      :cell-style=\"{ 'text-align': 'center' }\">\n      <el-table-column label=\"职位名称\">\n        <template slot-scope=\"scope\">\n          <p @click.prevent=\"handleShow(scope.row)\">{{ scope.row.title }}</p>\n        </template>\n      </el-table-column>\n      <el-table-column prop=\"name\" label=\"所属公司\" width=\"250\"></el-table-column>\n      <el-table-column prop=\"city\" label=\"工作地点\" width=\"250\"></el-table-column>\n      <el-table-column label=\"面试状态\">\n        <template slot-scope=\"scope\">\n          <!-- <p v-if=\"scope.row.status == 0\">未开始</p>\n          <p v-if=\"scope.row.status == 1\" :style=\"{ color: 'green' }\">通知面试</p>\n          <p v-if=\"scope.row.status == 2\" :style=\"{ color: 'green' }\">面试通过</p>\n          <p v-if=\"scope.row.status == 3\" :style=\"{ color: 'red' }\">面试未通过</p> -->\n          <el-tag v-if=\"scope.row.status == 0\" type=\"info\">未开始</el-tag>\n          <el-tag v-if=\"scope.row.status == 1\" type=\"success\">通知面试</el-tag>\n          <el-tag v-if=\"scope.row.status == 2\" type=\"success\">面试通过</el-tag>\n          <el-tag v-if=\"scope.row.status == 3\" type=\"danger\">面试未通过</el-tag>\n        </template>\n      </el-table-column>\n      <el-table-column fixed=\"right\" label=\"查看面试信息\">\n        <template slot-scope=\"scope\">\n          <el-button type=\"primary\" plain size=\"mini\" @click.prevent=\"showMessage(scope.row)\" round>查看面试信息</el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n    <div class=\"pagination\">\n      <el-pagination @current-change=\"handleCurrentChange\" :background=\"true\" :page-size=\"pageCount\"\n        :current-page=\"currentPage\" v-if=\"refreshPagination\" layout=\"prev, pager, next, jumper\" :total=\"totalNums\">\n      </el-pagination>\n    </div>\n    <!-- 查看面试信息 -->\n    <div>\n      <el-dialog :visible.sync=\"resultshow\" v-bind=\"$attrs\" v-on=\"$listeners\" @close=\"onClose\" title=\"面试进度\">\n        <div style=\"margin:40px\">\n          <el-steps :space=\"200\" :active=\"resultData.status + 1\" finish-status=\"success\" process-status=\"process\"\n            align-center>\n            <el-step title=\"进入面试\"></el-step>\n            <el-step title=\"面试中\"></el-step>\n            <el-step title=\"等待面试结果\" v-if=\"resultData.status < 2\"></el-step>\n            <el-step title=\"面试通过\" v-if=\"resultData.status === 2\"></el-step>\n            <el-step title=\"面试未通过\" v-if=\"resultData.status === 3\" status=\"error\"></el-step>\n          </el-steps>\n        </div>\n        <el-row :gutter=\"15\">\n          <el-form ref=\"resultForm\" :model=\"resultData\" size=\"medium\" label-width=\"100px\">\n            <el-col :span=\"24\">\n              <el-form-item label=\"面试时间：\">\n                <span>{{ time ? time : \"待定\" }}</span>\n              </el-form-item>\n            </el-col>\n            <el-col :span=\"24\">\n              <el-form-item label=\"面试地点：\">\n                <span>{{ resultData.address ? resultData.address : \"待定\" }}</span>\n              </el-form-item>\n            </el-col>\n            <el-col :span=\"24\">\n              <el-form-item label=\"面试说明：\">\n                <span>{{ resultData.memo ? resultData.memo : \"无\" }}</span>\n              </el-form-item>\n            </el-col>\n          </el-form>\n        </el-row>\n      </el-dialog>\n    </div>\n  </div>\n  <position-detail v-else @editClose=\"editClose\" :detailPositionID=\"showPositionID\"></position-detail>\n</template>\n\n<script>\nimport {\n  Interview\n} from '@/model/interview'\nimport PositionDetail from '@/view/position/position-detail'\nimport moment from 'moment'\nexport default {\n  components: {\n    PositionDetail,\n  },\n  data() {\n    return {\n      resultshow: false,\n      time: '',\n      flag: true,\n      showPositionDetail: false,\n      tableData: [],\n      totalNums: 0,\n      currentPage: 1,\n      pageCount: 10,\n      refreshPagination: true,\n      showPositionID: 0,\n      resultData: {\n        time: undefined,\n        address: '',\n        memo: '',\n        status: 0,\n      },\n    }\n  },\n  async created() {\n    this.loading = true\n    this.getByUserId()\n    this.loading = false\n  },\n  methods: {\n    getstatus() {\n      return (this.resultData.status == 3) ? \"error\" : \"success\"\n    },\n    onClose() {\n      this.resultData = {\n        time: undefined,\n        address: '',\n        memo: '',\n        status: 0,\n      }\n      this.time = ''\n    },\n    showMessage(row) {\n      this.resultshow = true\n      this.resultData = row\n      this.time = this.resultData.time ? moment(this.resultData.time).format('北京时间 YYYY年MM月DD日 HH:mm:ss') : '';\n    },\n    editClose() {\n      this.showPositionDetail = false\n      this.$router.push(\"/box/wait\")\n    },\n    handleShow(val) {\n      this.showPositionDetail = true\n      this.showPositionID = val.id\n    },\n    async getByUserId() {\n      const page = this.currentPage - 1\n      const count = this.pageCount\n      // 待处理：state=0\n      const applications = await Interview.getByUserId(this.$store.getters.user.id, 0)\n      this.tableData = applications.items\n      this.totalNums = applications.total\n    },\n    // 切换table页\n    async handleCurrentChange(val) {\n      this.currentPage = val\n      this.loading = true\n      this.getByUserId()\n      this.loading = false\n    },\n\n  },\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.container {\n  padding: 0 30px;\n\n  .header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n\n    .title {\n      height: 59px;\n      line-height: 59px;\n      color: $parent-title-color;\n      font-size: 16px;\n      font-weight: 500;\n    }\n  }\n\n  .pagination {\n    display: flex;\n    justify-content: flex-end;\n    margin: 20px;\n  }\n}\n</style>\n"]}]}