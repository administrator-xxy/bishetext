{"remainingRequest":"C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\src\\view\\position\\position-create.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\src\\view\\position\\position-create.vue","mtime":1656036094000},{"path":"C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\babel.config.js","mtime":1656036094000},{"path":"C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1677772052210},{"path":"C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\node_modules\\babel-loader\\lib\\index.js","mtime":1677771858682},{"path":"C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1677772052210},{"path":"C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\node_modules\\vue-loader\\lib\\index.js","mtime":1677772060461}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"C:\\\\Users\\\\Hacker\\\\Desktop\\\\zhaop\\\\resume-master\\\\resume-master\\\\recruit-system\\\\recruit-web\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport CompanyCreate from '@/view/company/company-create';\nimport { HRCompany } from '@/model/hrCompany';\nimport { Category } from '@/model/category';\nimport { Position } from '@/model/position';\nexport default {\n  components: {\n    CompanyCreate: CompanyCreate\n  },\n  data: function data() {\n    return {\n      loading: false,\n      form: {},\n      categoryState: '',\n      categorySuggestions: [],\n      showCreate: false,\n      isdisable: false\n    };\n  },\n  mounted: function () {\n    var _mounted = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              this.loading = true; // 先验证是否完成企业认证\n\n              _context.next = 4;\n              return HRCompany.get(this.$store.getters.user.id);\n\n            case 4:\n              res = _context.sent;\n\n              if (res.state !== 1) {\n                this.$message.error(\"未完成企业认证不能发布职位\");\n                this.isdisable = true;\n              } // 没有发生异常，说明已经完成企业认证，给表单的公司名称赋值\n\n\n              this.form.company_name = res.name;\n              this.loading = false;\n              _context.next = 15;\n              break;\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](0);\n              this.loading = false;\n              console.log(_context.t0); // 还未完成企业认证，会显示企业认证组件\n\n              this.showCreate = true;\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this, [[0, 10]]);\n    }));\n\n    function mounted() {\n      return _mounted.apply(this, arguments);\n    }\n\n    return mounted;\n  }(),\n  methods: {\n    submitForm: function () {\n      var _submitForm = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(formName) {\n        var result, res;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                this.loading = true; // 拿到HR对应的Company的id值\n\n                _context2.next = 4;\n                return HRCompany.get(this.$store.getters.user.id);\n\n              case 4:\n                result = _context2.sent;\n                this.form.company_id = result.id; // 给hr_id赋值\n\n                this.form.hr_id = this.$store.getters.user.id; // 新增职位\n\n                _context2.next = 9;\n                return Position.create(this.form);\n\n              case 9:\n                res = _context2.sent;\n                this.loading = false;\n\n                if (res.code < window.MAX_SUCCESS_CODE) {\n                  this.$message.success(\"\".concat(res.message)); // 清空输入框，方便继续添加职位\n\n                  this.resetForm(formName);\n                }\n\n                _context2.next = 18;\n                break;\n\n              case 14:\n                _context2.prev = 14;\n                _context2.t0 = _context2[\"catch\"](0);\n                this.loading = false;\n                console.log(_context2.t0);\n\n              case 18:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[0, 14]]);\n      }));\n\n      function submitForm(_x) {\n        return _submitForm.apply(this, arguments);\n      }\n\n      return submitForm;\n    }(),\n    // 重置表单\n    resetForm: function resetForm(formName) {\n      this.$refs[formName].resetFields();\n    },\n    queryCategorySearch: function queryCategorySearch(queryString, cb) {\n      // eslint-disable-next-line\n      var suggestions = this.categorySuggestions;\n      var results = queryString ? suggestions.filter(this.createCategoryFilter(queryString)) : suggestions;\n      cb(results);\n    },\n    createCategoryFilter: function createCategoryFilter(queryString) {\n      // eslint-disable-next-line\n      return function (suggestion) {\n        return suggestion.name.toLowerCase().indexOf(queryString.toLowerCase()) === 0;\n      };\n    },\n    handleCategorySelect: function handleCategorySelect(item) {\n      this.categoryState = item.name; // 给表单的职位分类id赋值\n\n      this.form.category_id = item.id;\n    },\n    loadCategorySuggestions: function () {\n      var _loadCategorySuggestions = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (!(this.categorySuggestions.length > 0)) {\n                  _context3.next = 2;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\");\n\n              case 2:\n                _context3.prev = 2;\n                _context3.next = 5;\n                return Category.getList();\n\n              case 5:\n                this.categorySuggestions = _context3.sent;\n\n                if (this.categorySuggestions.length === 0) {\n                  this.$message.error('暂无职位分类，请先添加');\n                }\n\n                _context3.next = 13;\n                break;\n\n              case 9:\n                _context3.prev = 9;\n                _context3.t0 = _context3[\"catch\"](2);\n                this.$message.error('获取职位分类失败');\n                console.error(_context3.t0);\n\n              case 13:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[2, 9]]);\n      }));\n\n      function loadCategorySuggestions() {\n        return _loadCategorySuggestions.apply(this, arguments);\n      }\n\n      return loadCategorySuggestions;\n    }()\n  }\n};",{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2DA;AACA,SACAA,SADA,QAEA,mBAFA;AAGA,SACAC,QADA,QAEA,kBAFA;AAGA,SACAC,QADA,QAEA,kBAFA;AAIA;AACAC;AACAC;AADA,GADA;AAIAC,MAJA,kBAIA;AACA;AACAC,oBADA;AAEAC,cAFA;AAGAC,uBAHA;AAIAC,6BAJA;AAKAC,uBALA;AAMAC;AANA;AAQA,GAbA;AAcAC,SAdA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgBA,kCAhBA,CAiBA;;AAjBA;AAAA,qBAkBAZ,0CAlBA;;AAAA;AAkBAa,iBAlBA;;AAmBA;AACA;AACA;AACA,eAtBA,CAuBA;;;AACA;AACA;AAzBA;AAAA;;AAAA;AAAA;AAAA;AA2BA;AACAC,uCA5BA,CA6BA;;AACA;;AA9BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAiCAC;AACAC,cADA;AAAA,mGACAC,QADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA,oCAHA,CAIA;;AAJA;AAAA,uBAKAjB,0CALA;;AAAA;AAKAkB,sBALA;AAMA,iDANA,CAOA;;AACA,8DARA,CASA;;AATA;AAAA,uBAUAhB,0BAVA;;AAAA;AAUAW,mBAVA;AAWA;;AACA;AACA,gEADA,CAEA;;AACA;AACA;;AAhBA;AAAA;;AAAA;AAAA;AAAA;AAkBA;AACAC;;AAnBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAsBA;AACAK,aAvBA,qBAuBAF,QAvBA,EAuBA;AACA;AACA,KAzBA;AA0BAG,uBA1BA,+BA0BAC,WA1BA,EA0BAC,EA1BA,EA0BA;AACA;AACA;AACA;AACAA;AACA,KA/BA;AAgCAC,wBAhCA,gCAgCAF,WAhCA,EAgCA;AACA;AACA;AACA;AACA,OAFA;AAGA,KArCA;AAsCAG,wBAtCA,gCAsCAC,IAtCA,EAsCA;AACA,qCADA,CAEA;;AACA;AACA,KA1CA;AA2CAC,2BA3CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBA4CA,mCA5CA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA,uBAgDAzB,kBAhDA;;AAAA;AAgDA,wCAhDA;;AAiDA;AACA;AACA;;AAnDA;AAAA;;AAAA;AAAA;AAAA;AAqDA;AACAa;;AAtDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAjCA","names":["HRCompany","Category","Position","components","CompanyCreate","data","loading","form","categoryState","categorySuggestions","showCreate","isdisable","mounted","res","console","methods","submitForm","formName","result","resetForm","queryCategorySearch","queryString","cb","createCategoryFilter","handleCategorySelect","item","loadCategorySuggestions"],"sourceRoot":"src/view/position","sources":["position-create.vue"],"sourcesContent":["<template>\n  <!-- 发布职位页面 -->\n  <div class=\"container\" v-if=\"!showCreate\">\n    <div class=\"title\">\n      <span>新增职位</span>\n    </div>\n    <el-divider></el-divider>\n    <div class=\"wrap\">\n      <el-row>\n        <el-col :lg=\"16\" :md=\"20\" :sm=\"24\" :xs=\"24\">\n          <el-form :model=\"form\" status-icon ref=\"form\" label-width=\"100px\" v-loading=\"loading\" @submit.native.prevent>\n            <el-form-item label=\"职位名称\" prop=\"title\">\n              <el-input size=\"medium\" v-model=\"form.title\" placeholder=\"请填写职位名称\"></el-input>\n            </el-form-item>\n            <el-form-item label=\"职位分类\" prop=\"category_id\">\n              <el-autocomplete @focus=\"loadCategorySuggestions\" popper-class=\"my-autocomplete\" class=\"inline-input\"\n                v-model=\"categoryState\" :fetch-suggestions=\"queryCategorySearch\" placeholder=\"请填写职位所属分类\"\n                @select=\"handleCategorySelect\">\n                <template slot-scope=\"{ item }\">\n                  <span class=\"id\">{{ item.id }}</span>\n                  <span class=\"name\">{{ item.name }}</span>\n                </template>\n              </el-autocomplete>\n            </el-form-item>\n            <el-form-item label=\"招聘人数\" prop=\"quantity\">\n              <el-input size=\"medium\" v-model=\"form.quantity\" placeholder=\"请填写职位招聘人数\"></el-input>\n            </el-form-item>\n            <el-form-item label=\"薪资\">\n              <el-input size=\"medium\" v-model=\"form.salary_down\" style=\"float: left;width: 20%\" placeholder=\"请填写最低薪资\">\n              </el-input>\n              <span style=\"float: left;\">~</span>\n              <el-input size=\"medium\" v-model=\"form.salary_up\" style=\"float: left;width: 20%\" placeholder=\"请填写最高薪资\">\n              </el-input>\n            </el-form-item>\n            <el-form-item label=\"工作地点\" prop=\"city\">\n              <el-input size=\"medium\" v-model=\"form.city\" placeholder=\"请填写工作地点\"></el-input>\n            </el-form-item>\n            <el-form-item label=\"职位要求\" prop=\"requirement\">\n              <el-input size=\"medium\" type=\"textarea\" :rows=\"4\" v-model=\"form.requirement\" placeholder=\"请填写职位要求\">\n              </el-input>\n            </el-form-item>\n            <el-form-item label=\"公司名称\">\n              <el-input size=\"medium\" v-model=\"form.company_name\" disabled></el-input>\n            </el-form-item>\n            <el-form-item class=\"submit\">\n              <el-button type=\"primary\" @click=\"submitForm('form')\" :disabled=\"isdisable\">保 存</el-button>\n              <el-button @click=\"resetForm('form')\">重 置</el-button>\n            </el-form-item>\n          </el-form>\n        </el-col>\n      </el-row>\n    </div>\n  </div>\n\n  <!-- 企业认证 -->\n  <company-create v-else @createClose=\"createClose\"></company-create>\n</template>\n\n<script>\nimport CompanyCreate from '@/view/company/company-create'\nimport {\n  HRCompany\n} from '@/model/hrCompany'\nimport {\n  Category\n} from '@/model/category'\nimport {\n  Position\n} from '@/model/position'\n\nexport default {\n  components: {\n    CompanyCreate,\n  },\n  data() {\n    return {\n      loading: false,\n      form: {},\n      categoryState: '',\n      categorySuggestions: [],\n      showCreate: false,\n      isdisable: false,\n    }\n  },\n  async mounted() {\n    try {\n      this.loading = true\n      // 先验证是否完成企业认证\n      const res = await HRCompany.get(this.$store.getters.user.id)\n      if (res.state !== 1) {\n        this.$message.error(\"未完成企业认证不能发布职位\");\n        this.isdisable = true\n      }\n      // 没有发生异常，说明已经完成企业认证，给表单的公司名称赋值\n      this.form.company_name = res.name\n      this.loading = false\n    } catch (error) {\n      this.loading = false\n      console.log(error)\n      // 还未完成企业认证，会显示企业认证组件\n      this.showCreate = true\n    }\n  },\n  methods: {\n    async submitForm(formName) {\n      try {\n        this.loading = true\n        // 拿到HR对应的Company的id值\n        const result = await HRCompany.get(this.$store.getters.user.id)\n        this.form.company_id = result.id\n        // 给hr_id赋值\n        this.form.hr_id = this.$store.getters.user.id\n        // 新增职位\n        const res = await Position.create(this.form)\n        this.loading = false\n        if (res.code < window.MAX_SUCCESS_CODE) {\n          this.$message.success(`${res.message}`)\n          // 清空输入框，方便继续添加职位\n          this.resetForm(formName)\n        }\n      } catch (error) {\n        this.loading = false\n        console.log(error)\n      }\n    },\n    // 重置表单\n    resetForm(formName) {\n      this.$refs[formName].resetFields()\n    },\n    queryCategorySearch(queryString, cb) {\n      // eslint-disable-next-line\n      const suggestions = this.categorySuggestions\n      const results = queryString ? suggestions.filter(this.createCategoryFilter(queryString)) : suggestions\n      cb(results)\n    },\n    createCategoryFilter(queryString) {\n      // eslint-disable-next-line\n      return suggestion => {\n        return suggestion.name.toLowerCase().indexOf(queryString.toLowerCase()) === 0\n      }\n    },\n    handleCategorySelect(item) {\n      this.categoryState = item.name\n      // 给表单的职位分类id赋值\n      this.form.category_id = item.id\n    },\n    async loadCategorySuggestions() {\n      if (this.categorySuggestions.length > 0) {\n        return\n      }\n      try {\n        this.categorySuggestions = await Category.getList()\n        if (this.categorySuggestions.length === 0) {\n          this.$message.error('暂无职位分类，请先添加')\n        }\n      } catch (error) {\n        this.$message.error('获取职位分类失败')\n        console.error(error)\n      }\n    },\n  },\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.el-divider--horizontal {\n  margin: 0;\n}\n\n.container {\n  .title {\n    height: 59px;\n    line-height: 59px;\n    color: $parent-title-color;\n    font-size: 16px;\n    font-weight: 500;\n    text-indent: 40px;\n\n    .back {\n      float: right;\n      margin-right: 40px;\n      cursor: pointer;\n    }\n  }\n\n  .wrap {\n    padding: 20px;\n  }\n\n  .submit {\n    float: left;\n  }\n}\n\n.my-autocomplete {\n  li {\n    line-height: normal;\n    padding: 7px;\n    display: inline-flex;\n    align-content: space-around;\n\n    .name {\n      text-overflow: ellipsis;\n      overflow: hidden;\n    }\n\n    .id {\n      margin-right: 15px;\n      font-size: 12px;\n      color: #b4b4b4;\n    }\n\n    .highlighted .addr {\n      color: #ddd;\n    }\n  }\n}\n</style>\n"]}]}