{"remainingRequest":"C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\src\\view\\about\\company.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\src\\view\\about\\company.vue","mtime":1656036094000},{"path":"C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\babel.config.js","mtime":1656036094000},{"path":"C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1677772052210},{"path":"C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\node_modules\\babel-loader\\lib\\index.js","mtime":1677771858682},{"path":"C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1677772052210},{"path":"C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\node_modules\\vue-loader\\lib\\index.js","mtime":1677772060461}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"C:\\\\Users\\\\Hacker\\\\Desktop\\\\zhaop\\\\resume-master\\\\resume-master\\\\recruit-system\\\\recruit-web\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport LinSearch from '@/component/base/search/lin-search';\nimport { Company } from '@/model/company';\nimport { Follow } from '@/model/follow';\nimport CompanyDetail from '@/view/company/company-detail';\nexport default {\n  components: {\n    LinSearch: LinSearch,\n    CompanyDetail: CompanyDetail\n  },\n  data: function data() {\n    return {\n      showDetail: false,\n      // 是否显示公司详情页\n      tableData: [],\n      // 表格数据\n      totalNums: 0,\n      // 数据总数\n      currentPage: 1,\n      // 当前页数\n      pageCount: 10,\n      // 每页的数据量\n      refreshPagination: true,\n      // 页数增加的时候，因为缓存的缘故，需要刷新 Pagination 组件\n      detailCompanyID: 0,\n      // 公司id\n      searchKeyword: '',\n      // 搜索时输入的关键字\n      keyword: null,\n      // 查询关键字,用于显示搜索提示\n      list: {} //关注公司时传入的列表数据\n\n    };\n  },\n  created: function () {\n    var _created = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              this.loading = true;\n              this.getByState();\n              this.loading = false;\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    function created() {\n      return _created.apply(this, arguments);\n    }\n\n    return created;\n  }(),\n  watch: {\n    /**\n     * 关键字搜索\n     */\n    searchKeyword: function searchKeyword(newVal) {\n      if (newVal) {\n        this.keyword = newVal;\n\n        if (this.searchUser) {\n          this.keyword = \"\".concat(newVal);\n        }\n      } else {\n        this.keyword = '';\n        this.$refs.searchKeyword.clear();\n      }\n\n      this.searchCompanyList();\n    }\n  },\n  methods: {\n    getByState: function () {\n      var _getByState = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var page, count, companys;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                page = this.currentPage - 1;\n                count = this.pageCount; // 展示所有审核通过的公司\n\n                _context2.next = 4;\n                return Company.getByState(1, page, count);\n\n              case 4:\n                companys = _context2.sent;\n                this.tableData = companys.items;\n                this.totalNums = companys.total;\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function getByState() {\n        return _getByState.apply(this, arguments);\n      }\n\n      return getByState;\n    }(),\n    // 通过查询关键字分页搜索公司列表 \n    searchCompanyList: function () {\n      var _searchCompanyList = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var page, count, companys;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                page = this.currentPage - 1;\n                count = this.pageCount;\n                _context3.next = 4;\n                return Company.getByKeyword(page, count, this.searchKeyword);\n\n              case 4:\n                companys = _context3.sent;\n                this.tableData = companys.items;\n                this.totalNums = companys.total;\n\n              case 7:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function searchCompanyList() {\n        return _searchCompanyList.apply(this, arguments);\n      }\n\n      return searchCompanyList;\n    }(),\n    // 清空检索\n    backInit: function () {\n      var _backInit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                this.searchKeyword = '';\n                this.keyword = '';\n                this.tableData = [];\n                this.loading = true;\n                this.getByState();\n                this.loading = false;\n\n              case 6:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function backInit() {\n        return _backInit.apply(this, arguments);\n      }\n\n      return backInit;\n    }(),\n\n    /**\n     * 监听输入查询关键字\n     */\n    onQueryChange: function () {\n      var _onQueryChange = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(query) {\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                this.searchKeyword = query.trim();\n\n              case 1:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function onQueryChange(_x) {\n        return _onQueryChange.apply(this, arguments);\n      }\n\n      return onQueryChange;\n    }(),\n    // 切换table页\n    handleCurrentChange: function () {\n      var _handleCurrentChange = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(val) {\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                this.currentPage = val;\n                this.loading = true;\n                this.getByState();\n                this.loading = false;\n\n              case 4:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function handleCurrentChange(_x2) {\n        return _handleCurrentChange.apply(this, arguments);\n      }\n\n      return handleCurrentChange;\n    }(),\n    handleDetail: function handleDetail(val) {\n      this.showDetail = true;\n      this.detailCompanyID = val.id;\n    },\n    // 关注公司\n    handleFollow: function () {\n      var _handleFollow = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(val) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                // 获取当前登录求职者的用户id\n                this.list.user_id = this.$store.getters.user.id; // 获取当前关注的公司id\n\n                this.list.company_id = val.id; // 调用添加关注的方法\n\n                _context7.next = 4;\n                return Follow.create(this.list);\n\n              case 4:\n                res = _context7.sent;\n\n                if (res.code < window.MAX_SUCCESS_CODE) {\n                  this.$message.success(\"\".concat(res.message));\n                }\n\n              case 6:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n\n      function handleFollow(_x3) {\n        return _handleFollow.apply(this, arguments);\n      }\n\n      return handleFollow;\n    }(),\n    detailClose: function detailClose() {\n      this.showDetail = false;\n      this.getByState();\n    }\n  }\n};",{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoDA;AACA;AACA;AACA;AAEA;AACAA;AACAC,wBADA;AAEAC;AAFA,GADA;AAKAC,MALA,kBAKA;AACA;AACAC,uBADA;AACA;AACAC,mBAFA;AAEA;AACAC,kBAHA;AAGA;AACAC,oBAJA;AAIA;AACAC,mBALA;AAKA;AACAC,6BANA;AAMA;AACAC,wBAPA;AAOA;AACAC,uBARA;AAQA;AACAC,mBATA;AASA;AACAC,cAVA,CAUA;;AAVA;AAYA,GAlBA;AAmBAC,SAnBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAoBA;AACA;AACA;;AAtBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAwBAC;AACA;AACA;AACA;AACAJ,iBAJA,yBAIAK,MAJA,EAIA;AACA;AACA;;AACA;AACA;AACA;AACA,OALA,MAKA;AACA;AACA;AACA;;AACA;AACA;AAfA,GAxBA;AAyCAC;AACAC,cADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEAC,oBAFA,GAEA,oBAFA;AAGAC,qBAHA,GAGA,cAHA,EAIA;;AAJA;AAAA,uBAKAC,kCALA;;AAAA;AAKAC,wBALA;AAMA;AACA;;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AASA;AACAC,qBAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWAJ,oBAXA,GAWA,oBAXA;AAYAC,qBAZA,GAYA,cAZA;AAAA;AAAA,uBAaAC,qDAbA;;AAAA;AAaAC,wBAbA;AAcA;AACA;;AAfA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAiBA;AACAE,YAlBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAmBA;AACA;AACA;AACA;AACA;AACA;;AAxBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AA0BA;AACA;AACA;AACAC,iBA7BA;AAAA,sGA6BAC,KA7BA;AAAA;AAAA;AAAA;AAAA;AA8BA;;AA9BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAgCA;AACAC,uBAjCA;AAAA,4GAiCAC,GAjCA;AAAA;AAAA;AAAA;AAAA;AAkCA;AACA;AACA;AACA;;AArCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAuCAC,gBAvCA,wBAuCAD,GAvCA,EAuCA;AACA;AACA;AACA,KA1CA;AA2CA;AACAE,gBA5CA;AAAA,qGA4CAF,GA5CA;AAAA;AAAA;AAAA;AAAA;AAAA;AA6CA;AACA,gEA9CA,CA+CA;;AACA,8CAhDA,CAiDA;;AAjDA;AAAA,uBAkDAG,wBAlDA;;AAAA;AAkDAC,mBAlDA;;AAmDA;AACA;AACA;;AArDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAuDAC,eAvDA,yBAuDA;AACA;AACA;AACA;AA1DA;AAzCA","names":["components","LinSearch","CompanyDetail","data","showDetail","tableData","totalNums","currentPage","pageCount","refreshPagination","detailCompanyID","searchKeyword","keyword","list","created","watch","newVal","methods","getByState","page","count","Company","companys","searchCompanyList","backInit","onQueryChange","query","handleCurrentChange","val","handleDetail","handleFollow","Follow","res","detailClose"],"sourceRoot":"src/view/about","sources":["company.vue"],"sourcesContent":["<template>\n  <div class=\"container\" v-if=\"!showDetail\">\n    <div class=\"header\">\n      <div class=\"title\">企业员工招聘系统系统——公司大全</div>\n    </div>\n    <!-- 搜索框 -->\n    <div class=\"box\">\n      <div class=\"left\">\n        <lin-search @query=\"onQueryChange\" placeholder=\"请输入公司名称\" ref=\"searchKeyword\" />\n      </div>\n    </div>\n    <transition name=\"fade\">\n      <div class=\"search\" v-if=\"keyword\">\n        <p class=\"search-tip\">\n          搜索“\n          <span class=\"search-keyword\">{{ keyword }}</span>”, 找到\n          <span class=\"search-num\">{{ totalNums }}</span> 条公司信息\n        </p>\n        <button class=\"search-back\" @click=\"backInit\">返回全部公司</button>\n      </div>\n    </transition>\n    <!-- 公司列表 -->\n    <el-table stripe v-loading=\"loading\" :data=\"tableData\">\n      <el-table-column prop=\"name\" label=\"公司名称\" width=\"200\"></el-table-column>\n      <el-table-column prop=\"logo\" label=\"公司logo\" width=\"250\">\n        <template v-if=\"scope.row.logo\" slot-scope=\"scope\">\n          <el-image :src=\"scope.row.logo\" :preview-src-list=\"imgSrcList\" style=\"max-height: 50px; max-width: 100px;\">\n          </el-image>\n        </template>\n      </el-table-column>\n      <el-table-column prop=\"foreign_name\" label=\"公司外文名\" width=\"200\"></el-table-column>\n      <el-table-column prop=\"city\" label=\"总部地点\" width=\"200\"></el-table-column>\n      <el-table-column prop=\"mission\" label=\"公司使命\" width=\"200\" :show-overflow-tooltip=\"true\"></el-table-column>\n      <el-table-column fixed=\"right\" label=\"操作\">\n        <template slot-scope=\"scope\">\n          <el-button @click.prevent=\"handleDetail(scope.row)\" type=\"primary\" plain size=\"mini\">查看</el-button>\n          <el-button @click.prevent=\"handleFollow(scope.row)\" v-permission=\"{ permission: '新增关注' }\" type=\"success\" plain\n            size=\"mini\">关注公司</el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n    <div class=\"pagination\">\n      <el-pagination @current-change=\"handleCurrentChange\" :background=\"true\" :page-size=\"pageCount\"\n        :current-page=\"currentPage\" v-if=\"refreshPagination\" layout=\"prev, pager, next, jumper\" :total=\"totalNums\">\n      </el-pagination>\n    </div>\n  </div>\n  <!-- 公司详情 -->\n  <company-detail v-else @detailClose=\"detailClose\" :detailCompanyID=\"detailCompanyID\" :temp=\"1\"></company-detail>\n</template>\n\n<script>\nimport LinSearch from '@/component/base/search/lin-search'\nimport { Company } from '@/model/company'\nimport { Follow } from '@/model/follow'\nimport CompanyDetail from '@/view/company/company-detail'\n\nexport default {\n  components: {\n    LinSearch,\n    CompanyDetail,\n  },\n  data() {\n    return {\n      showDetail: false, // 是否显示公司详情页\n      tableData: [], // 表格数据\n      totalNums: 0, // 数据总数\n      currentPage: 1, // 当前页数\n      pageCount: 10, // 每页的数据量\n      refreshPagination: true, // 页数增加的时候，因为缓存的缘故，需要刷新 Pagination 组件\n      detailCompanyID: 0, // 公司id\n      searchKeyword: '', // 搜索时输入的关键字\n      keyword: null, // 查询关键字,用于显示搜索提示\n      list: {}, //关注公司时传入的列表数据\n    }\n  },\n  async created() {\n    this.loading = true\n    this.getByState()\n    this.loading = false\n  },\n  watch: {\n    /**\n     * 关键字搜索\n     */\n    searchKeyword(newVal) {\n      if (newVal) {\n        this.keyword = newVal\n        if (this.searchUser) {\n          this.keyword = `${newVal}`\n        }\n      } else {\n        this.keyword = ''\n        this.$refs.searchKeyword.clear()\n      }\n      this.searchCompanyList()\n    },\n  },\n  methods: {\n    async getByState() {\n      const page = this.currentPage - 1\n      const count = this.pageCount\n      // 展示所有审核通过的公司\n      const companys = await Company.getByState(1, page, count)\n      this.tableData = companys.items\n      this.totalNums = companys.total\n    },\n    // 通过查询关键字分页搜索公司列表 \n    async searchCompanyList() {\n      const page = this.currentPage - 1\n      const count = this.pageCount\n      const companys = await Company.getByKeyword(page, count, this.searchKeyword)\n      this.tableData = companys.items\n      this.totalNums = companys.total\n    },\n    // 清空检索\n    async backInit() {\n      this.searchKeyword = ''\n      this.keyword = ''\n      this.tableData = []\n      this.loading = true\n      this.getByState()\n      this.loading = false\n    },\n    /**\n     * 监听输入查询关键字\n     */\n    async onQueryChange(query) {\n      this.searchKeyword = query.trim()\n    },\n    // 切换table页\n    async handleCurrentChange(val) {\n      this.currentPage = val\n      this.loading = true\n      this.getByState()\n      this.loading = false\n    },\n    handleDetail(val) {\n      this.showDetail = true\n      this.detailCompanyID = val.id\n    },\n    // 关注公司\n    async handleFollow(val) {\n      // 获取当前登录求职者的用户id\n      this.list.user_id = this.$store.getters.user.id\n      // 获取当前关注的公司id\n      this.list.company_id = val.id\n      // 调用添加关注的方法\n      const res = await Follow.create(this.list)\n      if (res.code < window.MAX_SUCCESS_CODE) {\n        this.$message.success(`${res.message}`)\n      }\n    },\n    detailClose() {\n      this.showDetail = false\n      this.getByState()\n    },\n  },\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.container {\n  padding: 0 30px;\n\n  .header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n\n    .title {\n      height: 59px;\n      line-height: 59px;\n      color: $parent-title-color;\n      font-size: 25px;\n      font-weight: 500;\n      margin-left: 450px;\n    }\n  }\n\n  .search {\n    height: 52px;\n    width: 100%;\n    background: rgba(57, 99, 188, 0.1);\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    margin-top: 24px;\n    margin-bottom: 24px;\n\n    .search-tip {\n      margin-left: 40px;\n      height: 52px;\n      line-height: 52px;\n      color: #354058;\n      font-size: 14px;\n\n      .search-keyword {\n        color: $theme;\n      }\n\n      .search-num {\n        color: #f4516c;\n      }\n    }\n\n    .search-back {\n      margin: 8px 20px;\n      height: 32px;\n      background: #f4516c;\n      border: none;\n      border-radius: 2px;\n      color: #fff;\n      padding: 0 13px;\n      font-size: 14px;\n      cursor: pointer;\n    }\n  }\n\n  .box {\n    display: flex;\n    justify-content: flex-start;\n    align-items: center;\n    margin-bottom: 15px;\n\n    .left {\n      margin-left: 320px;\n    }\n  }\n\n  .pagination {\n    display: flex;\n    justify-content: flex-end;\n    margin: 30px;\n  }\n}\n</style>\n\n"]}]}