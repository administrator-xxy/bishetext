{"remainingRequest":"C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\src\\view\\interview\\interview-pass.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\src\\view\\interview\\interview-pass.vue","mtime":1656036094000},{"path":"C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\babel.config.js","mtime":1656036094000},{"path":"C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1677772052210},{"path":"C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\node_modules\\babel-loader\\lib\\index.js","mtime":1677771858682},{"path":"C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1677772052210},{"path":"C:\\Users\\Hacker\\Desktop\\zhaop\\resume-master\\resume-master\\recruit-system\\recruit-web\\node_modules\\vue-loader\\lib\\index.js","mtime":1677772060461}],"contextDependencies":[],"result":["import _regeneratorRuntime from \"C:\\\\Users\\\\Hacker\\\\Desktop\\\\zhaop\\\\resume-master\\\\resume-master\\\\recruit-system\\\\recruit-web\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { Interview } from '@/model/interview';\nimport ResumeDetail from '@/view/resume/resume-detail';\nexport default {\n  name: \"ApplicationWait\",\n  components: {\n    ResumeDetail: ResumeDetail\n  },\n  data: function data() {\n    return {\n      resultshow: false,\n      dialogVisible: false,\n      showDetail: false,\n      tableData: [],\n      totalNums: 0,\n      currentPage: 1,\n      pageCount: 10,\n      refreshPagination: true,\n      detailResumeID: 0,\n      applicationID: 0,\n      applicationState: 0,\n      resultData: {\n        id: '',\n        status: '',\n        comments: ''\n      },\n      rules: {\n        status: [{\n          required: true,\n          message: '面试结果不能为空',\n          trigger: 'change'\n        }],\n        comments: [{\n          required: true,\n          message: '请输入面试评价',\n          trigger: 'blur'\n        }]\n      },\n      statusOptions: [{\n        \"label\": \"通过\",\n        \"value\": 2\n      }, {\n        \"label\": \"未通过\",\n        \"value\": 3\n      }]\n    };\n  },\n  created: function () {\n    var _created = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              this.loading = true;\n              this.getByHrId();\n              this.loading = false;\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    function created() {\n      return _created.apply(this, arguments);\n    }\n\n    return created;\n  }(),\n  methods: {\n    onOpen: function onOpen(row) {\n      this.resultshow = true;\n      this.resultData = row;\n    },\n    onClose: function onClose() {\n      this.$refs['resultForm'].resetFields();\n    },\n    close: function close() {\n      this.resultshow = false;\n    },\n    handelConfirm: function () {\n      var _handelConfirm = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var _this = this;\n\n        var res;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                this.$refs['resultForm'].validate(function (valid) {\n                  if (!valid) return;\n\n                  _this.close();\n                });\n                _context2.next = 3;\n                return Interview.updateInterviewResult(this.resultData);\n\n              case 3:\n                res = _context2.sent;\n\n                if (res.code < window.MAX_SUCCESS_CODE) {\n                  this.$message.success(\"\\u5F55\\u5165\\u6210\\u529F\");\n                  this.getByHrId();\n                  this.close();\n                }\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function handelConfirm() {\n        return _handelConfirm.apply(this, arguments);\n      }\n\n      return handelConfirm;\n    }(),\n    getByHrId: function () {\n      var _getByHrId = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var page, count, applications;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                page = this.currentPage - 1;\n                count = this.pageCount; // 未处理：state=0\n\n                _context3.next = 4;\n                return Interview.getByHrId(this.$store.getters.user.id, 0);\n\n              case 4:\n                applications = _context3.sent;\n                this.tableData = applications.items;\n                this.tableData = this.tableData.filter(function (item) {\n                  return item.status !== 0;\n                });\n                this.totalNums = applications.total;\n\n              case 8:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function getByHrId() {\n        return _getByHrId.apply(this, arguments);\n      }\n\n      return getByHrId;\n    }(),\n    // 切换table页\n    handleCurrentChange: function () {\n      var _handleCurrentChange = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(val) {\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                this.currentPage = val;\n                this.loading = true;\n                this.getByHrId();\n                this.loading = false;\n\n              case 4:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function handleCurrentChange(_x) {\n        return _handleCurrentChange.apply(this, arguments);\n      }\n\n      return handleCurrentChange;\n    }(),\n    handleDetail: function handleDetail(val) {\n      this.showDetail = true;\n      this.detailResumeID = val.resume_id;\n      this.applicationID = val.id;\n      this.applicationState = val.state;\n    },\n    handlePass: function () {\n      var _handlePass = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(val) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return Interview.updateState(val.id, 1);\n\n              case 2:\n                res = _context5.sent;\n\n                if (res.code < window.MAX_SUCCESS_CODE) {\n                  this.$message.success(\"\".concat(res.message)); // 刷新页面\n\n                  this.getByHrId();\n                }\n\n              case 4:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function handlePass(_x2) {\n        return _handlePass.apply(this, arguments);\n      }\n\n      return handlePass;\n    }(),\n    handleFail: function () {\n      var _handleFail = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(val) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.next = 2;\n                return Application.updateState(val.id, 2);\n\n              case 2:\n                res = _context6.sent;\n\n                if (res.code < window.MAX_SUCCESS_CODE) {\n                  this.$message.success(\"\".concat(res.message)); // 刷新页面\n\n                  this.getByHrId();\n                }\n\n              case 4:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function handleFail(_x3) {\n        return _handleFail.apply(this, arguments);\n      }\n\n      return handleFail;\n    }(),\n    rowClick: function rowClick() {},\n    detailClose: function detailClose() {\n      this.showDetail = false;\n      this.getByHrId();\n    }\n  }\n};",{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkEA,SACAA,SADA,QAEA,mBAFA;AAGA;AAEA;AACAC,yBADA;AAEAC;AACAC;AADA,GAFA;AAKAC,MALA,kBAKA;AACA;AACAC,uBADA;AAEAC,0BAFA;AAGAC,uBAHA;AAIAC,mBAJA;AAKAC,kBALA;AAMAC,oBANA;AAOAC,mBAPA;AAQAC,6BARA;AASAC,uBATA;AAUAC,sBAVA;AAWAC,yBAXA;AAYAC;AACAC,cADA;AAEAC,kBAFA;AAGAC;AAHA,OAZA;AAiBAC;AACAF;AACAG,wBADA;AAEAC,6BAFA;AAGAC;AAHA,UADA;AAMAJ;AACAE,wBADA;AAEAC,4BAFA;AAGAC;AAHA;AANA,OAjBA;AA6BAC;AACA,qBADA;AAEA;AAFA,SAGA;AACA,sBADA;AAEA;AAFA,OAHA;AA7BA;AAqCA,GA3CA;AA4CAC,SA5CA;AAAA;AAAA;AAAA;AAAA;AAAA;AA6CA;AACA;AACA;;AA/CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAiDAC;AACAC,UADA,kBACAC,GADA,EACA;AACA;AACA;AACA,KAJA;AAKAC,WALA,qBAKA;AACA;AACA,KAPA;AAQAC,SARA,mBAQA;AACA;AACA,KAVA;AAWAC,iBAXA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AACA;;AACA;AACA,iBAHA;AAZA;AAAA,uBAgBA/B,gDAhBA;;AAAA;AAgBAgC,mBAhBA;;AAiBA;AACA;AACA;AACA;AACA;;AArBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAuBAC,aAvBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAwBAC,oBAxBA,GAwBA,oBAxBA;AAyBAC,qBAzBA,GAyBA,cAzBA,EA0BA;;AA1BA;AAAA,uBA2BAnC,mDA3BA;;AAAA;AA2BAoC,4BA3BA;AA4BA;AACA;AACA;AACA,iBAFA;AAGA;;AAhCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAkCA;AACAC,uBAnCA;AAAA,4GAmCAC,GAnCA;AAAA;AAAA;AAAA;AAAA;AAoCA;AACA;AACA;AACA;;AAvCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAyCAC,gBAzCA,wBAyCAD,GAzCA,EAyCA;AACA;AACA;AACA;AACA;AACA,KA9CA;AA+CAE,cA/CA;AAAA,mGA+CAF,GA/CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAgDAtC,gCAhDA;;AAAA;AAgDAgC,mBAhDA;;AAiDA;AACA,gEADA,CAEA;;AACA;AACA;;AArDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAuDAS,cAvDA;AAAA,mGAuDAH,GAvDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAwDAI,kCAxDA;;AAAA;AAwDAV,mBAxDA;;AAyDA;AACA,gEADA,CAEA;;AACA;AACA;;AA7DA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AA+DAW,YA/DA,sBA+DA,EA/DA;AAgEAC,eAhEA,yBAgEA;AACA;AACA;AACA;AAnEA;AAjDA","names":["Interview","name","components","ResumeDetail","data","resultshow","dialogVisible","showDetail","tableData","totalNums","currentPage","pageCount","refreshPagination","detailResumeID","applicationID","applicationState","resultData","id","status","comments","rules","required","message","trigger","statusOptions","created","methods","onOpen","row","onClose","close","handelConfirm","res","getByHrId","page","count","applications","handleCurrentChange","val","handleDetail","handlePass","handleFail","Application","rowClick","detailClose"],"sourceRoot":"src/view/interview","sources":["interview-pass.vue"],"sourcesContent":["<template>\n  <div class=\"container\" v-if=\"!showDetail\">\n    <div class=\"header\">\n      <div class=\"title\">查看面试名单</div>\n    </div>\n    <el-table stripe v-loading=\"loading\" :data=\"tableData\">\n      <el-table-column prop=\"nickname\" label=\"名字\"></el-table-column>\n      <el-table-column prop=\"tel\" label=\"手机\"></el-table-column>\n      <el-table-column prop=\"email\" label=\"邮箱\"></el-table-column>\n      <el-table-column prop=\"title\" label=\"申请职位\"></el-table-column>\n      <el-table-column label=\"面试状态\">\n        <template slot-scope=\"scope\">\n          <!-- <p v-if=\"scope.row.status == 0\">未开始</p>\n          <p v-if=\"scope.row.status == 1\" :style=\"{ color: 'green' }\">通知面试</p>\n          <p v-if=\"scope.row.status == 2\" :style=\"{ color: 'green' }\">面试通过</p>\n          <p v-if=\"scope.row.status == 3\" :style=\"{ color: 'red' }\">面试未通过</p> -->\n          <el-tag v-if=\"scope.row.status == 0\" type=\"info\">未开始</el-tag>\n          <el-tag v-if=\"scope.row.status == 1\" type=\"success\">通知面试</el-tag>\n          <el-tag v-if=\"scope.row.status == 2\" type=\"success\">面试通过</el-tag>\n          <el-tag v-if=\"scope.row.status == 3\" type=\"danger\">面试未通过</el-tag>\n        </template>\n      </el-table-column>\n      <el-table-column fixed=\"right\" label=\"操作\" width=\"400\">\n        <template slot-scope=\"scope\">\n          <el-button @click.prevent=\"handleDetail(scope.row)\" plain round size=\"small\">查看简历</el-button>\n          <el-button @click.prevent=\"onOpen(scope.row)\" type=\"success\" round plain size=\"small\"\n            v-if=\"scope.row.status < 2\">\n            录入面试结果</el-button>\n          <el-button @click.prevent=\"onOpen(scope.row)\" type=\"info\" round plain size=\"small\" v-else>重新录入结果</el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n    <!-- 录入面试结果 -->\n    <div>\n      <el-dialog :visible.sync=\"resultshow\" v-on=\"$listeners\" title=\"录入面试结果\">\n        <el-form ref=\"resultForm\" :model=\"resultData\" :rules=\"rules\" size=\"small\" label-width=\"100px\"\n          label-position=\"left\">\n          <el-form-item label=\"面试结果\" prop=\"status\">\n            <el-radio-group v-model=\"resultData.status\" size=\"small\">\n              <el-radio v-for=\"(item, index) in statusOptions\" :key=\"index\" :label=\"item.value\"\n                :disabled=\"item.disabled\">{{ item.label }}</el-radio>\n            </el-radio-group>\n          </el-form-item>\n          <el-form-item label=\"面试评价\" prop=\"comments\">\n            <el-input v-model=\"resultData.comments\" type=\"textarea\" placeholder=\"请输入面试评价\"\n              :autosize=\"{ minRows: 4, maxRows: 4 }\" :style=\"{ width: '100%' }\"></el-input>\n          </el-form-item>\n        </el-form>\n        <div slot=\"footer\">\n          <el-button @click=\"close\">取消</el-button>\n          <el-button type=\"primary\" @click=\"handelConfirm\">确定</el-button>\n        </div>\n      </el-dialog>\n    </div>\n    <div class=\"pagination\">\n      <el-pagination @current-change=\"handleCurrentChange\" :background=\"true\" :page-size=\"pageCount\"\n        :current-page=\"currentPage\" v-if=\"refreshPagination\" layout=\"prev, pager, next, jumper\" :total=\"totalNums\">\n      </el-pagination>\n    </div>\n  </div>\n  <!-- 简历详情页 -->\n  <resume-detail v-else @detailClose=\"detailClose\" :detailResumeID=\"detailResumeID\" :applicationID=\"applicationID\"\n    :applicationState=\"applicationState\"></resume-detail>\n</template>\n\n<script>\nimport {\n  Interview\n} from '@/model/interview'\nimport ResumeDetail from '@/view/resume/resume-detail'\n\nexport default {\n  name: \"ApplicationWait\",\n  components: {\n    ResumeDetail\n  },\n  data() {\n    return {\n      resultshow: false,\n      dialogVisible: false,\n      showDetail: false,\n      tableData: [],\n      totalNums: 0,\n      currentPage: 1,\n      pageCount: 10,\n      refreshPagination: true,\n      detailResumeID: 0,\n      applicationID: 0,\n      applicationState: 0,\n      resultData: {\n        id: '',\n        status: '',\n        comments: '',\n      },\n      rules: {\n        status: [{\n          required: true,\n          message: '面试结果不能为空',\n          trigger: 'change'\n        }],\n        comments: [{\n          required: true,\n          message: '请输入面试评价',\n          trigger: 'blur'\n        }],\n      },\n      statusOptions: [{\n        \"label\": \"通过\",\n        \"value\": 2\n      }, {\n        \"label\": \"未通过\",\n        \"value\": 3\n      }],\n    }\n  },\n  async created() {\n    this.loading = true\n    this.getByHrId()\n    this.loading = false\n  },\n  methods: {\n    onOpen(row) {\n      this.resultshow = true\n      this.resultData = row\n    },\n    onClose() {\n      this.$refs['resultForm'].resetFields()\n    },\n    close() {\n      this.resultshow = false\n    },\n    async handelConfirm() {\n      this.$refs['resultForm'].validate(valid => {\n        if (!valid) return\n        this.close()\n      })\n      const res = await Interview.updateInterviewResult(this.resultData)\n      if (res.code < window.MAX_SUCCESS_CODE) {\n        this.$message.success(`录入成功`)\n        this.getByHrId()\n        this.close()\n      }\n    },\n    async getByHrId() {\n      const page = this.currentPage - 1\n      const count = this.pageCount\n      // 未处理：state=0\n      const applications = await Interview.getByHrId(this.$store.getters.user.id, 0)\n      this.tableData = applications.items\n      this.tableData = this.tableData.filter((item) => {\n        return item.status !== 0\n      });\n      this.totalNums = applications.total\n    },\n    // 切换table页\n    async handleCurrentChange(val) {\n      this.currentPage = val\n      this.loading = true\n      this.getByHrId()\n      this.loading = false\n    },\n    handleDetail(val) {\n      this.showDetail = true\n      this.detailResumeID = val.resume_id\n      this.applicationID = val.id\n      this.applicationState = val.state\n    },\n    async handlePass(val) {\n      const res = await Interview.updateState(val.id, 1)\n      if (res.code < window.MAX_SUCCESS_CODE) {\n        this.$message.success(`${res.message}`)\n        // 刷新页面\n        this.getByHrId()\n      }\n    },\n    async handleFail(val) {\n      const res = await Application.updateState(val.id, 2)\n      if (res.code < window.MAX_SUCCESS_CODE) {\n        this.$message.success(`${res.message}`)\n        // 刷新页面\n        this.getByHrId()\n      }\n    },\n    rowClick() { },\n    detailClose() {\n      this.showDetail = false\n      this.getByHrId()\n    },\n  },\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.container {\n  padding: 0 30px;\n\n  .header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n\n    .title {\n      height: 59px;\n      line-height: 59px;\n      color: $parent-title-color;\n      font-size: 16px;\n      font-weight: 500;\n    }\n  }\n\n  .pagination {\n    display: flex;\n    justify-content: flex-end;\n    margin: 20px;\n  }\n}\n</style>\n"]}]}